{"remainingRequest":"/var/www/html/boss-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/boss-web/src/components/forms/AppointmentForm.vue?vue&type=style&index=0&id=29c537bb&scoped=true&lang=css&","dependencies":[{"path":"/var/www/html/boss-web/src/components/forms/AppointmentForm.vue","mtime":1606242937935},{"path":"/var/www/html/boss-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5mb3JtLXNlY3Rpb24gewogIHBhZGRpbmc6IDE1cHg7Cn0K"},{"version":3,"sources":["AppointmentForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0JA;AACA;AACA","file":"AppointmentForm.vue","sourceRoot":"src/components/forms","sourcesContent":["<template>\n  <div class=\"container form-section\">\n    <div class=\"flex-column\">\n      <!-- <div class=\"meta-input-label mt10 mb10\">\n        Appointment Type:\n      </div> -->\n      <!-- <base-select\n        placeholder=\"--- Select from the options ---\"\n        :options=\"appointmentTypeOptions\"\n        v-model=\"appointmentType\"\n        name=\"selectOptions\"\n        class=\"mb15\"\n      /> -->\n      <div class=\"meta-input-label mt10 mb10\">\n        Batch:\n      </div>\n      <base-select\n        placeholder=\"--- Select from the options ---\"\n        :options=\"batchOptions\"\n        v-model=\"batch\"\n        name=\"selectOptions\"\n        class=\"mb15\"\n      />\n      <button-block\n        @click.native=\"setAppointment()\"\n        v-if=\"appointmentAction === 'add'\"\n        >Submit</button-block\n      >\n      <button-block\n        @click.native=\"updateAppointment()\"\n        v-if=\"appointmentAction === 'update'\"\n        >Submit</button-block\n      >\n    </div>\n  </div>\n</template>\n\n<script>\nimport ButtonBlock from \"@/components/ButtonBlock\";\nimport BaseSelect from \"@/components/forms/BaseSelect\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"AppointmentForm\",\n  components: {\n    BaseSelect,\n    ButtonBlock,\n  },\n  computed: {\n    ...mapGetters([\n      \"currentDate\",\n      \"isAppointmentSuccess\",\n      \"appointmentError\",\n      \"currentSoa\",\n      \"currentAppointment\",\n      \"appointmentAction\",\n      \"currentSoaObj\",\n    ]),\n  },\n  data() {\n    return {\n      appointmentType: \"\",\n      batch: \"\",\n      appointmentTypeOptions: [\n        {\n          label: \"Building Permit Payment\",\n          value: \"Building Permit Payment\",\n        },\n        {\n          label: \"Business Permit Payment\",\n          value: \"Business Permit Payment\",\n        },\n      ],\n\n      batchOptions: [\n        {\n          label: \"Batch 1 ( 8:00 AM - 1:00 PM )\",\n          value: \"batch_1\",\n        },\n        {\n          label: \"Batch 2 ( 1:00 PM - 5:00 PM )\",\n          value: \"batch_2\",\n        },\n      ],\n    };\n  },\n  methods: {\n    async setAppointment() {\n      console.log(\"current soa type\", this.currentSoaObj);\n      let title =\n        this.currentSoaObj.application_type === \"business\"\n          ? \"Business Permit Payment\"\n          : this.currentSoaObj.application_type === \"building\"\n          ? \"Building Permit Payment\"\n          : \"Real Property Payment\";\n      let payload = {\n        title: title,\n        batch: this.batch,\n        appointment_date: this.currentDate,\n        soa: this.currentSoaObj.id,\n      };\n      await this.$store.commit(\"setLoading\", true);\n      await this.$store.dispatch(\"addAppointment\", payload);\n      if (this.isAppointmentSuccess) {\n        await this.$store.commit(\"setLoading\", false);\n        this.$modal.hide(\"appointmentModal\");\n        this.$swal({\n          title: \"Success!\",\n          text: \"Appointment was submitted successfully.\",\n          icon: \"success\",\n        });\n        this.$router.push({ name: \"AppointmentSlip\" });\n      } else {\n        await this.$store.commit(\"setLoading\", false);\n        this.$modal.hide(\"appointmentModal\");\n        this.$swal({\n          title: \"Failed!\",\n          text: this.appointmentError,\n          icon: \"error\",\n        });\n      }\n    },\n    async updateAppointment() {\n      let payload = this.currentAppointment;\n      payload.old_appointment_date = this.currentAppointment.appointment_date;\n      payload.appointment_date = this.currentDate;\n      payload.batch = this.batch;\n      payload.old_batch = this.currentAppointment.batch;\n      payload.soa = this.currentSoaObj.id;\n      await this.$store.commit(\"setLoading\", true);\n      await this.$store.dispatch(\"updateAppointment\", payload);\n      if (this.isAppointmentSuccess) {\n        await this.$store.commit(\"setLoading\", false);\n        this.$modal.hide(\"appointmentModal\");\n        this.$swal({\n          title: \"Success!\",\n          text: \"Appointment was rescheduled successfully.\",\n          icon: \"success\",\n        });\n        this.$router.push({ name: \"AppointmentSlip\" });\n      } else {\n        await this.$store.commit(\"setLoading\", false);\n        this.$modal.hide(\"appointmentModal\");\n        this.$swal({\n          title: \"Failed!\",\n          text: this.appointmentError,\n          icon: \"error\",\n        });\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.form-section {\n  padding: 15px;\n}\n</style>\n"]}]}