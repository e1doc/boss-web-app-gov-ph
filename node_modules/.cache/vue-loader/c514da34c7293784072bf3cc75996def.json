{"remainingRequest":"/var/www/html/boss-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/boss-web/src/components/tables/InquiryTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/boss-web/src/components/tables/InquiryTable.vue","mtime":1605179000987},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICJ2dWV4IjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJJbnF1aXJ5VGFibGUiLAogIGNvbXB1dGVkOiB7CiAgICAuLi5tYXBHZXR0ZXJzKFsiY3VycmVudFR5cGUiLCAiY3VycmVudFRhYmxlIiAsImlucXVpcmllcyIsICJyZW1hcmtzIiwicGFnZUNvdW50Il0pLAogIH0sCiAgbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0QWxsSW5xdWlyaWVzKCk7CiAgICBjb25zb2xlLmxvZyh0aGlzLnJlbWFya3MubGVuZ3RoKQogIH0sCiAgd2F0Y2g6IHsKICAgIGN1cnJlbnRUeXBlOnsKICAgICAgaGFuZGxlcihzdGF0dXMpIHsKICAgICAgICB0aGlzLmdldEFsbElucXVpcmllcygpOwogICAgICAgIHRoaXMuZ2V0QWxsUmVtYXJrcygpCiAgICAgIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGFzeW5jIGdldEFsbElucXVpcmllcyhwYWdlTnVtID0gMSkgewogICAgICBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgiZ2V0QWxsQWRtaW5JbnF1aXJpZXMiLCB7IHBhZ2U6IHBhZ2VOdW0sIGZpbHRlcl9ieTogdGhpcy5jdXJyZW50VHlwZSB9KTsKICAgIH0sCiAgIGFzeW5jIGdldEFsbFJlbWFya3MocGFnZU51bSA9IDEpIHsKICAgICAgYXdhaXQgdGhpcy4kc3RvcmUuZGlzcGF0Y2goImdldEFsbEFkbWluUmVtYXJrcyIsIHsgcGFnZTogcGFnZU51bSwgZmlsdGVyX2J5OiB0aGlzLmN1cnJlbnRUeXBlIH0pOwogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["InquiryTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"InquiryTable.vue","sourceRoot":"src/components/tables","sourcesContent":["<template>\n  <section>\n    <div v-if=\"currentTable === 'inquiries'\">\n      <div class=\"thead\">\n        <div class=\"th date\">DATE</div>\n        <div class=\"th subject\">SUBJECT</div>\n        <div class=\"th sender\">SENDER</div>\n        <div class=\"th status\">STATUS</div>\n        <div class=\"th actions\">ACTIONS</div>\n      </div>\n      <div class=\"tbody\">\n        <div class=\"tr\" v-for=\"(inquiry, index) in inquiries\" :key=\"index\">\n          <div class=\"td date\">\n            {{ inquiry.created_at | moment(\"MMMM DD YYYY\") }}\n          </div>\n          <div class=\"td subject\">{{ inquiry.subject }}</div>\n          <div class=\"td sender\">{{inquiry.sender.first_name}} {{inquiry.sender.last_name}}</div>\n          <div class=\"td status\">{{ inquiry.status }}</div>\n          <div class=\"td actions\">\n            <router-link :to=\"{name:'ReplyInquiry', params:{thread: inquiry.id}}\">\n              <font-awesome-icon icon=\"envelope-open-text\" class=\"mr5 icon\" />\n              READ\n            </router-link>\n          </div>\n        </div>\n      </div>\n      <div class=\"tbody\" v-if=\"inquiries.length < 1 && currentTable === 'inquiries'\">\n        <div class=\"tr\">\n          <div class=\"td\">No data available</div>\n        </div>\n      </div>\n    </div>\n        <div v-if=\"currentTable === 'remarks'\">\n      <div class=\"thead\">\n        <div class=\"th date\">DATE</div>\n        <div class=\"th subject\">SUBJECT</div>\n        <div class=\"th sender\">SENDER</div>\n        <div class=\"th status\">STATUS</div>\n        <div class=\"th actions\">ACTIONS</div>\n      </div>\n      <div class=\"tbody\"  v-if=\"remarks.length > 0\">\n        <div class=\"tr\" v-for=\"(remark, index) in remarks\" :key=\"index\">\n          <div class=\"td date\">\n            {{ remark.created_at | moment(\"MMMM DD YYYY\") }}\n          </div>\n          <div class=\"td subject\">{{ remark.subject }}</div>\n          <div class=\"td sender\">{{ remark.sender.first_name}} {{remark.sender.last_name}}</div>\n          <div class=\"td status\">{{ remark.status }}</div>\n          <div class=\"td actions\">\n            <router-link :to=\"{name:'ReplyInquiry', params:{thread: remark.id}}\">\n              <font-awesome-icon icon=\"envelope-open-text\" class=\"mr5 icon\" />\n              READ\n            </router-link>\n          </div>\n        </div>\n      </div>\n       <div class=\"tbody\" v-if=\"remarks.length < 1 && currentTable === 'remarks'\">\n        <div class=\"tr\">\n          <div class=\"td\">No data available</div>\n        </div>\n      </div>\n    </div>\n    <paginate\n      v-if=\"currentTable === 'inquiries' && inquiries.length > 9\"\n      :page-count=\"pageCount\"\n      :prev-text=\"'Prev'\"\n      :next-text=\"'Next'\"\n      :container-class=\"'pagination'\"\n      :page-class=\"'page-item'\"\n      :click-handler=\"getAllInquiries\"\n    >\n    </paginate>\n        <paginate\n      v-if=\"currentTable === 'remarks' && remarks.length > 9\"\n      :page-count=\"pageCount\"\n      :prev-text=\"'Prev'\"\n      :next-text=\"'Next'\"\n      :container-class=\"'pagination'\"\n      :page-class=\"'page-item'\"\n      :click-handler=\"getAllRemarks\"\n    >\n    </paginate>\n  </section>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"InquiryTable\",\n  computed: {\n    ...mapGetters([\"currentType\", \"currentTable\" ,\"inquiries\", \"remarks\",\"pageCount\"]),\n  },\n  mounted() {\n    this.getAllInquiries();\n    console.log(this.remarks.length)\n  },\n  watch: {\n    currentType:{\n      handler(status) {\n        this.getAllInquiries();\n        this.getAllRemarks()\n      }\n    }\n  },\n  methods: {\n    async getAllInquiries(pageNum = 1) {\n      await this.$store.dispatch(\"getAllAdminInquiries\", { page: pageNum, filter_by: this.currentType });\n    },\n   async getAllRemarks(pageNum = 1) {\n      await this.$store.dispatch(\"getAllAdminRemarks\", { page: pageNum, filter_by: this.currentType });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\nsection {\n  width: 100%;\n}\n\n.date{\n    width: 14%;\n    text-transform: uppercase;\n}\n\n.subject,\n.sender{\n    width: 30%;\n    text-transform: uppercase;\n}\n\n// .content {\n//   width: 28%;\n// }\n\n.status {\n  width: 13%;\n  text-transform: uppercase;\n}\n.actions {\n  width: 13%;\n  text-transform: uppercase;\n}\n\n.thead {\n  display: flex;\n  flex-direction: row;\n  background: #ffffff;\n  border-radius: 8px 8px 0px 0px;\n  border-bottom: 2px #e23a36 solid;\n  box-shadow: 0px 10px 20px rgba(127, 127, 127, 0.1);\n  .th {\n    font-size: 13px;\n    font-weight: bold;\n    text-align: center;\n    padding: 20px 0px;\n  }\n}\n\n.tbody {\n  flex-direction: column;\n  margin-top: 10px;\n  .tr {\n    display: flex;\n    flex-direction: row;\n    background: #ffffff;\n    box-shadow: 0px 10px 20px rgba(127, 127, 127, 0.1);\n    border-radius: 8px;\n    margin-top: 3px;\n    padding-left: 10px;\n    padding-right: 10px;\n    .td {\n      font-size: 14px;\n      font-family: \"Proxima Nova Rg\";\n      text-align: center;\n      padding: 17px 0px;\n    }\n    .td.actions {\n      color: #1792e6;\n      font-size: 13px;\n      font-weight: 700;\n      font-family: Proxima Nova Rg;\n      cursor: pointer;\n      a {\n        color: #1792e6;\n        text-decoration: none;\n        transition: 0.4s;\n      }\n      .icon {\n        font-size: 18px;\n      }\n    }\n    .td.actions a:hover {\n      text-decoration: underline;\n    }\n  }\n}\n</style>\n"]}]}