{"remainingRequest":"/var/www/html/boss-web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/html/boss-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/boss-web/src/pages/UserReplyInquiry.vue?vue&type=template&id=4a6458e8&scoped=true&","dependencies":[{"path":"/var/www/html/boss-web/src/pages/UserReplyInquiry.vue","mtime":1620076411832},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}