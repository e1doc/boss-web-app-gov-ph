{"remainingRequest":"/var/www/html/boss-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/boss-web/src/pages/admin/ApproveBusinessApplication.vue?vue&type=template&id=ad1cbc88&scoped=true&","dependencies":[{"path":"/var/www/html/boss-web/src/pages/admin/ApproveBusinessApplication.vue","mtime":1611297473582},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}