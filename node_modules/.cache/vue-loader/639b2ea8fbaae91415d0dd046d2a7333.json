{"remainingRequest":"/var/www/html/boss-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/boss-web/src/pages/AddAppointment.vue?vue&type=style&index=0&id=5dbc1ce2&scoped=true&lang=scss&","dependencies":[{"path":"/var/www/html/boss-web/src/pages/AddAppointment.vue","mtime":1606242937935},{"path":"/var/www/html/boss-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubWV0YS1jYWxlbmRhci1jb250YWluZXIgewogIHBhZGRpbmc6IDI1cHggMTVweDsKfQo="},{"version":3,"sources":["AddAppointment.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqJA;AACA;AACA","file":"AddAppointment.vue","sourceRoot":"src/pages","sourcesContent":["<template>\n  <section>\n    <modal name=\"appointmentModal\" width=\"50%\" height=\"auto\" :adaptive=\"true\"\n      ><appointment-form\n    /></modal>\n    <div class=\"container\">\n      <div class=\"meta-calendar-container\">\n        <FullCalendar :options=\"calendarOptions\" ref=\"appointmentCalendar\" />\n      </div>\n    </div>\n  </section>\n</template>\n\n<script>\nimport FullCalendar from \"@fullcalendar/vue\";\nimport dayGridPlugin from \"@fullcalendar/daygrid\";\nimport interactionPlugin from \"@fullcalendar/interaction\";\nimport AppointmentForm from \"@/components/forms/AppointmentForm\";\nimport moment from \"moment-timezone\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"AddAppointment\",\n  components: {\n    FullCalendar,\n    AppointmentForm,\n  },\n  computed: {\n    ...mapGetters([\"appointments\", \"appointmentLimits\"]),\n  },\n  watch: {\n    appointments: {\n      deep: true,\n      handler(status) {\n        this.calendarOptions.events = [];\n        this.setUpAppointments();\n      },\n    },\n  },\n  data() {\n    return {\n      events: [],\n\n      calendarOptions: {\n        plugins: [dayGridPlugin, interactionPlugin],\n        initialView: \"dayGridMonth\",\n        weekends: false,\n        selectable: true,\n        events: [],\n        dateClick: this.handleDateClick,\n        dayMaxEvents: true,\n        views: {\n          dayGrid: {\n            dayRender: function(date, cell) {\n              if (date < moment(new Date(Date.now())).endOf(\"day\")) {\n                $(cell).addClass(\"disabled\");\n              }\n            },\n            dayMaxEvents: 2, // adjust to 6 only for timeGridWeek/timeGridDay\n          },\n        },\n        customButtons: {\n          prev: {\n            // this overrides the prev button\n            text: \"PREV\",\n            click: () => {\n              let calendarApi = this.$refs.appointmentCalendar.getApi();\n              calendarApi.prev();\n              this.getLimits();\n            },\n          },\n          next: {\n            // this overrides the next button\n            text: \"NEXT\",\n            click: () => {\n              let calendarApi = this.$refs.appointmentCalendar.getApi();\n              calendarApi.next();\n              this.getLimits();\n            },\n          },\n        },\n        headerToolbar: {\n          left: \"title\",\n          right: \"today, prev,next\",\n        },\n      },\n    };\n  },\n  mounted() {\n    // this.setUpAppointments();\n    this.getLimits();\n    this.$store.commit(\"setCurrentPaymentType\", \"landbank\");\n  },\n  methods: {\n    async getLimits() {\n      this.$store.commit(\"setLoading\", true);\n      let calendarApi = this.$refs.appointmentCalendar.getApi();\n      let currentDate = calendarApi.getDate();\n      let month = currentDate.getMonth();\n      await this.$store.dispatch(\"getUserAppointmentLimits\", month);\n      this.$store.commit(\"setLoading\", false);\n      if (this.appointmentLimits.length > 0) {\n        this.calendarOptions.events = [];\n        let currentDate = moment.tz(new Date(Date.now()), \"Asia/Manila\");\n\n        this.appointmentLimits.forEach((item) => {\n          let date = moment.tz(item.date, \"Asia/Manila\");\n          if (date.isAfter(currentDate.endOf(\"day\"))) {\n            let remaining_event = {\n              id: item.id,\n              title:\n                item.batch === \"batch_1\"\n                  ? `Batch 1: ${item.remaining} slots`\n                  : `Batch 2: ${item.remaining} slots`,\n              start: item.date,\n              allDay: true,\n              backgroundColor: item.remaining < 1 ? \"#e23a36\" : \"#2ecc71\",\n              borderColor: item.remaining < 1 ? \"#e23a36\" : \"#2ecc71\",\n            };\n            this.calendarOptions.events.push(remaining_event);\n          }\n        });\n      }\n    },\n    handleDateClick(info) {\n      let date = moment(info.date).format();\n      let currentDate = moment.tz(new Date(Date.now()), \"Asia/Manila\");\n      let selectedDate = moment.tz(info.date, \"Asia/Manila\");\n      this.$store.commit(\"setCurrentDate\", date);\n      this.$modal.show(\"appointmentModal\");\n    },\n    setUpAppointments() {\n      if (this.appointments.length > 0) {\n        this.appointments.forEach((item) => {\n          let event = {\n            id: item.id,\n            title: `${item.title}`,\n            start: moment\n              .tz(item.appointment_date, \"Asia/Manila\")\n              .format(\"YYYY-MM-DD\"),\n          };\n          this.calendarOptions.events.push(event);\n        });\n      }\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.meta-calendar-container {\n  padding: 25px 15px;\n}\n</style>\n"]}]}