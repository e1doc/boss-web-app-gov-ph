{"remainingRequest":"/var/www/html/boss-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/boss-web/src/components/tables/InquiryTable.vue?vue&type=style&index=0&id=406d8771&lang=scss&scoped=true&","dependencies":[{"path":"/var/www/html/boss-web/src/components/tables/InquiryTable.vue","mtime":1612973493955},{"path":"/var/www/html/boss-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpzZWN0aW9uIHsKICB3aWR0aDogMTAwJTsKfQoKLmRhdGUgewogIHdpZHRoOiAxNCU7CiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsKfQoKLnN1YmplY3QgewogIHdpZHRoOiAzMCU7CiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsKfQouc2VuZGVyIHsKICB3aWR0aDogMjUlOwogIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7Cn0KCi8vIC5jb250ZW50IHsKLy8gICB3aWR0aDogMjglOwovLyB9Cgouc3RhdHVzIHsKICB3aWR0aDogMTMlOwogIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7Cn0KLmFjdGlvbnMgewogIHdpZHRoOiAxMyU7CiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsKfQoKLmRlcHQgewogIHdpZHRoOiAxOCU7CiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsKfQoKLnRoZWFkIHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiByb3c7CiAgYmFja2dyb3VuZDogI2ZmZmZmZjsKICBib3JkZXItcmFkaXVzOiA4cHggOHB4IDBweCAwcHg7CiAgYm9yZGVyLWJvdHRvbTogMnB4ICNlMjNhMzYgc29saWQ7CiAgYm94LXNoYWRvdzogMHB4IDEwcHggMjBweCByZ2JhKDEyNywgMTI3LCAxMjcsIDAuMSk7CiAgLnRoIHsKICAgIGZvbnQtc2l6ZTogMTNweDsKICAgIGZvbnQtd2VpZ2h0OiBib2xkOwogICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgcGFkZGluZzogMjBweCAwcHg7CiAgfQp9CgoudGJvZHkgewogIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47CiAgbWFyZ2luLXRvcDogMTBweDsKICAudHIgewogICAgZGlzcGxheTogZmxleDsKICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7CiAgICBiYWNrZ3JvdW5kOiAjZmZmZmZmOwogICAgYm94LXNoYWRvdzogMHB4IDEwcHggMjBweCByZ2JhKDEyNywgMTI3LCAxMjcsIDAuMSk7CiAgICBib3JkZXItcmFkaXVzOiA4cHg7CiAgICBtYXJnaW4tdG9wOiAzcHg7CiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7CiAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4OwogICAgLnRkIHsKICAgICAgZm9udC1zaXplOiAxNHB4OwogICAgICBmb250LWZhbWlseTogIlByb3hpbWEgTm92YSBSZyI7CiAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKICAgICAgcGFkZGluZzogMTdweCAwcHg7CiAgICB9CiAgICAudGQuYWN0aW9ucyB7CiAgICAgIGNvbG9yOiAjMTc5MmU2OwogICAgICBmb250LXNpemU6IDEzcHg7CiAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7CiAgICAgIGZvbnQtZmFtaWx5OiBQcm94aW1hIE5vdmEgUmc7CiAgICAgIGN1cnNvcjogcG9pbnRlcjsKICAgICAgYSB7CiAgICAgICAgY29sb3I6ICMxNzkyZTY7CiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwogICAgICAgIHRyYW5zaXRpb246IDAuNHM7CiAgICAgIH0KICAgICAgLmljb24gewogICAgICAgIGZvbnQtc2l6ZTogMThweDsKICAgICAgfQogICAgfQogICAgLnRkLmFjdGlvbnMgYTpob3ZlciB7CiAgICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOwogICAgfQogIH0KfQoubWV0YS1uby1kYXRhIHsKICB3aWR0aDogMTAwJSAhaW1wb3J0YW50Owp9Cg=="},{"version":3,"sources":["InquiryTable.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0QA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"InquiryTable.vue","sourceRoot":"src/components/tables","sourcesContent":["<template>\n  <section>\n    <!-- INQUIRY TABLE -->\n    <div v-if=\"currentTable === 'inquiries'\">\n      <div class=\"thead\">\n        <div class=\"th date\">DATE</div>\n        <div class=\"th subject\">SUBJECT</div>\n        <div class=\"th sender\">SENDER</div>\n        <div class=\"th dept\">DEPARTMENT</div>\n        <div class=\"th status\">STATUS</div>\n        <div class=\"th actions\">ACTIONS</div>\n      </div>\n      <div class=\"tbody\">\n        <div class=\"tr\" v-for=\"(inquiry, index) in inquiries\" :key=\"index\">\n          <div class=\"td date\">\n            {{ inquiry.created_at | moment(\"MMMM DD YYYY\") }}\n          </div>\n          <div class=\"td subject\">\n            {{ inquiry.subject }}\n          </div>\n          <div class=\"td sender\">\n            {{ inquiry.sender.first_name }} {{ inquiry.sender.last_name }}\n          </div>\n          <div class=\"td dept\">\n            {{ inquiry.department ? inquiry.department : \"N/A\" }}\n          </div>\n          <div class=\"td status\">\n            {{ inquiry.status }}\n          </div>\n          <div class=\"td actions\">\n            <router-link\n              :to=\"{ name: 'ReplyInquiry', params: { thread: inquiry.id } }\"\n            >\n              <font-awesome-icon icon=\"envelope-open-text\" class=\"mr5 icon\" />\n              READ\n            </router-link>\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"tbody\"\n        v-if=\"inquiries.length < 1 && currentTable === 'inquiries'\"\n      >\n        <div class=\"tr\">\n          <div class=\"td meta-no-data\">No data available</div>\n        </div>\n      </div>\n    </div>\n\n    <!-- REMARKS TABLE -->\n    <div v-if=\"currentTable === 'remarks'\">\n      <div class=\"thead\">\n        <div class=\"th date\">DATE</div>\n        <div class=\"th subject\">SUBJECT</div>\n        <div class=\"th sender\">SENDER</div>\n        <div class=\"th status\">STATUS</div>\n        <div class=\"th actions\">ACTIONS</div>\n      </div>\n      <div class=\"tbody\" v-if=\"remarks.length > 0\">\n        <div class=\"tr\" v-for=\"(remark, index) in remarks\" :key=\"index\">\n          <div class=\"td date\">\n            {{ remark.created_at | moment(\"MMMM DD YYYY\") }}\n          </div>\n          <div class=\"td subject\">\n            {{ remark.subject }}\n          </div>\n          <div class=\"td sender\">\n            {{ remark.sender.first_name }} {{ remark.sender.last_name }}\n          </div>\n          <div class=\"td status\">\n            {{ remark.status }}\n          </div>\n          <div class=\"td actions\">\n            <router-link\n              :to=\"{ name: 'ReplyInquiry', params: { thread: remark.id } }\"\n            >\n              <font-awesome-icon icon=\"envelope-open-text\" class=\"mr5 icon\" />\n              READ\n            </router-link>\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"tbody\"\n        v-if=\"remarks.length < 1 && currentTable === 'remarks'\"\n      >\n        <div class=\"tr\">\n          <div class=\"td meta-no-data\">No data available</div>\n        </div>\n      </div>\n    </div>\n\n    <!-- DELINQUENT PAYMENTS -->\n    <div v-if=\"currentTable === 'delinquent'\">\n      <div class=\"thead\">\n        <div class=\"th date\">DATE</div>\n        <div class=\"th subject\">SUBJECT</div>\n        <div class=\"th sender\">SENDER</div>\n        <div class=\"th status\">STATUS</div>\n        <div class=\"th actions\">ACTIONS</div>\n      </div>\n      <div class=\"tbody\" v-if=\"delinquentPayments.length > 0\">\n        <div\n          class=\"tr\"\n          v-for=\"(item, index) in delinquentPayments\"\n          :key=\"index\"\n        >\n          <div class=\"td date\">\n            {{ item.created_at | moment(\"MMMM DD YYYY\") }}\n          </div>\n          <div class=\"td subject\">\n            {{ item.subject }}\n          </div>\n          <div class=\"td sender\">\n            {{ item.sender.first_name }} {{ item.sender.last_name }}\n          </div>\n          <div class=\"td status\">\n            {{ item.status }}\n          </div>\n          <div class=\"td actions\">\n            <router-link\n              :to=\"{ name: 'ReplyInquiry', params: { thread: item.id } }\"\n            >\n              <font-awesome-icon icon=\"envelope-open-text\" class=\"mr5 icon\" />\n              READ\n            </router-link>\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"tbody\"\n        v-if=\"delinquentPayments.length < 1 && currentTable === 'delinquent'\"\n      >\n        <div class=\"tr\">\n          <div class=\"td meta-no-data\">No data available</div>\n        </div>\n      </div>\n    </div>\n    <paginate\n      v-if=\"currentTable === 'inquiries' && inquiries.length > 0\"\n      :page-count=\"pageCount\"\n      :prev-text=\"'Prev'\"\n      :next-text=\"'Next'\"\n      :container-class=\"'pagination'\"\n      :page-class=\"'page-item'\"\n      :click-handler=\"getAllInquiries\"\n      v-model=\"currentPage\"\n    >\n    </paginate>\n    <paginate\n      v-if=\"currentTable === 'remarks' && remarks.length > 0\"\n      :page-count=\"pageCount\"\n      :prev-text=\"'Prev'\"\n      :next-text=\"'Next'\"\n      :container-class=\"'pagination'\"\n      :page-class=\"'page-item'\"\n      :click-handler=\"getAllRemarks\"\n      v-model=\"currentPage\"\n    >\n    </paginate>\n\n    <paginate\n      v-if=\"currentTable === 'delinquent' && delinquentPayments.length > 0\"\n      :page-count=\"pageCount\"\n      :prev-text=\"'Prev'\"\n      :next-text=\"'Next'\"\n      :container-class=\"'pagination'\"\n      :page-class=\"'page-item'\"\n      :click-handler=\"getAllDelinquentPayments\"\n      v-model=\"currentPage\"\n    >\n    </paginate>\n  </section>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"InquiryTable\",\n  computed: {\n    ...mapGetters([\n      \"currentType\",\n      \"currentTable\",\n      \"inquiries\",\n      \"remarks\",\n      \"pageCount\",\n      \"delinquentPayments\",\n      \"currentPageNum\",\n    ]),\n  },\n  data() {\n    return {\n      currentPage: 1,\n    };\n  },\n  mounted() {\n    this.setUpData();\n    this.currentPage = this.currentPageNum;\n  },\n  watch: {\n    currentPageNum: {\n      handler(newVal) {\n        this.currentPage = newVal;\n      },\n    },\n    currentPage: {\n      handler(newVal) {\n        this.$store.commit(\"setCurrentPageNum\", newVal);\n      },\n    },\n    currentType: {\n      handler(status) {\n        if (this.currentTable === \"inquiries\") {\n          this.getAllInquiries();\n        } else if (this.currentTable === \"remarks\") {\n          this.getAllRemarks();\n        } else {\n          this.getAllDelinquentPayments();\n        }\n      },\n    },\n    currentTable: {\n      handler(status) {\n        if (this.currentTable === \"inquiries\") {\n          this.getAllInquiries();\n        } else if (this.currentTable === \"remarks\") {\n          this.getAllRemarks();\n        } else {\n          this.getAllDelinquentPayments();\n        }\n      },\n    },\n  },\n  methods: {\n    async setUpData() {\n      if (this.currentTable === \"inquiries\") {\n        this.getAllInquiries(this.currentPageNum);\n      } else if (this.currentTable === \"remarks\") {\n        this.getAllRemarks(this.currentPageNum);\n      } else {\n        this.getAllDelinquentPayments(this.currentPageNum);\n      }\n    },\n    async getAllInquiries(pageNum = 1) {\n      await this.$store.dispatch(\"getAllAdminInquiries\", {\n        page: pageNum,\n        filter_by: this.currentType,\n      });\n    },\n    async getAllRemarks(pageNum = 1) {\n      await this.$store.dispatch(\"getAllAdminRemarks\", {\n        page: pageNum,\n        filter_by: this.currentType,\n      });\n    },\n    async getAllDelinquentPayments(pageNum = 1) {\n      await this.$store.dispatch(\"getAllDelinquentPayments\", {\n        page: pageNum,\n        filter_by: this.currentType,\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\nsection {\n  width: 100%;\n}\n\n.date {\n  width: 14%;\n  text-transform: uppercase;\n}\n\n.subject {\n  width: 30%;\n  text-transform: uppercase;\n}\n.sender {\n  width: 25%;\n  text-transform: uppercase;\n}\n\n// .content {\n//   width: 28%;\n// }\n\n.status {\n  width: 13%;\n  text-transform: uppercase;\n}\n.actions {\n  width: 13%;\n  text-transform: uppercase;\n}\n\n.dept {\n  width: 18%;\n  text-transform: uppercase;\n}\n\n.thead {\n  display: flex;\n  flex-direction: row;\n  background: #ffffff;\n  border-radius: 8px 8px 0px 0px;\n  border-bottom: 2px #e23a36 solid;\n  box-shadow: 0px 10px 20px rgba(127, 127, 127, 0.1);\n  .th {\n    font-size: 13px;\n    font-weight: bold;\n    text-align: center;\n    padding: 20px 0px;\n  }\n}\n\n.tbody {\n  flex-direction: column;\n  margin-top: 10px;\n  .tr {\n    display: flex;\n    flex-direction: row;\n    background: #ffffff;\n    box-shadow: 0px 10px 20px rgba(127, 127, 127, 0.1);\n    border-radius: 8px;\n    margin-top: 3px;\n    padding-left: 10px;\n    padding-right: 10px;\n    .td {\n      font-size: 14px;\n      font-family: \"Proxima Nova Rg\";\n      text-align: center;\n      padding: 17px 0px;\n    }\n    .td.actions {\n      color: #1792e6;\n      font-size: 13px;\n      font-weight: 700;\n      font-family: Proxima Nova Rg;\n      cursor: pointer;\n      a {\n        color: #1792e6;\n        text-decoration: none;\n        transition: 0.4s;\n      }\n      .icon {\n        font-size: 18px;\n      }\n    }\n    .td.actions a:hover {\n      text-decoration: underline;\n    }\n  }\n}\n.meta-no-data {\n  width: 100% !important;\n}\n</style>\n"]}]}