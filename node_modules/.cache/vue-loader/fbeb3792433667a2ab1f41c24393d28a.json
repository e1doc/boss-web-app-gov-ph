{"remainingRequest":"/var/www/html/boss-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/boss-web/src/components/payment/PaymentViewDetailsModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/boss-web/src/components/payment/PaymentViewDetailsModal.vue","mtime":1620076411832},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IG1hcEdldHRlcnMgfSBmcm9tICJ2dWV4IjsKaW1wb3J0IEFwcExpbmsgZnJvbSAiQC9jb21wb25lbnRzL0FwcExpbmsiOwppbXBvcnQgQmFzZUZpbGVVcGxvYWRlciBmcm9tICJAL2NvbXBvbmVudHMvZm9ybXMvQmFzZUZpbGVVcGxvYWRlciI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiUGF5bWVudFZpZXdEZXRhaWxzTW9kYWwiLAogIGNvbXBvbmVudHM6IHsKICAgIEFwcExpbmssCiAgICBCYXNlRmlsZVVwbG9hZGVyLAogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIC4uLm1hcEdldHRlcnMoWwogICAgICAiY3VycmVudEJhbmtUcmFuc2FjdGlvbiIsCiAgICAgICJjdXJyZW50VHlwZSIsCiAgICAgICJwYXltZW50RGV0YWlscyIsCiAgICAgICJpc0ZpbGVVcGxvYWRlZCIsCiAgICAgICJpc0FkbWluQXV0aGVudGljYXRlZCIsCiAgICBdKSwKICB9LAogIHByb3BzOiB7CiAgICBpc0FkbWluOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHRydWUsCiAgICB9LAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHVwbG9hZEhhc0Vycm9yOiBmYWxzZSwKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICByZXBsYWNlVXJsKHVybCkgewogICAgICByZXR1cm4gdXJsLnJlcGxhY2UoIi9iYWNvb3IvIiwgIi8iKTsKICAgIH0sCiAgICBhc3luYyBvbkNsaWNrQ2FsbGJhY2soc3RhdHVzKSB7CiAgICAgIGlmIChzdGF0dXMpIHsKICAgICAgICBpZiAodGhpcy5pc0ZpbGVVcGxvYWRlZCkgewogICAgICAgICAgdGhpcy4kbW9kYWwuaGlkZSgicGF5bWVudFZpZXdEZXRhaWxzTW9kYWwiKTsKICAgICAgICAgIGxldCBwYXlsb2FkID0gdGhpcy5wYXltZW50RGV0YWlsczsKICAgICAgICAgIHBheWxvYWQuYXBwZW5kKCJpZCIsIHRoaXMuY3VycmVudEJhbmtUcmFuc2FjdGlvbi5pZCk7CiAgICAgICAgICBhd2FpdCB0aGlzLiRzdG9yZS5kaXNwYXRjaCgidmVyaWZ5QmFua1RyYW5zYWN0aW9uIiwgcGF5bG9hZCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuJHN3YWwoewogICAgICAgICAgICB0aXRsZTogIkZhaWxlZCEiLAogICAgICAgICAgICB0ZXh0OiAiUGxlYXNlIGZpeCB0aGUgdmFsaWRhdGlvbiBlcnJvcnMuIiwKICAgICAgICAgICAgaWNvbjogImVycm9yIiwKICAgICAgICAgIH0pOwogICAgICAgICAgdGhpcy51cGxvYWRIYXNFcnJvciA9IHRydWU7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJG1vZGFsLmhpZGUoInBheW1lbnRWaWV3RGV0YWlsc01vZGFsIik7CiAgICAgIH0KICAgIH0sCiAgICBmb3JtYXRDdXJyZW5jeShzdHIpIHsKICAgICAgdmFyIHBhcnRzID0gc3RyLnRvU3RyaW5nKCkuc3BsaXQoIi4iKTsKICAgICAgcGFydHNbMF0gPSBwYXJ0c1swXS5yZXBsYWNlKC9cQig/PShcZHszfSkrKD8hXGQpKS9nLCAiLCIpOwogICAgICBpZiAocGFydHMubGVuZ3RoIDwgMikgewogICAgICAgIHBhcnRzLnB1c2goIjAwIik7CiAgICAgIH0KICAgICAgcmV0dXJuIHBhcnRzLmpvaW4oIi4iKTsKICAgIH0sCiAgfSwKfTsK"},{"version":3,"sources":["PaymentViewDetailsModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PaymentViewDetailsModal.vue","sourceRoot":"src/components/payment","sourcesContent":["<template>\n  <div class=\"modal flex-center\">\n    <div class=\"meta-modal\">\n      <div class=\"meta-wrap\">\n        <div class=\"meta-modal-body flex-wrap\">\n          <h3 class=\"mb20 modal-title\">Payment Details</h3>\n          <div class=\"meta-body-items\">\n            <div class=\"meta-input-group\">\n              <div class=\"meta-input-label\">Payor's Name</div>\n              <div class=\"meta-input-value\">\n                <span class=\"separator\">:</span>\n                {{ currentBankTransaction.user.first_name }}\n                {{ currentBankTransaction.user.middle_name }}\n                {{ currentBankTransaction.user.last_name }}\n              </div>\n            </div>\n            <div class=\"meta-input-group\">\n              <div class=\"meta-input-label\">Payor's Email</div>\n              <div class=\"meta-input-value\">\n                <span class=\"separator\">:</span>\n                {{ currentBankTransaction.user.email }}\n              </div>\n            </div>\n            <div class=\"meta-input-group\">\n              <div class=\"meta-input-label\">Payor's Contact #</div>\n              <div class=\"meta-input-value\">\n                <span class=\"separator\">:</span>\n                {{ currentBankTransaction.user.phone_number }}\n              </div>\n            </div>\n            <div class=\"meta-input-group\">\n              <div class=\"meta-input-label\">Bank Used to Pay</div>\n              <div class=\"meta-input-value\">\n                <span class=\"separator\">:</span>\n                {{ currentBankTransaction.bank }}\n              </div>\n            </div>\n            <div class=\"meta-input-group\">\n              <div class=\"meta-input-label\">Date of Payment</div>\n              <div class=\"meta-input-value\">\n                <span class=\"separator\">:</span>\n                {{\n                  currentBankTransaction.payment_date | moment(\"MMMM DD YYYY\")\n                }}\n              </div>\n            </div>\n            <div class=\"meta-input-group\">\n              <div class=\"meta-input-label\">Total Amount Paid</div>\n              <div class=\"meta-input-value\">\n                <span class=\"separator\">:</span>\n                PHP\n                {{\n                  formatCurrency(\n                    parseFloat(currentBankTransaction.amount).toFixed(2)\n                  )\n                }}\n              </div>\n            </div>\n            <div class=\"meta-input-group\">\n              <div class=\"meta-input-label\">Reference No.</div>\n              <div class=\"meta-input-value\">\n                <span class=\"separator\">:</span>\n                {{ currentBankTransaction.reference_no }}\n              </div>\n            </div>\n            <div class=\"meta-input-group\">\n              <div class=\"meta-input-label\">SOA</div>\n              <div class=\"meta-input-value\">\n                <span class=\"separator\">:</span>\n                {{ currentBankTransaction.soa.reference_number }}\n              </div>\n            </div>\n            <div class=\"meta-input-group\" v-if=\"currentType !== 'business'\">\n              <div class=\"meta-input-label\">TD#</div>\n              <div class=\"meta-input-value\">\n                <span class=\"separator\">:</span>\n                {{\n                  currentBankTransaction.soa.building_application\n                    .buildingdetails.tax_dec_no\n                }}\n              </div>\n            </div>\n            <div class=\"meta-input-group\" v-if=\"currentType === 'business'\">\n              <div class=\"meta-input-label\">ACCOUNT #</div>\n              <div class=\"meta-input-value\">\n                <span class=\"separator\">:</span>\n                {{\n                  currentBankTransaction.soa.business_application.account_number\n                }}\n              </div>\n            </div>\n            <div class=\"meta-input-group flex-wrap\">\n              <div class=\"meta-input-label\">Proof of Transaction:</div>\n              <div class=\"meta-input-value meta-link\">\n                <span class=\"separator\">:</span>\n                <app-link :to=\"replaceUrl(currentBankTransaction.payment_slip)\"\n                  >View Screenshot</app-link\n                >\n              </div>\n            </div>\n            <div\n              class=\"meta-input-group flex-wrap\"\n              v-if=\"currentBankTransaction.payment_receipt\"\n            >\n              <div class=\"meta-input-label\">Payment Receipt:</div>\n              <div class=\"meta-input-value meta-link\">\n                <span class=\"separator\">:</span>\n                <app-link\n                  :to=\"replaceUrl(currentBankTransaction.payment_receipt)\"\n                  >View Receipt</app-link\n                >\n              </div>\n            </div>\n            <div\n              class=\"meta-upload-div flex-wrap\"\n              v-if=\"!currentBankTransaction.is_verified && isAdmin\"\n            >\n              <base-file-uploader\n                label=\"Upload payment receipt:\"\n                name=\"payment_receipt\"\n                fileLabel=\"paymentdetails\"\n                type=\"business\"\n                class=\"mt15 custom-upload\"\n                :isPaymentDetails=\"true\"\n                :hasError=\"uploadHasError\"\n              />\n            </div>\n          </div>\n        </div>\n        <div\n          class=\"meta-buttons flex-wrap\"\n          v-if=\"!currentBankTransaction.is_verified && isAdmin\"\n        >\n          <button class=\"modal-button agree\" @click=\"onClickCallback(true)\">\n            VERIFY\n          </button>\n          <button class=\"modal-button cancel\" @click=\"onClickCallback(false)\">\n            CANCEL\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters } from \"vuex\";\nimport AppLink from \"@/components/AppLink\";\nimport BaseFileUploader from \"@/components/forms/BaseFileUploader\";\nexport default {\n  name: \"PaymentViewDetailsModal\",\n  components: {\n    AppLink,\n    BaseFileUploader,\n  },\n  computed: {\n    ...mapGetters([\n      \"currentBankTransaction\",\n      \"currentType\",\n      \"paymentDetails\",\n      \"isFileUploaded\",\n      \"isAdminAuthenticated\",\n    ]),\n  },\n  props: {\n    isAdmin: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  data() {\n    return {\n      uploadHasError: false,\n    };\n  },\n  methods: {\n    replaceUrl(url) {\n      return url.replace(\"/bacoor/\", \"/\");\n    },\n    async onClickCallback(status) {\n      if (status) {\n        if (this.isFileUploaded) {\n          this.$modal.hide(\"paymentViewDetailsModal\");\n          let payload = this.paymentDetails;\n          payload.append(\"id\", this.currentBankTransaction.id);\n          await this.$store.dispatch(\"verifyBankTransaction\", payload);\n        } else {\n          this.$swal({\n            title: \"Failed!\",\n            text: \"Please fix the validation errors.\",\n            icon: \"error\",\n          });\n          this.uploadHasError = true;\n        }\n      } else {\n        this.$modal.hide(\"paymentViewDetailsModal\");\n      }\n    },\n    formatCurrency(str) {\n      var parts = str.toString().split(\".\");\n      parts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n      if (parts.length < 2) {\n        parts.push(\"00\");\n      }\n      return parts.join(\".\");\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.modal {\n  min-height: calc(100vh - 60px);\n  overflow-y: auto;\n  padding: 30px 0;\n\n  .meta-modal {\n    width: 100%;\n    max-width: 500px;\n    margin: 0 auto;\n    box-shadow: 0px 7px 20px rgba(0, 0, 0, 0.1);\n    border-radius: 15px;\n    background: #ffffff;\n    .meta-modal-body {\n      font-size: 18px;\n      font-family: Proxima Nova Rg;\n      line-height: 1.4;\n      padding: 50px 30px 40px;\n      .meta-body-items {\n        width: 100%;\n      }\n      .modal-title {\n        width: 100%;\n        text-align: left;\n        padding-left: 10px;\n        margin-bottom: 30px;\n        text-transform: uppercase;\n      }\n      .meta-input-group {\n        width: calc(100% - 20px);\n        padding: 0 10px;\n        align-items: center;\n        display: flex;\n        margin-bottom: 20px;\n        .input-field {\n          width: 100%;\n        }\n        .meta-input-label {\n          width: 40%;\n          float: left;\n\n          font-size: 16px;\n          font-family: Proxima Nova Rg;\n          line-height: 1.4;\n          margin-bottom: 0;\n        }\n        .meta-input-value {\n          width: 60%;\n          float: left;\n          font-size: 16px;\n          font-family: Proxima Nova Rg;\n          line-height: 1.4;\n\n          span.separator {\n            margin-right: 20px;\n          }\n        }\n        .meta-link {\n          cursor: pointer;\n          transition: 0.4s;\n          a {\n            color: #2699fb;\n            font-size: 16px;\n          }\n        }\n        .meta-link:hover {\n          color: #4791db;\n        }\n      }\n      .meta-upload-div {\n        width: 100%;\n        padding: 0 10px;\n      }\n    }\n    .meta-buttons {\n      width: 100%;\n      button {\n        width: 50%;\n        float: left;\n        background-color: transparent;\n        border: 0;\n        padding: 20px 10px;\n        border-top: 1px solid #eee;\n        font-size: 15px;\n        font-weight: bold;\n        font-family: Proxima Nova Rg;\n        transition: 0.2s;\n        cursor: pointer;\n      }\n      button:focus {\n        outline: 0;\n      }\n      button.agree {\n        border-right: 1px solid #eee;\n        border-bottom-left-radius: 15px;\n      }\n      button.cancel {\n        border-bottom-right-radius: 15px;\n      }\n      button.agree:hover {\n        color: #fff;\n        background-color: #4791db;\n      }\n      button.cancel:hover {\n        color: #fff;\n        background-color: #f44336;\n      }\n    }\n  }\n}\n</style>"]}]}