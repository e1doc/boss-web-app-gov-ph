{"remainingRequest":"/var/www/html/boss-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/boss-web/src/components/forms/BaseFileUploader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/boss-web/src/components/forms/BaseFileUploader.vue","mtime":1611164378571},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BaseFileUploader.vue"],"names":[],"mappingsfile":"BaseFileUploader.vue","sourceRoot":"src/components/forms","sourcesContent":["<template>\n  <div class=\"meta-upload-box flex-wrap\">\n    <div class=\"meta-label\">{{ label }}</div>\n    <div class=\"meta-desc\" v-html=\"description\">{{ description }}</div>\n    <div class=\"meta-custom-upload\" :class=\"{ 'has-error': hasError }\">\n      <form enctype=\"multipart/form-data\" novalidate>\n        <input\n          :ref=\"fileLabel\"\n          type=\"file\"\n          name=\"file\"\n          :accept=\"uploadType\"\n          @input=\"filesChange($event.target.name, $event.target.files)\"\n          :disabled=\"isUploading\"\n        />\n        <!-- <div class=\"meta-text big\">DRAG/CLICK TO UPLOAD YOUR FILE HERE</div> -->\n        <div class=\"meta-text small\">\n          {{\n            filename\n              ? filename\n              : properties.filename\n              ? properties.filename\n              : \"DRAG/CLICK TO UPLOAD YOUR FILE HERE\"\n          }}\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nconst STATUS_INITIAL = 0,\n  STATUS_SAVING = 1,\n  STATUS_SUCCESS = 2,\n  STATUS_FAILED = 3;\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"BaseFileUploader\",\n  props: {\n    uploadType: {\n      type: String,\n      default: \"image/*, application/pdf\",\n    },\n    hasError: {\n      type: Boolean,\n      default: false,\n      required: false,\n    },\n    label: {\n      type: String,\n      default: \"\",\n    },\n    description: {\n      type: String,\n      default: \"\",\n    },\n    properties: {\n      type: Object,\n      default() {\n        return {};\n      },\n    },\n    type: {\n      type: String,\n      default: \"\",\n    },\n    fileLabel: {\n      type: String,\n      default: \"\",\n    },\n    isEvaluation: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      currentStatus: null,\n      filename: \"\",\n      connection: null,\n    };\n  },\n  mounted() {\n    this.$store.commit(\"setLoading\", false);\n  },\n  computed: {\n    ...mapGetters([\n      \"applicationRequirements\",\n      \"isUploading\",\n      \"buildingApplicationRequirements\",\n      \"currentEvaluationFile\",\n      \"isUploadSuccess\",\n      \"isFileUploadFailed\",\n    ]),\n    isInitial() {\n      return this.currentStatus === STATUS_INITIAL;\n    },\n    isSaving() {\n      return this.currentStatus === STATUS_SAVING;\n    },\n    isSuccess() {\n      return this.currentStatus === STATUS_SUCCESS;\n    },\n    isFailed() {\n      return this.currentStatus === STATUS_FAILED;\n    },\n  },\n  methods: {\n    async save(formData) {\n      if (!this.isEvaluation) {\n        if (this.type === \"business\") {\n          await this.$store.dispatch(\"uploadRequirements\", formData);\n        } else if (this.type === \"property\") {\n          await this.$store.dispatch(\"uploadBuildingRequirements\", formData);\n        }\n        if (this.isFileUploadFailed) {\n          this.filename = \"DRAG/CLICK TO UPLOAD YOUR FILE HERE\";\n        }\n      } else {\n        this.$store.commit(\"setCurrentEvaluationFile\", formData);\n      }\n    },\n    async initiateWebSocket() {\n      console.log(\"Starting connection to WebSocket Server\");\n      this.connection = new WebSocket(\n        \"ws://localhost:8000/ws/building-file-upload/\"\n      );\n    },\n    async closeConnection() {\n      this.connection.close();\n    },\n    async sendData(data) {\n      this.connection.send(data);\n    },\n    async save2(formData) {\n      try {\n        this.initiateWebSocket();\n        this.connection.onmessage = (event) => {\n          this.sendData(formData);\n          this.closeConnection();\n        };\n\n        this.connection.onopen = function (event) {\n          console.log(\"Successfully connected to the api websocket server...\");\n        };\n\n        this.connection.onclose = (event) => {\n          console.log(event);\n          console.log(\"successfull closed.\");\n        };\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    filesChange(fieldName, fileList) {\n      // handle file changes\n      var formData = new FormData();\n      if (!fileList.length) return;\n      let payload = {};\n      // append the files to FormData\n\n      if (!this.isEvaluation) {\n        let file = this.$refs[`${this.fileLabel}`];\n        Array.from(Array(fileList.length).keys()).map((x) => {\n          if (\n            (this.uploadType === \"application/pdf\" &&\n              fileList[x][\"type\"] === \"application/pdf\") ||\n            (this.uploadType === \"image/*, application/pdf\" &&\n              (fileList[x][\"type\"] === \"image/*\" ||\n                fileList[x][\"type\"] === \"application/pdf\"))\n          ) {\n            if (fileList[x].size <= 26214400) {\n              this.filename = fileList[x].name;\n              formData.append(fieldName, fileList[x]);\n              let requirement_id =\n                this.type === \"business\"\n                  ? this.applicationRequirements.id\n                  : this.buildingApplicationRequirements.id;\n              formData.append(\"requirement_id\", requirement_id);\n              formData.append(\"requirements_label\", this.fileLabel);\n              formData.append(\"filename\", fileList[x].name);\n              payload.requirement_id = requirement_id;\n              payload.requirements_label = this.fileLabel;\n              payload.filename = fileList[x].name;\n              payload.file = fileList[x].file;\n              this.save(formData);\n            } else {\n              file.value = null;\n              this.$swal({\n                title: \"File is too large!\",\n                text: \"File size must not exceed 25mb.\",\n                icon: \"error\",\n              });\n            }\n          } else {\n            this.$swal({\n              title: \"Invalid file type!\",\n              text: \"Please enter a valid file format.\",\n              icon: \"error\",\n            });\n          }\n        });\n      } else {\n        Array.from(Array(fileList.length).keys()).map((x) => {\n          if (\n            (this.uploadType === \"application/pdf\" &&\n              fileList[x][\"type\"] === \"application/pdf\") ||\n            (this.uploadType === \"image/*, application/pdf\" &&\n              (fileList[x][\"type\"] === \"image/*\" ||\n                fileList[x][\"type\"] === \"application/pdf\"))\n          ) {\n            if (fileList[x].size <= 26214400) {\n              this.filename = fileList[x].name;\n              formData.append(fieldName, fileList[x]);\n              let requirement_id =\n                this.type === \"business\"\n                  ? this.applicationRequirements.id\n                  : this.buildingApplicationRequirements.id;\n              formData.append(\"filename\", fileList[x].name);\n              this.save(formData);\n            } else {\n              file.value = null;\n              this.$swal({\n                title: \"File is too large!\",\n                text: \"File size must not exceed 25mb.\",\n                icon: \"error\",\n              });\n            }\n          } else {\n            this.$swal({\n              title: \"Invalid file type!\",\n              text: \"Please enter a valid file format.\",\n              icon: \"error\",\n            });\n          }\n        });\n      }\n      // save it\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.meta-upload-box {\n  width: 100%;\n  .meta-label {\n    font-size: 16px;\n    font-weight: bold;\n    margin-bottom: 10px;\n  }\n  .meta-desc {\n    font-size: 14px;\n    padding-left: 17px;\n    margin-bottom: 18px;\n    width: 100%;\n  }\n  .meta-custom-upload {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    width: 100%;\n    padding: 15px 30px;\n    margin: 0 0 30px 17px;\n    border: 3px dashed #bce0fd;\n    transition: 0.4s;\n    input[type=\"file\"] {\n      position: absolute;\n      left: 0;\n      top: 0;\n      z-index: 2;\n      height: 100%;\n      width: 100%;\n      opacity: 0;\n      cursor: pointer;\n    }\n    .meta-text.big {\n      color: #64b4f9;\n      font-size: 30px;\n      font-weight: 700;\n      line-height: 1.6;\n      text-transform: uppercase;\n      width: 100%;\n      text-align: center;\n      transition: 0.4s;\n    }\n    .meta-text.small {\n      color: #64b4f9;\n      font-size: 15px;\n      font-weight: 700;\n      line-height: 1.6;\n      transition: 0.4s;\n    }\n  }\n}\n\ndiv.meta-container .meta-custom-upload:hover {\n  border-color: #039be5;\n}\n\ndiv.meta-container .meta-custom-upload:hover div.meta-text {\n  color: #039be5;\n}\n\n.meta-custom-upload.has-error,\n.meta-custom-upload.has-error .meta-text {\n  border-color: #e23a36;\n  color: #e23a36 !important;\n}\n\n/*\nMOBILE RESPONSIVENESS \n--------------------------------------------------------------*/\n\n@media only screen and (max-width: 768px) {\n  .meta-upload-box .meta-label {\n    font-size: 15px;\n  }\n\n  .meta-upload-box .meta-custom-upload .meta-text.small {\n    font-size: 13px;\n  }\n}\n\n@media only screen and (max-width: 480px) {\n  .meta-upload-box .meta-label {\n    font-size: 13px;\n  }\n\n  .meta-upload-box .meta-desc {\n    font-size: 12px;\n    margin-bottom: 15px;\n  }\n  .meta-upload-box .meta-custom-upload .meta-text.small {\n    font-size: 12px;\n    text-align: center;\n  }\n}\n</style>\n"]}]}