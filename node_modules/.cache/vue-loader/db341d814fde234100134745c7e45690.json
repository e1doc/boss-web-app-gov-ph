{"remainingRequest":"/var/www/html/boss-web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/html/boss-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/boss-web/src/components/admin/AssessmentTable.vue?vue&type=template&id=dc7da528&scoped=true&","dependencies":[{"path":"/var/www/html/boss-web/src/components/admin/AssessmentTable.vue","mtime":1637573678148},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}