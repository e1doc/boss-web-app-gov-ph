{"remainingRequest":"/var/www/html/boss-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/boss-web/src/components/forms/SoaForm.vue?vue&type=style&index=0&id=35d944ee&scoped=true&lang=scss&","dependencies":[{"path":"/var/www/html/boss-web/src/components/forms/SoaForm.vue","mtime":1612455150458},{"path":"/var/www/html/boss-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm1ldGEtcmFkaW8tZ3JvdXAgewogIGRpdiB7CiAgICBtYXJnaW4tYm90dG9tOiAxMHB4OwogICAgaW5wdXQgewogICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7CiAgICB9CiAgfQp9Ci5mb3JtLXNlY3Rpb24gewogIHBhZGRpbmc6IDE1cHg7Cn0KZGl2Lm1ldGEtY2hlY2tib3ggewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBsYWJlbCB7CiAgICBmb250LXNpemU6IDEzcHg7CiAgICBsaW5lLWhlaWdodDogMS42OwogIH0KICBpbnB1dFt0eXBlPSJjaGVja2JveCJdIHsKICAgIGhlaWdodDogMTdweDsKICAgIHdpZHRoOiAxN3B4OwogICAgb3BhY2l0eTogMDsKICAgIGxlZnQ6IDA7CiAgICB0b3A6IDNweDsKICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICAgIHotaW5kZXg6IDI7CiAgICBjdXJzb3I6IHBvaW50ZXI7CiAgfQogIC5jdXN0b20tY2hlY2tib3ggewogICAgaGVpZ2h0OiAxNXB4OwogICAgd2lkdGg6IDE1cHg7CiAgICBib3JkZXI6IDJweCBzb2xpZCAjMjU5M2YxOwogICAgbWFyZ2luLXJpZ2h0OiAxMnB4OwogICAgLmNoZWNrLWljb24gewogICAgICBjb2xvcjogI2ZmZjsKICAgICAgZm9udC1zaXplOiAxNHB4OwogICAgICBkaXNwbGF5OiBub25lOwogICAgfQogIH0KICBpbnB1dFt0eXBlPSJjaGVja2JveCJdOmNoZWNrZWQgKyAuY3VzdG9tLWNoZWNrYm94IHsKICAgIGJhY2tncm91bmQtY29sb3I6ICMyNTkzZjE7CiAgICAuY2hlY2staWNvbiB7CiAgICAgIGRpc3BsYXk6IGJsb2NrOwogICAgfQogIH0KfQo="},{"version":3,"sources":["SoaForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SoaForm.vue","sourceRoot":"src/components/forms","sourcesContent":["<template>\n  <div class=\"container form-section\">\n    <div class=\"flex-column\" v-if=\"currentSoaType === 'business'\">\n      <h3 class=\"meta-input-label mt10 mb10 text-bold mb20\">\n        Account Number: {{ currentSelectedBusiness.account_number }}\n      </h3>\n      <div class=\"meta-input-label mt10 mb10\">Payment Mode</div>\n      <base-select\n        placeholder=\"--- Select from the options ---\"\n        :options=\"paymentOptions\"\n        v-model=\"paymode\"\n        name=\"selectOptions\"\n        class=\"mb15\"\n        @change.native=\"onModeSelect\"\n      />\n      <div class=\"meta-input-label mt10 mb10\">Payment Quarter</div>\n      <base-select\n        placeholder=\"--- Select from the options ---\"\n        :options=\"quarters\"\n        v-model=\"quarter\"\n        name=\"selectOptions\"\n        :disabled=\"isQuarterDisabled\"\n        class=\"mb15\"\n      />\n      <button-block @click.native=\"generateSoa('business')\"\n        >Submit</button-block\n      >\n    </div>\n    <div class=\"flex-column\" v-if=\"currentSoaType === 'real_property'\">\n      <h4>For Tax Year - {{ new Date(Date.now()) | moment(\"YYYY\") }}</h4>\n      <h3 class=\"meta-input-label mt10 mb10 text-bold mb20\">\n        Tax Dec No. {{ currentSelectedProperty.buildingdetails.tax_dec_no }}\n      </h3>\n      <div\n        class=\"mb10 meta-radio-group\"\n        v-for=\"(item, index) in propertyPaymentOptions\"\n        :key=\"index\"\n      >\n        <div>\n          <input\n            type=\"radio\"\n            :id=\"item.value\"\n            :value=\"item.value\"\n            v-model=\"paymentOption\"\n          />\n          <label for=\"deliquent\" class=\"text-bold\">{{ item.label }}</label>\n        </div>\n      </div>\n      <div class=\"meta-checkbox flex-center mb30 ml30\">\n        <input\n          type=\"checkbox\"\n          id=\"is_advance_payment\"\n          v-model=\"isAdvancePayment\"\n        />\n        <div class=\"custom-checkbox flex-center\">\n          <span class=\"check\"\n            ><font-awesome-icon icon=\"check\" class=\"mr5 check-icon\"\n          /></span>\n        </div>\n        <label for=\"legal_docs_1\">Include Advance Payment</label>\n      </div>\n      <div class=\"mb10\" v-if=\"paymentOption !== 'delinquent'\">\n        <button-block @click.native=\"generateSoa('real_property')\" class=\"w100\"\n          >Compute</button-block\n        >\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport ButtonBlock from \"@/components/ButtonBlock\";\nimport BaseInput from \"@/components/forms/BaseInput\";\nimport BaseSelect from \"@/components/forms/BaseSelect\";\nimport { mapGetters } from \"vuex\";\nimport axios from \"axios\";\nimport moment from \"moment-timezone\";\nconst oneDocToken = process.env.VUE_APP_ONE_DOC_TOKEN;\nconst lguLocalEndpoint = process.env.VUE_APP_LGU_LOCAL_ENDPOINT;\nexport default {\n  name: \"SoaForm\",\n  components: {\n    ButtonBlock,\n    BaseInput,\n    BaseSelect,\n  },\n  computed: {\n    ...mapGetters([\n      \"addDepartmentSuccess\",\n      \"currentSelectedBusiness\",\n      \"currentSoaType\",\n      \"currentSelectedProperty\",\n    ]),\n  },\n  watch: {\n    paymentOption: {\n      async handler(selected) {\n        if (selected === \"delinquent\") {\n          let action = await this.$swal({\n            text:\n              \"Delinquents are handled via the applicant inquiry system. Kindly send your old TD number and property owner in the succeeding screen. You can combine multiple transactions into a single message. You would need to upload the latest scan of the applicable Tax Declarantion as well.\",\n            showCancelButton: true,\n            icon: \"info\",\n          });\n          if (action.value) {\n            this.$store.commit(\"setIsDelinquentPayment\", true);\n            this.$router.push({ name: \"NewInquiry\" });\n          } else {\n            await this.$modal.hide(\"soaModal\");\n          }\n        }\n      },\n    },\n  },\n  mounted() {},\n  data() {\n    return {\n      isQuarterDisabled: false,\n      quarter: \"\",\n      paymode: \"\",\n      paymentOptions: [\n        {\n          label: \"Annually\",\n          value: \"A\",\n        },\n        {\n          label: \"Semi-annually\",\n          value: \"S\",\n        },\n        {\n          label: \"Quarterly\",\n          value: \"Q\",\n        },\n      ],\n      propertyPaymentOptions: [\n        {\n          label: \"Settle delinquent payments\",\n          value: \"delinquent\",\n        },\n        {\n          label: \"Pay current year\",\n          value: \"current\",\n        },\n        // {\n        //   label: \"Include advance payment\",\n        //   value: \"advance\",\n        // },\n      ],\n      quarters: [\n        {\n          label: \"I Quarter\",\n          value: \"1\",\n        },\n        {\n          label: \"II Quarter\",\n          value: \"2\",\n        },\n        {\n          label: \"III Quarter\",\n          value: \"3\",\n        },\n        {\n          label: \"IV Quarter\",\n          value: \"4\",\n        },\n      ],\n      isAdvancePayment: false,\n      paymentOption: \"current\",\n    };\n  },\n\n  methods: {\n    onModeSelect() {\n      if (this.paymode == \"A\") {\n        this.quarter = \"4\";\n        this.isQuarterDisabled = true;\n      } else {\n        this.isQuarterDisabled = false;\n      }\n    },\n    async generateSoa(type) {\n      try {\n        this.$store.commit(\"setLoading\", true);\n\n        let config = {\n          headers: {\n            \"OneDoc-Token\": oneDocToken,\n            \"Content-Type\": \"application/json\",\n          },\n        };\n\n        if (type === \"business\") {\n          const payload = {\n            name: \"BusinessTaxInvoce\",\n            param: {\n              accountno: this.currentSelectedBusiness.account_number,\n              quarter: this.quarter,\n              paymode: this.paymode,\n            },\n          };\n\n          const result = await axios.post(\n            `${lguLocalEndpoint}`,\n            payload,\n            config\n          );\n          this.$store.commit(\"setLoading\", false);\n          console.log(result.data);\n          if (result.data.Status === \"Success\") {\n            await this.$modal.hide(\"soaModal\");\n            await this.$store.dispatch(\n              \"storeGeneratedBill\",\n              result.data.Result\n            );\n            await this.$router.push({ name: \"Bills\" });\n          } else {\n            this.$swal({\n              title: \"Failed!\",\n              text: result.data.Message,\n              icon: \"error\",\n            });\n          }\n        } else {\n          const payload = {\n            name: \"RealPropertyTaxInvoce\",\n            param: {\n              refno: this.currentSelectedProperty.reference_id,\n              property_type: this.currentSelectedProperty.buildingdetails\n                .property_type,\n              includeadv: this.isAdvancePayment ? 1 : 0,\n              date: moment().format(\"YYYY-MM-DD\").toString(),\n            },\n          };\n          const result = await axios.post(\n            `${lguLocalEndpoint}`,\n            payload,\n            config\n          );\n          this.$store.commit(\"setLoading\", false);\n          if (result.data.Status === \"Success\") {\n            await this.$modal.hide(\"soaModal\");\n            await this.$store.dispatch(\n              \"storeGeneratedBill\",\n              result.data.Result\n            );\n            await this.$router.push({ name: \"Bills\" });\n          } else {\n            this.$swal({\n              title: \"Failed!\",\n              text: result.data.Message,\n              icon: \"error\",\n            });\n          }\n        }\n      } catch (err) {\n        this.$store.commit(\"setLoading\", false);\n        err.response ? console.log(err.response) : console.log(err);\n      }\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.meta-radio-group {\n  div {\n    margin-bottom: 10px;\n    input {\n      margin-right: 10px;\n    }\n  }\n}\n.form-section {\n  padding: 15px;\n}\ndiv.meta-checkbox {\n  position: relative;\n  label {\n    font-size: 13px;\n    line-height: 1.6;\n  }\n  input[type=\"checkbox\"] {\n    height: 17px;\n    width: 17px;\n    opacity: 0;\n    left: 0;\n    top: 3px;\n    position: absolute;\n    z-index: 2;\n    cursor: pointer;\n  }\n  .custom-checkbox {\n    height: 15px;\n    width: 15px;\n    border: 2px solid #2593f1;\n    margin-right: 12px;\n    .check-icon {\n      color: #fff;\n      font-size: 14px;\n      display: none;\n    }\n  }\n  input[type=\"checkbox\"]:checked + .custom-checkbox {\n    background-color: #2593f1;\n    .check-icon {\n      display: block;\n    }\n  }\n}\n</style>\n"]}]}