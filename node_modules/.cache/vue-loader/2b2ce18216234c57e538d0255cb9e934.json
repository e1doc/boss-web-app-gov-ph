{"remainingRequest":"/var/www/html/boss-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/boss-web/src/components/payment/PaymentDetailsModal.vue?vue&type=style&index=0&id=bb70b1b0&scoped=true&lang=scss&","dependencies":[{"path":"/var/www/html/boss-web/src/components/payment/PaymentDetailsModal.vue","mtime":1612455150458},{"path":"/var/www/html/boss-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubW9kYWwgewogIG1pbi1oZWlnaHQ6IGNhbGMoMTAwdmggLSA2MHB4KTsKICBwYWRkaW5nOiAzMHB4IDA7CiAgb3ZlcmZsb3cteTogYXV0bzsKICAubWV0YS1tb2RhbCB7CiAgICB3aWR0aDogMTAwJTsKICAgIG1heC13aWR0aDogNTAwcHg7CiAgICBtYXJnaW46IDAgYXV0bzsKICAgIGJveC1zaGFkb3c6IDBweCA3cHggMjBweCByZ2JhKDAsIDAsIDAsIDAuMSk7CiAgICBib3JkZXItcmFkaXVzOiAxNXB4OwogICAgYmFja2dyb3VuZDogI2ZmZmZmZjsKICAgIC5tZXRhLW1vZGFsLWJvZHkgewogICAgICBmb250LXNpemU6IDE4cHg7CiAgICAgIGZvbnQtZmFtaWx5OiBQcm94aW1hIE5vdmEgUmc7CiAgICAgIGxpbmUtaGVpZ2h0OiAxLjQ7CiAgICAgIHBhZGRpbmc6IDUwcHggMzBweDsKICAgICAgLm1ldGEtaW5wdXQtZ3JvdXAgewogICAgICAgIHdpZHRoOiBjYWxjKDUwJSAtIDIwcHgpOwogICAgICAgIHBhZGRpbmc6IDAgMTBweDsKICAgICAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDsKICAgICAgICBkaXNwbGF5OiBmbGV4OwogICAgICAgIGZsZXgtd3JhcDogd3JhcDsKICAgICAgICBmbG9hdDogbGVmdDsKICAgICAgICAuaW5wdXQtZmllbGQgewogICAgICAgICAgd2lkdGg6IDEwMCU7CiAgICAgICAgfQogICAgICB9CiAgICAgIC5tZXRhLXVwbG9hZC1kaXYgewogICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgIHBhZGRpbmc6IDAgMTBweDsKICAgICAgfQogICAgfQogICAgLm1ldGEtYnV0dG9ucyB7CiAgICAgIHdpZHRoOiAxMDAlOwogICAgICBidXR0b24gewogICAgICAgIHdpZHRoOiA1MCU7CiAgICAgICAgZmxvYXQ6IGxlZnQ7CiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7CiAgICAgICAgYm9yZGVyOiAwOwogICAgICAgIHBhZGRpbmc6IDIwcHggMTBweDsKICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgI2VlZTsKICAgICAgICBmb250LXNpemU6IDE1cHg7CiAgICAgICAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgICAgICAgZm9udC1mYW1pbHk6IFByb3hpbWEgTm92YSBSZzsKICAgICAgICB0cmFuc2l0aW9uOiAwLjJzOwogICAgICAgIGN1cnNvcjogcG9pbnRlcjsKICAgICAgfQogICAgICBidXR0b246Zm9jdXMgewogICAgICAgIG91dGxpbmU6IDA7CiAgICAgIH0KICAgICAgYnV0dG9uLmFncmVlIHsKICAgICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCAjZWVlOwogICAgICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDE1cHg7CiAgICAgIH0KICAgICAgYnV0dG9uLmNhbmNlbCB7CiAgICAgICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDE1cHg7CiAgICAgIH0KICAgICAgYnV0dG9uLmFncmVlOmhvdmVyIHsKICAgICAgICBjb2xvcjogI2ZmZjsKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNDc5MWRiOwogICAgICB9CiAgICAgIGJ1dHRvbi5jYW5jZWw6aG92ZXIgewogICAgICAgIGNvbG9yOiAjZmZmOwogICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmNDQzMzY7CiAgICAgIH0KICAgIH0KICB9Cn0K"},{"version":3,"sources":["PaymentDetailsModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PaymentDetailsModal.vue","sourceRoot":"src/components/payment","sourcesContent":["<template>\n  <div class=\"modal flex-center\">\n    <div class=\"meta-modal\">\n      <div class=\"meta-wrap\">\n        <div class=\"meta-modal-body flex-wrap\">\n          <h3 class=\"mb20\">Please enter the payment details below:</h3>\n          <div class=\"meta-input-group\">\n            <div class=\"meta-input-label mt10 mb10\">Bank Used to Pay</div>\n            <base-input\n              v-model=\"payment_details.bank\"\n              label=\"Enter bank name\"\n              name=\"bank\"\n              refs=\"payment_bank\"\n              type=\"text\"\n              class=\"mt40 input-field\"\n              :validationMessages=\"stepOneErrors.payment_details.bank\"\n            />\n          </div>\n          <div class=\"meta-input-group\">\n            <div class=\"meta-input-label mt10 mb10\">Date of Payment</div>\n            <base-date-picker\n              v-model=\"payment_details.date\"\n              class=\"mb15 input-field\"\n              :validationMessages=\"stepOneErrors.payment_details.date\"\n            />\n          </div>\n          <div class=\"flex-wrap meta-input-group\">\n            <div class=\"meta-input-label mt10 mb10\">Total Amount Paid</div>\n            <currency-input\n              label=\"Total Amount Paid\"\n              name=\"totalamount\"\n              refs=\"total_amount\"\n              type=\"text\"\n              :isAmount=\"true\"\n              class=\"mt40 w100 input-field amount-paid\"\n              placeholder=\"Enter total amount paid\"\n              v-model=\"payment_details.amount\"\n              :validationMessages=\"stepOneErrors.payment_details.amount\"\n            />\n          </div>\n          <div class=\"meta-input-group\">\n            <div class=\"meta-input-label mt10 mb10\">Reference No.</div>\n            <base-input\n              label=\"Enter reference no.\"\n              name=\"refrenceno\"\n              refs=\"reference_no\"\n              type=\"text\"\n              class=\"mt40 input-field\"\n              v-model=\"payment_details.reference_no\"\n              :validationMessages=\"stepOneErrors.payment_details.reference_no\"\n            />\n          </div>\n          <div class=\"meta-upload-div flex-wrap\">\n            <base-file-uploader\n              label=\"Upload proof of transaction:\"\n              name=\"payment_slip\"\n              fileLabel=\"paymentdetails\"\n              type=\"business\"\n              class=\"mt15 custom-upload\"\n              :isPaymentDetails=\"true\"\n              :hasError=\"uploadHasError\"\n            />\n          </div>\n        </div>\n        <div class=\"meta-buttons flex-wrap\">\n          <button class=\"modal-button agree\" @click=\"onClickCallback(true)\">\n            SUBMIT\n          </button>\n          <button class=\"modal-button cancel\" @click=\"onClickCallback(false)\">\n            CANCEL\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport BaseInput from \"@/components/forms/BaseInput\";\nimport BaseDatePicker from \"@/components/forms/BaseDatePicker\";\nimport BaseFileUploader from \"@/components/forms/BaseFileUploader\";\nimport ButtonBlock from \"@/components/ButtonBlock\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"PaymentDetailsModal\",\n  components: {\n    BaseInput,\n    BaseDatePicker,\n    BaseFileUploader,\n    ButtonBlock,\n  },\n  computed: {\n    ...mapGetters([\n      \"paymentDetails\",\n      \"currentSoaObj\",\n      \"stepOneErrors\",\n      \"isFileUploaded\",\n    ]),\n  },\n  data() {\n    return {\n      payment_details: {\n        bank: \"\",\n        date: \"\",\n        amount: 0,\n        reference_no: \"\",\n      },\n      unrequired: {\n        payment_details: [],\n      },\n      uploadHasError: false,\n    };\n  },\n  mounted() {\n    console.log(this.paymentDetails);\n  },\n  methods: {\n    async onClickCallback(status) {\n      if (status) {\n        this.$store.commit(\"setLoading\", true);\n        let formData = this.paymentDetails;\n        formData.append(\"soa\", this.currentSoaObj.id);\n        formData.append(\"bank\", this.payment_details.bank);\n        formData.append(\"payment_date\", this.payment_details.date);\n        formData.append(\"amount\", this.payment_details.amount);\n        formData.append(\"reference_no\", this.payment_details.reference_no);\n        let validate = this.validateRequiredFields();\n        if (validate) {\n          await this.$store.commit(\"setPaymentDetails\", formData);\n          await this.$store.dispatch(\"addPaymentDetails\");\n        }\n        this.$store.commit(\"setLoading\", false);\n      } else {\n        this.$modal.hide(\"paymentDetailsModal\");\n      }\n    },\n    validateRequiredFields() {\n      let payment_details_errors = { key: \"payment_details\", value: {} };\n      let isPaymentDetailsClean = true;\n      for (let key in this.payment_details) {\n        if (!this.unrequired.payment_details.includes(key)) {\n          if (this.payment_details[key] === \"\") {\n            payment_details_errors.value[`${key}`] = [];\n            payment_details_errors.value[`${key}`].push(\n              \"This field may not be blank.\"\n            );\n          }\n        }\n      }\n      if (Object.entries(payment_details_errors.value).length > 0) {\n        this.$store.commit(\"setStepOneErrors\", payment_details_errors);\n        isPaymentDetailsClean = false;\n      } else {\n        this.$store.commit(\"setStepOneErrors\", {\n          key: \"paymentDetails\",\n          value: {},\n        });\n      }\n      if (!this.isFileUploaded) {\n        this.uploadHasError = true;\n      } else {\n        this.uploadHasError = false;\n      }\n      if (isPaymentDetailsClean && this.isFileUploaded) {\n        return true;\n      } else {\n        this.$swal({\n          title: \"Failed!\",\n          text: \"Please fix the validation errors.\",\n          icon: \"error\",\n        });\n        return false;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped lang=\"scss\">\n.modal {\n  min-height: calc(100vh - 60px);\n  padding: 30px 0;\n  overflow-y: auto;\n  .meta-modal {\n    width: 100%;\n    max-width: 500px;\n    margin: 0 auto;\n    box-shadow: 0px 7px 20px rgba(0, 0, 0, 0.1);\n    border-radius: 15px;\n    background: #ffffff;\n    .meta-modal-body {\n      font-size: 18px;\n      font-family: Proxima Nova Rg;\n      line-height: 1.4;\n      padding: 50px 30px;\n      .meta-input-group {\n        width: calc(50% - 20px);\n        padding: 0 10px;\n        align-items: flex-start;\n        display: flex;\n        flex-wrap: wrap;\n        float: left;\n        .input-field {\n          width: 100%;\n        }\n      }\n      .meta-upload-div {\n        width: 100%;\n        padding: 0 10px;\n      }\n    }\n    .meta-buttons {\n      width: 100%;\n      button {\n        width: 50%;\n        float: left;\n        background-color: transparent;\n        border: 0;\n        padding: 20px 10px;\n        border-top: 1px solid #eee;\n        font-size: 15px;\n        font-weight: bold;\n        font-family: Proxima Nova Rg;\n        transition: 0.2s;\n        cursor: pointer;\n      }\n      button:focus {\n        outline: 0;\n      }\n      button.agree {\n        border-right: 1px solid #eee;\n        border-bottom-left-radius: 15px;\n      }\n      button.cancel {\n        border-bottom-right-radius: 15px;\n      }\n      button.agree:hover {\n        color: #fff;\n        background-color: #4791db;\n      }\n      button.cancel:hover {\n        color: #fff;\n        background-color: #f44336;\n      }\n    }\n  }\n}\n</style>"]}]}