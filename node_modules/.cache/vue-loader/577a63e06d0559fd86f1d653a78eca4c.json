{"remainingRequest":"/var/www/html/boss-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/boss-web/src/components/forms/BaseFileUploader.vue?vue&type=style&index=0&id=3b07d67a&lang=scss&scoped=true&","dependencies":[{"path":"/var/www/html/boss-web/src/components/forms/BaseFileUploader.vue","mtime":1611164378571},{"path":"/var/www/html/boss-web/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm1ldGEtdXBsb2FkLWJveCB7CiAgd2lkdGg6IDEwMCU7CiAgLm1ldGEtbGFiZWwgewogICAgZm9udC1zaXplOiAxNnB4OwogICAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgICBtYXJnaW4tYm90dG9tOiAxMHB4OwogIH0KICAubWV0YS1kZXNjIHsKICAgIGZvbnQtc2l6ZTogMTRweDsKICAgIHBhZGRpbmctbGVmdDogMTdweDsKICAgIG1hcmdpbi1ib3R0b206IDE4cHg7CiAgICB3aWR0aDogMTAwJTsKICB9CiAgLm1ldGEtY3VzdG9tLXVwbG9hZCB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgZmxleC13cmFwOiB3cmFwOwogICAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOwogICAgcG9zaXRpb246IHJlbGF0aXZlOwogICAgd2lkdGg6IDEwMCU7CiAgICBwYWRkaW5nOiAxNXB4IDMwcHg7CiAgICBtYXJnaW46IDAgMCAzMHB4IDE3cHg7CiAgICBib3JkZXI6IDNweCBkYXNoZWQgI2JjZTBmZDsKICAgIHRyYW5zaXRpb246IDAuNHM7CiAgICBpbnB1dFt0eXBlPSJmaWxlIl0gewogICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgICAgIGxlZnQ6IDA7CiAgICAgIHRvcDogMDsKICAgICAgei1pbmRleDogMjsKICAgICAgaGVpZ2h0OiAxMDAlOwogICAgICB3aWR0aDogMTAwJTsKICAgICAgb3BhY2l0eTogMDsKICAgICAgY3Vyc29yOiBwb2ludGVyOwogICAgfQogICAgLm1ldGEtdGV4dC5iaWcgewogICAgICBjb2xvcjogIzY0YjRmOTsKICAgICAgZm9udC1zaXplOiAzMHB4OwogICAgICBmb250LXdlaWdodDogNzAwOwogICAgICBsaW5lLWhlaWdodDogMS42OwogICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOwogICAgICB3aWR0aDogMTAwJTsKICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwogICAgICB0cmFuc2l0aW9uOiAwLjRzOwogICAgfQogICAgLm1ldGEtdGV4dC5zbWFsbCB7CiAgICAgIGNvbG9yOiAjNjRiNGY5OwogICAgICBmb250LXNpemU6IDE1cHg7CiAgICAgIGZvbnQtd2VpZ2h0OiA3MDA7CiAgICAgIGxpbmUtaGVpZ2h0OiAxLjY7CiAgICAgIHRyYW5zaXRpb246IDAuNHM7CiAgICB9CiAgfQp9CgpkaXYubWV0YS1jb250YWluZXIgLm1ldGEtY3VzdG9tLXVwbG9hZDpob3ZlciB7CiAgYm9yZGVyLWNvbG9yOiAjMDM5YmU1Owp9CgpkaXYubWV0YS1jb250YWluZXIgLm1ldGEtY3VzdG9tLXVwbG9hZDpob3ZlciBkaXYubWV0YS10ZXh0IHsKICBjb2xvcjogIzAzOWJlNTsKfQoKLm1ldGEtY3VzdG9tLXVwbG9hZC5oYXMtZXJyb3IsCi5tZXRhLWN1c3RvbS11cGxvYWQuaGFzLWVycm9yIC5tZXRhLXRleHQgewogIGJvcmRlci1jb2xvcjogI2UyM2EzNjsKICBjb2xvcjogI2UyM2EzNiAhaW1wb3J0YW50Owp9CgovKgpNT0JJTEUgUkVTUE9OU0lWRU5FU1MgCi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi8KCkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHsKICAubWV0YS11cGxvYWQtYm94IC5tZXRhLWxhYmVsIHsKICAgIGZvbnQtc2l6ZTogMTVweDsKICB9CgogIC5tZXRhLXVwbG9hZC1ib3ggLm1ldGEtY3VzdG9tLXVwbG9hZCAubWV0YS10ZXh0LnNtYWxsIHsKICAgIGZvbnQtc2l6ZTogMTNweDsKICB9Cn0KCkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDgwcHgpIHsKICAubWV0YS11cGxvYWQtYm94IC5tZXRhLWxhYmVsIHsKICAgIGZvbnQtc2l6ZTogMTNweDsKICB9CgogIC5tZXRhLXVwbG9hZC1ib3ggLm1ldGEtZGVzYyB7CiAgICBmb250LXNpemU6IDEycHg7CiAgICBtYXJnaW4tYm90dG9tOiAxNXB4OwogIH0KICAubWV0YS11cGxvYWQtYm94IC5tZXRhLWN1c3RvbS11cGxvYWQgLm1ldGEtdGV4dC5zbWFsbCB7CiAgICBmb250LXNpemU6IDEycHg7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgfQp9Cg=="},{"version":3,"sources":["BaseFileUploader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BaseFileUploader.vue","sourceRoot":"src/components/forms","sourcesContent":["<template>\n  <div class=\"meta-upload-box flex-wrap\">\n    <div class=\"meta-label\">{{ label }}</div>\n    <div class=\"meta-desc\" v-html=\"description\">{{ description }}</div>\n    <div class=\"meta-custom-upload\" :class=\"{ 'has-error': hasError }\">\n      <form enctype=\"multipart/form-data\" novalidate>\n        <input\n          :ref=\"fileLabel\"\n          type=\"file\"\n          name=\"file\"\n          :accept=\"uploadType\"\n          @input=\"filesChange($event.target.name, $event.target.files)\"\n          :disabled=\"isUploading\"\n        />\n        <!-- <div class=\"meta-text big\">DRAG/CLICK TO UPLOAD YOUR FILE HERE</div> -->\n        <div class=\"meta-text small\">\n          {{\n            filename\n              ? filename\n              : properties.filename\n              ? properties.filename\n              : \"DRAG/CLICK TO UPLOAD YOUR FILE HERE\"\n          }}\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nconst STATUS_INITIAL = 0,\n  STATUS_SAVING = 1,\n  STATUS_SUCCESS = 2,\n  STATUS_FAILED = 3;\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"BaseFileUploader\",\n  props: {\n    uploadType: {\n      type: String,\n      default: \"image/*, application/pdf\",\n    },\n    hasError: {\n      type: Boolean,\n      default: false,\n      required: false,\n    },\n    label: {\n      type: String,\n      default: \"\",\n    },\n    description: {\n      type: String,\n      default: \"\",\n    },\n    properties: {\n      type: Object,\n      default() {\n        return {};\n      },\n    },\n    type: {\n      type: String,\n      default: \"\",\n    },\n    fileLabel: {\n      type: String,\n      default: \"\",\n    },\n    isEvaluation: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  data() {\n    return {\n      currentStatus: null,\n      filename: \"\",\n      connection: null,\n    };\n  },\n  mounted() {\n    this.$store.commit(\"setLoading\", false);\n  },\n  computed: {\n    ...mapGetters([\n      \"applicationRequirements\",\n      \"isUploading\",\n      \"buildingApplicationRequirements\",\n      \"currentEvaluationFile\",\n      \"isUploadSuccess\",\n      \"isFileUploadFailed\",\n    ]),\n    isInitial() {\n      return this.currentStatus === STATUS_INITIAL;\n    },\n    isSaving() {\n      return this.currentStatus === STATUS_SAVING;\n    },\n    isSuccess() {\n      return this.currentStatus === STATUS_SUCCESS;\n    },\n    isFailed() {\n      return this.currentStatus === STATUS_FAILED;\n    },\n  },\n  methods: {\n    async save(formData) {\n      if (!this.isEvaluation) {\n        if (this.type === \"business\") {\n          await this.$store.dispatch(\"uploadRequirements\", formData);\n        } else if (this.type === \"property\") {\n          await this.$store.dispatch(\"uploadBuildingRequirements\", formData);\n        }\n        if (this.isFileUploadFailed) {\n          this.filename = \"DRAG/CLICK TO UPLOAD YOUR FILE HERE\";\n        }\n      } else {\n        this.$store.commit(\"setCurrentEvaluationFile\", formData);\n      }\n    },\n    async initiateWebSocket() {\n      console.log(\"Starting connection to WebSocket Server\");\n      this.connection = new WebSocket(\n        \"ws://localhost:8000/ws/building-file-upload/\"\n      );\n    },\n    async closeConnection() {\n      this.connection.close();\n    },\n    async sendData(data) {\n      this.connection.send(data);\n    },\n    async save2(formData) {\n      try {\n        this.initiateWebSocket();\n        this.connection.onmessage = (event) => {\n          this.sendData(formData);\n          this.closeConnection();\n        };\n\n        this.connection.onopen = function (event) {\n          console.log(\"Successfully connected to the api websocket server...\");\n        };\n\n        this.connection.onclose = (event) => {\n          console.log(event);\n          console.log(\"successfull closed.\");\n        };\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    filesChange(fieldName, fileList) {\n      // handle file changes\n      var formData = new FormData();\n      if (!fileList.length) return;\n      let payload = {};\n      // append the files to FormData\n\n      if (!this.isEvaluation) {\n        let file = this.$refs[`${this.fileLabel}`];\n        Array.from(Array(fileList.length).keys()).map((x) => {\n          if (\n            (this.uploadType === \"application/pdf\" &&\n              fileList[x][\"type\"] === \"application/pdf\") ||\n            (this.uploadType === \"image/*, application/pdf\" &&\n              (fileList[x][\"type\"] === \"image/*\" ||\n                fileList[x][\"type\"] === \"application/pdf\"))\n          ) {\n            if (fileList[x].size <= 26214400) {\n              this.filename = fileList[x].name;\n              formData.append(fieldName, fileList[x]);\n              let requirement_id =\n                this.type === \"business\"\n                  ? this.applicationRequirements.id\n                  : this.buildingApplicationRequirements.id;\n              formData.append(\"requirement_id\", requirement_id);\n              formData.append(\"requirements_label\", this.fileLabel);\n              formData.append(\"filename\", fileList[x].name);\n              payload.requirement_id = requirement_id;\n              payload.requirements_label = this.fileLabel;\n              payload.filename = fileList[x].name;\n              payload.file = fileList[x].file;\n              this.save(formData);\n            } else {\n              file.value = null;\n              this.$swal({\n                title: \"File is too large!\",\n                text: \"File size must not exceed 25mb.\",\n                icon: \"error\",\n              });\n            }\n          } else {\n            this.$swal({\n              title: \"Invalid file type!\",\n              text: \"Please enter a valid file format.\",\n              icon: \"error\",\n            });\n          }\n        });\n      } else {\n        Array.from(Array(fileList.length).keys()).map((x) => {\n          if (\n            (this.uploadType === \"application/pdf\" &&\n              fileList[x][\"type\"] === \"application/pdf\") ||\n            (this.uploadType === \"image/*, application/pdf\" &&\n              (fileList[x][\"type\"] === \"image/*\" ||\n                fileList[x][\"type\"] === \"application/pdf\"))\n          ) {\n            if (fileList[x].size <= 26214400) {\n              this.filename = fileList[x].name;\n              formData.append(fieldName, fileList[x]);\n              let requirement_id =\n                this.type === \"business\"\n                  ? this.applicationRequirements.id\n                  : this.buildingApplicationRequirements.id;\n              formData.append(\"filename\", fileList[x].name);\n              this.save(formData);\n            } else {\n              file.value = null;\n              this.$swal({\n                title: \"File is too large!\",\n                text: \"File size must not exceed 25mb.\",\n                icon: \"error\",\n              });\n            }\n          } else {\n            this.$swal({\n              title: \"Invalid file type!\",\n              text: \"Please enter a valid file format.\",\n              icon: \"error\",\n            });\n          }\n        });\n      }\n      // save it\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.meta-upload-box {\n  width: 100%;\n  .meta-label {\n    font-size: 16px;\n    font-weight: bold;\n    margin-bottom: 10px;\n  }\n  .meta-desc {\n    font-size: 14px;\n    padding-left: 17px;\n    margin-bottom: 18px;\n    width: 100%;\n  }\n  .meta-custom-upload {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    width: 100%;\n    padding: 15px 30px;\n    margin: 0 0 30px 17px;\n    border: 3px dashed #bce0fd;\n    transition: 0.4s;\n    input[type=\"file\"] {\n      position: absolute;\n      left: 0;\n      top: 0;\n      z-index: 2;\n      height: 100%;\n      width: 100%;\n      opacity: 0;\n      cursor: pointer;\n    }\n    .meta-text.big {\n      color: #64b4f9;\n      font-size: 30px;\n      font-weight: 700;\n      line-height: 1.6;\n      text-transform: uppercase;\n      width: 100%;\n      text-align: center;\n      transition: 0.4s;\n    }\n    .meta-text.small {\n      color: #64b4f9;\n      font-size: 15px;\n      font-weight: 700;\n      line-height: 1.6;\n      transition: 0.4s;\n    }\n  }\n}\n\ndiv.meta-container .meta-custom-upload:hover {\n  border-color: #039be5;\n}\n\ndiv.meta-container .meta-custom-upload:hover div.meta-text {\n  color: #039be5;\n}\n\n.meta-custom-upload.has-error,\n.meta-custom-upload.has-error .meta-text {\n  border-color: #e23a36;\n  color: #e23a36 !important;\n}\n\n/*\nMOBILE RESPONSIVENESS \n--------------------------------------------------------------*/\n\n@media only screen and (max-width: 768px) {\n  .meta-upload-box .meta-label {\n    font-size: 15px;\n  }\n\n  .meta-upload-box .meta-custom-upload .meta-text.small {\n    font-size: 13px;\n  }\n}\n\n@media only screen and (max-width: 480px) {\n  .meta-upload-box .meta-label {\n    font-size: 13px;\n  }\n\n  .meta-upload-box .meta-desc {\n    font-size: 12px;\n    margin-bottom: 15px;\n  }\n  .meta-upload-box .meta-custom-upload .meta-text.small {\n    font-size: 12px;\n    text-align: center;\n  }\n}\n</style>\n"]}]}