{"remainingRequest":"/var/www/html/boss-web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/html/boss-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/boss-web/src/pages/AppointmentInvoice.vue?vue&type=template&id=0b718132&scoped=true&","dependencies":[{"path":"/var/www/html/boss-web/src/pages/AppointmentInvoice.vue","mtime":1606094475115},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}