{"remainingRequest":"/var/www/html/boss-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/boss-web/src/components/application/BuildingUploadStep.vue?vue&type=template&id=6a890058&scoped=true&","dependencies":[{"path":"/var/www/html/boss-web/src/components/application/BuildingUploadStep.vue","mtime":1620783803980},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9Im1ldGEtY29udGFpbmVyIGZsZXgtY2VudGVyIGJ1aWxkaW5nLWFwcGxpY2F0aW9uIj4KICA8aDEgY2xhc3M9Im1ldGEtZm9ybS10aXRsZSI+VXBsb2FkIHlvdXIgUmVxdWlyZW1lbnRzPC9oMT4KICA8ZGl2IGNsYXNzPSJtZXRhLW5vdGUiPgogICAgQWxtb3N0IERvbmUhIFBsZWFzZSB1cGxvYWQgeW91ciBmaWxlLiBPbmx5IGFsbG93ZWQgZm9ybWF0IC0gUERGLgogIDwvZGl2PgoKICA8IS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIEEuIExFR0FMIERPQ1VNRU5UUyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0+CiAgPGRpdiBjbGFzcz0ibWV0YS1mb3JtLWdyb3VwIG1iNjAiPgogICAgPGRpdiBjbGFzcz0ibWV0YS1ncm91cC10aXRsZSI+CiAgICAgIEEuIExlZ2FsIERvY3VtZW50cyAtIE9ubHkgb25lIFBERiBGaWxlIGZvciBhbGwgbGVnYWwgZG9jdW1lbnRzLgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJtZXRhLWNoZWNrLWdyb3VwIj4KICAgICAgPGRpdiBAY2xpY2s9ImNoZWNrUmVxdWlyZW1lbnRzKGxlZ2FsX2RvY3VtZW50cywgdHJ1ZSkiPgogICAgICAgIDxmb250LWF3ZXNvbWUtaWNvbiBpY29uPSJjaGVjayIgY2xhc3M9Im1yNSBjaGVjay1pY29uIiAvPkNoZWNrIEFsbAogICAgICA8L2Rpdj4KICAgICAgPGRpdiBAY2xpY2s9ImNoZWNrUmVxdWlyZW1lbnRzKGxlZ2FsX2RvY3VtZW50cywgZmFsc2UpIj4KICAgICAgICA8Zm9udC1hd2Vzb21lLWljb24gaWNvbj0idGltZXMiIGNsYXNzPSJtcjUgeC1pY29uIiAvPiBVbmNoZWNrIEFsbAogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPHVsIGNsYXNzPSJwYXJlbnQtbGlzdCI+CiAgICAgIDwhLS0gQS4gTEVHQUwgRE9DVU1FTlRTIDEgLS0+CiAgICAgIDxsaT4KICAgICAgICA8ZGl2IGNsYXNzPSJtZXRhLWNoZWNrYm94IGZsZXgtY2VudGVyIj4KICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICB0eXBlPSJjaGVja2JveCIKICAgICAgICAgICAgaWQ9ImxlZ2FsX2RvY3NfMSIKICAgICAgICAgICAgdi1tb2RlbD0ibGVnYWxfZG9jdW1lbnRzLmxlZ2FsX2RvY3NfMSIKICAgICAgICAgIC8+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJjdXN0b20tY2hlY2tib3ggZmxleC1jZW50ZXIiPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iY2hlY2siCiAgICAgICAgICAgICAgPjxmb250LWF3ZXNvbWUtaWNvbiBpY29uPSJjaGVjayIgY2xhc3M9Im1yNSBjaGVjay1pY29uIgogICAgICAgICAgICAvPjwvc3Bhbj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGxhYmVsIGZvcj0ibGVnYWxfZG9jc18xIgogICAgICAgICAgICA+MS4gQ2VydGlmaWVkIHRydWUgY29weSBvZiBUcmFuc2ZlciBDZXJ0aWZpY2F0ZSBvZiBUaXRsZQogICAgICAgICAgICAoVENUKSA8c3BhbiBjbGFzcz0iY29weS1pbmRpY2F0b3IiPjEgT3JpZ2luYWwgY29weTwvc3Bhbj48L2xhYmVsCiAgICAgICAgICA+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPCEtLSBERVRBSUxTIC0tPgogICAgICAgIDx1bCBjbGFzcz0ibWFpbi1saXN0Ij4KICAgICAgICAgIDxsaT4KICAgICAgICAgICAgSWYgVENUIGlzIE5PVCBZRVQgaW4gdGhlIG5hbWUgb2YgdGhlIGFwcGxpY2FudCwgYW55IG9mIHRoZQogICAgICAgICAgICBmb2xsb3dpbmc6ICA8c3BhbiBjbGFzcz0iY29weS1pbmRpY2F0b3IiPjEgUGhvdG9jb3B5PC9zcGFuPgogICAgICAgICAgICA8dWwgY2xhc3M9InN1Yi1saXN0Ij4KICAgICAgICAgICAgICA8bGk+RGVlZCBvZiBBYnNvbHV0ZSBTYWxlIC0gTm90YXJpemVkPC9saT4KICAgICAgICAgICAgICA8bGk+Q29udHJhY3QgdG8gU2VsbCAtIE5vdGFyaXplZDwvbGk+CiAgICAgICAgICAgICAgPGxpPkRlZWQgb2YgQXNzaWdubWVudCAvIERvbmF0aW9uIG9yIGFueSBlcXVpdmFsZW50IC0gTm90YXJpemVkPC9saT4KICAgICAgICAgICAgPC91bD4KICAgICAgICAgIDwvbGk+CiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIElmIHRoZSBhcHBsaWNhbnQgaXMgYSBMRVNTRUUgb3IgVENUIGlzIGluIHRoZSBuYW1lIG9mIGEKICAgICAgICAgICAgQ29ycG9yYXRpb24sIHVwbG9hZDogPHNwYW4gY2xhc3M9ImNvcHktaW5kaWNhdG9yIj4xIFBob3RvY29weTwvc3Bhbj4KICAgICAgICAgICAgPHVsIGNsYXNzPSJzdWItbGlzdCI+CiAgICAgICAgICAgICAgPGxpPkxlYXNlIENvbnRyYWN0IC0gTm90YXJpemVkPC9saT4KICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICBDb3Jwb3JhdGUgU2VjcmV0YXJ5J3MgQ2VydGlmaWNhdGUgKGF1dGhvcml6aW5nIHRoZSBzaWduYXRvcnkKICAgICAgICAgICAgICAgIHdpdGggZ2VuZXJhbCBpbmZvcm1hdGlvbiBzaGVldCkgLSBOb3Rhcml6ZWQKICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICA8L3VsPgogICAgICAgICAgPC9saT4KICAgICAgICAgIDxsaT4KICAgICAgICAgICAgSWYgdGhlIGFwcGxpY2FudCBpcyBOT1QgdGhlIHJlZ2lzdGVyZWQgb3duZXIgb3Igd2l0aCBjby1vd25lciBvZgogICAgICAgICAgICB0aGUgbGFuZCwgdXBsb2FkOiAKICAgICAgICAgICAgPHVsIGNsYXNzPSJzdWItbGlzdCI+CiAgICAgICAgICAgICAgPGxpPkFmZmlkYXZpdCBvZiBDb25zZW50IC0gTm90YXJpemVkIDxzcGFuIGNsYXNzPSJjb3B5LWluZGljYXRvciI+MSBQaG90b2NvcHk8L3NwYW4+PC9saT4KICAgICAgICAgICAgICA8bGk+RXh0cmFqdWRpY2lhbCBTZXR0bGVtZW50IC0gTm90YXJpemVkIDxzcGFuIGNsYXNzPSJjb3B5LWluZGljYXRvciI+MSBQaG90b2NvcHk8L3NwYW4+PC9saT4KICAgICAgICAgICAgPC91bD4KICAgICAgICAgIDwvbGk+CiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIElmIHRoZSBhcHBsaWNhbnQgaGFzIGEgUmVwcmVzZW50YXRpdmUKICAgICAgICAgICAgPHVsIGNsYXNzPSJzdWItbGlzdCI+CiAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbiBMZXR0ZXIgdG8gQVBQTFkgaW4gYmVoYWxmIG9mIHRoZSBhcHBsaWNhbnQgKHdpdGgKICAgICAgICAgICAgICAgIHZhbGlkIElEIG9mIGFwcGxpY2FudCBhbmQgcmVwcmVzZW50YXRpdmUpIC0gTm90YXJpemVkIDxzcGFuIGNsYXNzPSJjb3B5LWluZGljYXRvciI+MSBPcmlnaW5hbCBDb3B5PC9zcGFuPgogICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgU3BlY2lhbCBQb3dlciBvZiBBdHRvcm5leSAoU1BBKSB0byBTSUdOIGluIGJlaGFsZiBvZiB0aGUKICAgICAgICAgICAgICAgIGFwcGxpY2FudCAod2l0aCB2YWxpZCBJRCBvZiBhcHBsaWNhbnQgYW5kIHJlcHJlc2VudGF0aXZlKSAtIE5vdGFyaXplZCA8c3BhbiBjbGFzcz0iY29weS1pbmRpY2F0b3IiPjEgUGhvdG9jb3B5PC9zcGFuPgogICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICA8L2xpPgogICAgICAgIDwvdWw+CiAgICAgIDwvbGk+CgogICAgICA8IS0tIEEuIExFR0FMIERPQ1VNRU5UUyAyIC0tPgogICAgICA8bGk+CiAgICAgICAgPGRpdiBjbGFzcz0ibWV0YS1jaGVja2JveCBmbGV4LWNlbnRlciI+CiAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgdHlwZT0iY2hlY2tib3giCiAgICAgICAgICAgIGlkPSJsZWdhbF9kb2NzXzIiCiAgICAgICAgICAgIHYtbW9kZWw9ImxlZ2FsX2RvY3VtZW50cy5sZWdhbF9kb2NzXzIiCiAgICAgICAgICAvPgogICAgICAgICAgPGRpdiBjbGFzcz0iY3VzdG9tLWNoZWNrYm94IGZsZXgtY2VudGVyIj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNoZWNrIgogICAgICAgICAgICAgID48Zm9udC1hd2Vzb21lLWljb24gaWNvbj0iY2hlY2siIGNsYXNzPSJtcjUgY2hlY2staWNvbiIKICAgICAgICAgICAgLz48L3NwYW4+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxsYWJlbCBmb3I9ImxlZ2FsX2RvY3NfMiIKICAgICAgICAgICAgPjIuIFRheCBEZWNsYXJhdGlvbiBvZiBSZWFsIFByb3BlcnR5IDxzcGFuIGNsYXNzPSJjb3B5LWluZGljYXRvciI+MSBQaG90b2NvcHk8L3NwYW4+PC9sYWJlbAogICAgICAgICAgPgogICAgICAgIDwvZGl2PgogICAgICA8L2xpPgoKICAgICAgPCEtLSBBLiBMRUdBTCBET0NVTUVOVFMgMyAtLT4KICAgICAgPGxpPgogICAgICAgIDxkaXYgY2xhc3M9Im1ldGEtY2hlY2tib3ggZmxleC1jZW50ZXIiPgogICAgICAgICAgPGlucHV0CiAgICAgICAgICAgIHR5cGU9ImNoZWNrYm94IgogICAgICAgICAgICBpZD0ibGVnYWxfZG9jc18zIgogICAgICAgICAgICB2LW1vZGVsPSJsZWdhbF9kb2N1bWVudHMubGVnYWxfZG9jc18zIgogICAgICAgICAgLz4KICAgICAgICAgIDxkaXYgY2xhc3M9ImN1c3RvbS1jaGVja2JveCBmbGV4LWNlbnRlciI+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjaGVjayI+CiAgICAgICAgICAgICAgPGZvbnQtYXdlc29tZS1pY29uIGljb249ImNoZWNrIiBjbGFzcz0ibXI1IGNoZWNrLWljb24iCiAgICAgICAgICAgIC8+PC9zcGFuPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8bGFiZWwgZm9yPSJsZWdhbF9kb2NzXzMiCiAgICAgICAgICAgID4zLiBUYXggQ2xlYXJhbmNlIG9mIFJlYWwgUHJvcGVydHkgLSBDdXJyZW50IFllYXIgPHNwYW4gY2xhc3M9ImNvcHktaW5kaWNhdG9yIj4xIFBob3RvY29weTwvc3Bhbj48L2xhYmVsCiAgICAgICAgICA+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvbGk+CgogICAgICA8IS0tIEEuIExFR0FMIERPQ1VNRU5UUyA0IC0tPgogICAgICA8bGk+CiAgICAgICAgPGRpdiBjbGFzcz0ibWV0YS1jaGVja2JveCBmbGV4LWNlbnRlciI+CiAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgdHlwZT0iY2hlY2tib3giCiAgICAgICAgICAgIGlkPSJsZWdhbF9kb2NzXzQiCiAgICAgICAgICAgIHYtbW9kZWw9ImxlZ2FsX2RvY3VtZW50cy5sZWdhbF9kb2NzXzQiCiAgICAgICAgICAvPgogICAgICAgICAgPGRpdiBjbGFzcz0iY3VzdG9tLWNoZWNrYm94IGZsZXgtY2VudGVyIj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNoZWNrIj4KICAgICAgICAgICAgICA8Zm9udC1hd2Vzb21lLWljb24gaWNvbj0iY2hlY2siIGNsYXNzPSJtcjUgY2hlY2staWNvbiIgLz4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8bGFiZWwgZm9yPSJsZWdhbF9kb2NzXzQiCiAgICAgICAgICAgID40LiBMb2NhbCBhbmQgTmF0aW9uYWwgQWdlbmNpZXMgQ2xlYXJhbmNlcyA8c3BhbiBjbGFzcz0iY29weS1pbmRpY2F0b3IiPjEgT1JJR0lOQUwgQ09QWTwvc3Bhbj48L2xhYmVsCiAgICAgICAgICA+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPHVsIGNsYXNzPSJzdWItbGlzdCI+CiAgICAgICAgICA8bGk+QmFyYW5nYXkgQ2xlYXJhbmNlIChmb3IgY29uc3RydWN0aW9uKTwvbGk+CiAgICAgICAgICA8bGk+SG9tZW93bmVyJ3MgQ2xlYXJhbmNlIChmb3IgY29uc3RydWN0aW9uKTwvbGk+CiAgICAgICAgICA8bGk+TmF0aW9uYWwgQWdlbmNpZXMgQ2xlYXJhbmNlPC9saT4KICAgICAgICAgIDxsaT5BZmZpZGF2aXQgb2YgVW5kZXJ0YWtpbmcgLSBOb3Rhcml6ZWQ8L2xpPgogICAgICAgIDwvdWw+CiAgICAgIDwvbGk+CiAgICA8L3VsPgoKICAgIDxiYXNlLWZpbGUtdXBsb2FkZXIKICAgICAgZmlsZUxhYmVsPSJ0Y3QiCiAgICAgIDpwcm9wZXJ0aWVzPSJnZXRQcm9wZXJ0eSgndGN0JykiCiAgICAgIHR5cGU9InByb3BlcnR5IgogICAgICA6aGFzRXJyb3I9InVwbG9hZEVycm9ycy50Y3QiCiAgICAvPgogIDwvZGl2PgoKICA8IS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tIEIuIFRFQ0hOSUNBTCBET0NVTUVOVFMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0+CiAgPGRpdiBjbGFzcz0ibWV0YS1mb3JtLWdyb3VwIG1iNjAiPgogICAgPGRpdiBjbGFzcz0ibWV0YS1ncm91cC10aXRsZSI+Qi4gVGVjaG5pY2FsIERvY3VtZW50czwvZGl2PgogICAgPGRpdiBjbGFzcz0ibWV0YS1jaGVjay1ncm91cCI+CiAgICAgIDxkaXYgQGNsaWNrPSJjaGVja1JlcXVpcmVtZW50cyh0ZWNobmljYWxfZG9jdW1lbnRzLCB0cnVlKSI+CiAgICAgICAgPGZvbnQtYXdlc29tZS1pY29uIGljb249ImNoZWNrIiBjbGFzcz0ibXI1IGNoZWNrLWljb24iIC8+Q2hlY2sgQWxsCiAgICAgIDwvZGl2PgogICAgICA8ZGl2IEBjbGljaz0iY2hlY2tSZXF1aXJlbWVudHModGVjaG5pY2FsX2RvY3VtZW50cywgZmFsc2UpIj4KICAgICAgICA8Zm9udC1hd2Vzb21lLWljb24gaWNvbj0idGltZXMiIGNsYXNzPSJtcjUgeC1pY29uIiAvPiBVbmNoZWNrIEFsbAogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPHVsIGNsYXNzPSJwYXJlbnQtbGlzdCI+CiAgICAgIDxsaT4KICAgICAgICA8ZGl2IGNsYXNzPSJtZXRhLWNoZWNrYm94IGZsZXgtY2VudGVyIj4KICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICB0eXBlPSJjaGVja2JveCIKICAgICAgICAgICAgaWQ9InRlY2hfZG9jc18xIgogICAgICAgICAgICB2LW1vZGVsPSJ0ZWNobmljYWxfZG9jdW1lbnRzLnRlY2hfZG9jc18xIgogICAgICAgICAgLz4KICAgICAgICAgIDxkaXYgY2xhc3M9ImN1c3RvbS1jaGVja2JveCBmbGV4LWNlbnRlciI+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjaGVjayIKICAgICAgICAgICAgICA+PGZvbnQtYXdlc29tZS1pY29uIGljb249ImNoZWNrIiBjbGFzcz0ibXI1IGNoZWNrLWljb24iCiAgICAgICAgICAgIC8+PC9zcGFuPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8bGFiZWwgZm9yPSJ0ZWNoX2RvY3NfMSI+MS4gQXBwbGljYXRpb24gRm9ybXM8L2xhYmVsPgogICAgICAgIDwvZGl2PgogICAgICAgIDx1bCBjbGFzcz0ibWFpbi1saXN0Ij4KICAgICAgICAgIDxsaT5Vbml0ZWQgQXBwbGljYXRpb24gRm9ybSBmb3IgQnVpbGRpbmcgUGVybWl0IGFuZCBGU0VDKHNpZ25lZCBhbmQgZHJ5IHNlYWwgYnkgYW4gRW5naW5lZXIvQXJjaGl0ZWN0IGFuZCBhcHBsaWNhbnQgb24gYWxsIHBhZ2VzKSAtIE5vdGFyaXplZCA8c3BhbiBjbGFzcz0iY29weS1pbmRpY2F0b3IiPjUgQ29waWVzPC9zcGFuPjwvbGk+CiAgICAgICAgICA8bGk+CiAgICAgICAgICAgIEFuY2lsbGFyeSBBcHBsaWNhdGlvbiBGb3JtcyA8c3BhbiBjbGFzcz0iY29weS1pbmRpY2F0b3IiPjUgQ29waWVzIEVhY2g8L3NwYW4+CiAgICAgICAgICAgIDx1bCBjbGFzcz0ic3ViLWxpc3QiPgogICAgICAgICAgICAgIDxsaT5BcmNoaXRlY3R1cmFsIFBlcm1pdDwvbGk+CiAgICAgICAgICAgICAgPGxpPkNpdmlsL1N0cnVjdHVyYWwgUGVybWl0PC9saT4KICAgICAgICAgICAgICA8bGk+U2FuaXRhcnkvUGx1bWJpbmcgUGVybWl0PC9saT4KICAgICAgICAgICAgICA8bGk+TWVjaGFuaWNhbCBQZXJtaXQ8L2xpPgogICAgICAgICAgICAgIDxsaT5TaWduIFBlcm1pdDwvbGk+CiAgICAgICAgICAgICAgPGxpPk1lY2hhbmljYWwgUGVybWl0PC9saT4KICAgICAgICAgICAgICA8bGk+RWxlY3Ryb25pYyBQZXJtaXQ8L2xpPgogICAgICAgICAgICA8L3VsPgogICAgICAgICAgPC9saT4KICAgICAgICAgIDxsaT5Mb2NhdGlvbmFsIENsZWFyYW5jZSBBcHBsaWNhdGlvbiBGb3JtIDxzcGFuIGNsYXNzPSJjb3B5LWluZGljYXRvciI+MSBDb3B5PC9zcGFuPjwvbGk+CiAgICAgICAgICA8bGk+Q29udHJhY3RvcidzIFRlbXBvcmFyeSBCdXNpbmVzcyBQZXJtaXQgQXBwbGljYXRpb24gRm9ybSA8c3BhbiBjbGFzcz0iY29weS1pbmRpY2F0b3IiPjEgQ29weTwvc3Bhbj48L2xpPgogICAgICAgIDwvdWw+CiAgICAgIDwvbGk+CiAgICA8L3VsPgogICAgPGJhc2UtZmlsZS11cGxvYWRlcgogICAgICBmaWxlTGFiZWw9ImFyY2hpdGVjdHVyYWxfcGVybWl0IgogICAgICA6cHJvcGVydGllcz0iZ2V0UHJvcGVydHkoJ2FyY2hpdGVjdHVyYWxfcGVybWl0JykiCiAgICAgIHR5cGU9InByb3BlcnR5IgogICAgICA6aGFzRXJyb3I9InVwbG9hZEVycm9ycy5hcmNoaXRlY3R1cmFsX3Blcm1pdCIKICAgIC8+CiAgPC9kaXY+CgogIDwhLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gQy4gREVTSUdOIFBMQU5TIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tPgogIDwhLS0gPGRpdiBjbGFzcz0ibWV0YS1mb3JtLWdyb3VwIG1iNjAiPgogICAgPGRpdiBjbGFzcz0ibWV0YS1ncm91cC10aXRsZSI+Qy4gRGVzaWduIFBsYW5zPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJtZXRhLWNoZWNrLWdyb3VwIj4KICAgICAgPGRpdiBAY2xpY2s9ImNoZWNrUmVxdWlyZW1lbnRzKGRlc2lnbl9wbGFucywgdHJ1ZSkiPgogICAgICAgIDxmb250LWF3ZXNvbWUtaWNvbiBpY29uPSJjaGVjayIgY2xhc3M9Im1yNSBjaGVjay1pY29uIiAvPkNoZWNrIEFsbAogICAgICA8L2Rpdj4KICAgICAgPGRpdiBAY2xpY2s9ImNoZWNrUmVxdWlyZW1lbnRzKGRlc2lnbl9wbGFucywgZmFsc2UpIj4KICAgICAgICA8Zm9udC1hd2Vzb21lLWljb24gaWNvbj0idGltZXMiIGNsYXNzPSJtcjUgeC1pY29uIiAvPiBVbmNoZWNrIEFsbAogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPHVsIGNsYXNzPSJwYXJlbnQtbGlzdCI+CiAgICAgIDxsaT4KICAgICAgICA8ZGl2IGNsYXNzPSJtZXRhLWNoZWNrYm94IGZsZXgtY2VudGVyIj4KICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICB0eXBlPSJjaGVja2JveCIKICAgICAgICAgICAgaWQ9ImRlc2lnbl8xIgogICAgICAgICAgICB2LW1vZGVsPSJkZXNpZ25fcGxhbnMuZGVzaWduXzEiCiAgICAgICAgICAvPgogICAgICAgICAgPGRpdiBjbGFzcz0iY3VzdG9tLWNoZWNrYm94IGZsZXgtY2VudGVyIj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNoZWNrIgogICAgICAgICAgICAgID48Zm9udC1hd2Vzb21lLWljb24gaWNvbj0iY2hlY2siIGNsYXNzPSJtcjUgY2hlY2staWNvbiIKICAgICAgICAgICAgLz48L3NwYW4+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxsYWJlbCBmb3I9ImRlc2lnbl8xIj4xLiBTdXJ2ZXkgUGxhbnM8L2xhYmVsPgogICAgICAgIDwvZGl2PgogICAgICAgIDx1bCBjbGFzcz0ic3ViLWxpc3QiPgogICAgICAgICAgPGxpPlJlbG9jYXRpb24gU3VydmV5IFJlcG9ydCBhbmQgQ2VydGlmaWNhdGlvbjwvbGk+CiAgICAgICAgICA8bGk+TG90IFBsYW4gd2l0aCBWaWNpbml0eSBNYXA8L2xpPgogICAgICAgIDwvdWw+CiAgICAgIDwvbGk+CgogICAgICA8bGk+CiAgICAgICAgPGRpdiBjbGFzcz0ibWV0YS1jaGVja2JveCBmbGV4LWNlbnRlciI+CiAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgdHlwZT0iY2hlY2tib3giCiAgICAgICAgICAgIGlkPSJkZXNpZ25fMiIKICAgICAgICAgICAgdi1tb2RlbD0iZGVzaWduX3BsYW5zLmRlc2lnbl8yIgogICAgICAgICAgLz4KICAgICAgICAgIDxkaXYgY2xhc3M9ImN1c3RvbS1jaGVja2JveCBmbGV4LWNlbnRlciI+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjaGVjayIKICAgICAgICAgICAgICA+PGZvbnQtYXdlc29tZS1pY29uIGljb249ImNoZWNrIiBjbGFzcz0ibXI1IGNoZWNrLWljb24iCiAgICAgICAgICAgIC8+PC9zcGFuPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8bGFiZWwgZm9yPSJkZXNpZ25fMiI+Mi4gQnVpbGRpbmcgUGxhbnM8L2xhYmVsPgogICAgICAgIDwvZGl2PgogICAgICAgIDx1bCBjbGFzcz0ic3ViLWxpc3QiPgogICAgICAgICAgPGxpPlNob3J0IENpcmN1aXQgQW5hbHlzaXMgYW5kIFZvbHRhZ2UgRHJvcCBDYWxjdWxhdGlvbjwvbGk+CiAgICAgICAgICA8bGk+R3JlZW4gQnVpbGRpbmcgQ29kZTwvbGk+CiAgICAgICAgICA8bGk+RmlyZSBQcm90ZWN0aW9uIFBsYW48L2xpPgogICAgICAgIDwvdWw+CiAgICAgIDwvbGk+CiAgICA8L3VsPgogICAgPGJhc2UtZmlsZS11cGxvYWRlcgogICAgICBmaWxlTGFiZWw9ImRlc2lnbl9wbGFucyIKICAgICAgOnByb3BlcnRpZXM9ImdldFByb3BlcnR5KCdkZXNpZ25fcGxhbnMnKSIKICAgICAgdHlwZT0icHJvcGVydHkiCiAgICAgIDpoYXNFcnJvcj0idXBsb2FkRXJyb3JzLmRlc2lnbl9wbGFucyIKICAgIC8+CiAgPC9kaXY+IC0tPgogIAogIDwhLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gQy4gREVTSUdOIFNQRUNJRklDQVRJT05TIEFORCBET0NVTUVOVFMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0+CiAgPGRpdiBjbGFzcz0ibWV0YS1mb3JtLWdyb3VwIG1iNjAiPgogICAgPGRpdiBjbGFzcz0ibWV0YS1ncm91cC10aXRsZSI+Qy4gRGVzaWduIFNwZWNpZmljYXRpb25zIGFuZCBEb2N1bWVudHM8L2Rpdj4KICAgIDxkaXYgY2xhc3M9Im1ldGEtY2hlY2stZ3JvdXAiPgogICAgICA8ZGl2IEBjbGljaz0iY2hlY2tSZXF1aXJlbWVudHMoZGVzaWduX3NwZWNzLCB0cnVlKSI+CiAgICAgICAgPGZvbnQtYXdlc29tZS1pY29uIGljb249ImNoZWNrIiBjbGFzcz0ibXI1IGNoZWNrLWljb24iIC8+Q2hlY2sgQWxsCiAgICAgIDwvZGl2PgogICAgICA8ZGl2IEBjbGljaz0iY2hlY2tSZXF1aXJlbWVudHMoZGVzaWduX3NwZWNzLCBmYWxzZSkiPgogICAgICAgIDxmb250LWF3ZXNvbWUtaWNvbiBpY29uPSJ0aW1lcyIgY2xhc3M9Im1yNSB4LWljb24iIC8+IFVuY2hlY2sgQWxsCiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8dWwgY2xhc3M9InBhcmVudC1saXN0Ij4KICAgICAgPGxpPgogICAgICAgIDxkaXYgY2xhc3M9Im1ldGEtY2hlY2tib3ggZmxleC1jZW50ZXIiPgogICAgICAgICAgPGlucHV0CiAgICAgICAgICAgIHR5cGU9ImNoZWNrYm94IgogICAgICAgICAgICBpZD0ic3BlY3NfMSIKICAgICAgICAgICAgdi1tb2RlbD0iZGVzaWduX3NwZWNzLnNwZWNzXzEiCiAgICAgICAgICAvPgogICAgICAgICAgPGRpdiBjbGFzcz0iY3VzdG9tLWNoZWNrYm94IGZsZXgtY2VudGVyIj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNoZWNrIgogICAgICAgICAgICAgID48Zm9udC1hd2Vzb21lLWljb24gaWNvbj0iY2hlY2siIGNsYXNzPSJtcjUgY2hlY2staWNvbiIKICAgICAgICAgICAgLz48L3NwYW4+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxsYWJlbCBmb3I9InNwZWNzXzEiPjEuIERlc2lnbiBTcGVjaWZpY2F0aW9ucyBhbmQgRG9jdW1lbnRzPC9sYWJlbD4KICAgICAgICA8L2Rpdj4KICAgICAgICA8dWwgY2xhc3M9InN1Yi1saXN0Ij4KICAgICAgICAgIDxsaT5Qcm9qZWN0IFNwZWNpZmljYXRpb24gPHNwYW4gY2xhc3M9ImNvcHktaW5kaWNhdG9yIj4yIENvcGllczwvc3Bhbj48L2xpPgogICAgICAgICAgPGxpPkJpbGwgb2YgTWF0ZXJpYWxzIDxzcGFuIGNsYXNzPSJjb3B5LWluZGljYXRvciI+MyBDb3BpZXM8L3NwYW4+PC9saT4KICAgICAgICAgIDxsaT5TdHJ1Y3R1cmFsIERlc2lnbiBBbmFseXNpcyBhbmQgQ29tcHV0YXRpb24gKGZvciBzdHJ1Y3R1cmUgdHdvKDIpIHN0b3JleSBhbmQgYWJvdmUgTlNDUCA1dGggRWRpdGlvbikgPHNwYW4gY2xhc3M9ImNvcHktaW5kaWNhdG9yIj4xIENvcHk8L3NwYW4+PC9saT4KICAgICAgICAgIDxsaT5HZW90ZWNoIFJlcG9ydC9Tb2lsIEJvcmluZyBUZXN0IFJlcG9ydCAoZm9yIGJ1aWxkaW5nIHN0cnVjdHVyZXMgdGhyZWUoMykgc3RvcmV5IGFuZCBhYm92ZSkgPHNwYW4gY2xhc3M9ImNvcHktaW5kaWNhdG9yIj4xIENvcHk8L3NwYW4+PC9saT4KICAgICAgICAgIDxsaT5TZWlzbWljIEFuYWx5c2lzIChmb3IgYnVpbGRpbmcgZXhjZWVkaW5nIDcuNSBtZXRlcnMgaW4gaGVpZ2h0KSA8c3BhbiBjbGFzcz0iY29weS1pbmRpY2F0b3IiPjEgQ29weTwvc3Bhbj48L2xpPgogICAgICAgIDwvdWw+CiAgICAgIDwvbGk+CgogICAgICA8bGk+CiAgICAgICAgPGRpdiBjbGFzcz0ibWV0YS1jaGVja2JveCBmbGV4LWNlbnRlciI+CiAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgdHlwZT0iY2hlY2tib3giCiAgICAgICAgICAgIGlkPSJzcGVjc18yIgogICAgICAgICAgICB2LW1vZGVsPSJkZXNpZ25fc3BlY3Muc3BlY3NfMiIKICAgICAgICAgIC8+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJjdXN0b20tY2hlY2tib3ggZmxleC1jZW50ZXIiPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iY2hlY2siCiAgICAgICAgICAgICAgPjxmb250LWF3ZXNvbWUtaWNvbiBpY29uPSJjaGVjayIgY2xhc3M9Im1yNSBjaGVjay1pY29uIgogICAgICAgICAgICAvPjwvc3Bhbj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGxhYmVsIGZvcj0ic3BlY3NfMiIKICAgICAgICAgICAgPjIuIFBSQyBJRCdzIGFuZCBQVFIgb2YgRW5naW5lZXIncyBhbmQgQXJjaGl0ZWN0IDxzcGFuIGNsYXNzPSJjb3B5LWluZGljYXRvciI+MSBQaG90b2NvcHk8L3NwYW4+PC9sYWJlbAogICAgICAgICAgPgogICAgICAgIDwvZGl2PgogICAgICA8L2xpPgoKICAgICAgPGxpPgogICAgICAgIDxkaXYgY2xhc3M9Im1ldGEtY2hlY2tib3ggZmxleC1jZW50ZXIiPgogICAgICAgICAgPGlucHV0CiAgICAgICAgICAgIHR5cGU9ImNoZWNrYm94IgogICAgICAgICAgICBpZD0ic3BlY3NfMyIKICAgICAgICAgICAgdi1tb2RlbD0iZGVzaWduX3NwZWNzLnNwZWNzXzMiCiAgICAgICAgICAvPgogICAgICAgICAgPGRpdiBjbGFzcz0iY3VzdG9tLWNoZWNrYm94IGZsZXgtY2VudGVyIj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNoZWNrIgogICAgICAgICAgICAgID48Zm9udC1hd2Vzb21lLWljb24gaWNvbj0iY2hlY2siIGNsYXNzPSJtcjUgY2hlY2staWNvbiIKICAgICAgICAgICAgLz48L3NwYW4+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxsYWJlbCBmb3I9InNwZWNzXzMiCiAgICAgICAgICAgID4zLiBQQ0FCIExpY2Vuc2Ugb2YgRWxlY3RyaWNhbCBDb250cmFjdG9yIGZvciBFbGVjdHJpY2FsCiAgICAgICAgICAgIFdvcmtzICA8c3BhbiBjbGFzcz0iY29weS1pbmRpY2F0b3IiPjEgQ29sb3JlZCBDb3B5PC9zcGFuPjwvbGFiZWwKICAgICAgICAgID4KICAgICAgICA8L2Rpdj4KICAgICAgPC9saT4KCiAgICAgIDxsaT4KICAgICAgICA8ZGl2IGNsYXNzPSJtZXRhLWNoZWNrYm94IGZsZXgtY2VudGVyIj4KICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICB0eXBlPSJjaGVja2JveCIKICAgICAgICAgICAgaWQ9InNwZWNzXzQiCiAgICAgICAgICAgIHYtbW9kZWw9ImRlc2lnbl9zcGVjcy5zcGVjc180IgogICAgICAgICAgLz4KICAgICAgICAgIDxkaXYgY2xhc3M9ImN1c3RvbS1jaGVja2JveCBmbGV4LWNlbnRlciI+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjaGVjayIKICAgICAgICAgICAgICA+PGZvbnQtYXdlc29tZS1pY29uIGljb249ImNoZWNrIiBjbGFzcz0ibXI1IGNoZWNrLWljb24iCiAgICAgICAgICAgIC8+PC9zcGFuPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8bGFiZWwgZm9yPSJzcGVjc180IgogICAgICAgICAgICA+NC4gQ29uc3RydWN0aW9uIFNhZmV0eSBhbmQgSGVhbHRoIFByb2dyYW0gKERPTEUpIDxzcGFuIGNsYXNzPSJjb3B5LWluZGljYXRvciI+MSBPcmlnaW5hbCBDb3B5PC9zcGFuPjwvbGFiZWwKICAgICAgICAgID4KICAgICAgICA8L2Rpdj4KICAgICAgPC9saT4KICAgIDwvdWw+CiAgICA8YmFzZS1maWxlLXVwbG9hZGVyCiAgICAgIGZpbGVMYWJlbD0iZGVzaWduX3NwZWNzIgogICAgICA6cHJvcGVydGllcz0iZ2V0UHJvcGVydHkoJ2Rlc2lnbl9zcGVjcycpIgogICAgICB0eXBlPSJwcm9wZXJ0eSIKICAgICAgOmhhc0Vycm9yPSJ1cGxvYWRFcnJvcnMuZGVzaWduX3NwZWNzIgogICAgLz4KICA8L2Rpdj4KCiAgPCEtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSBELiBTVVBQTEVNRU5UQVJZIERPQ1VNRU5UUyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tPgogIDxkaXYgY2xhc3M9Im1ldGEtZm9ybS1ncm91cCBtYjYwIj4KICAgIDxkaXYgY2xhc3M9Im1ldGEtZ3JvdXAtdGl0bGUiPkQuIFN1cHBsZW1lbnRhcnkgRG9jdW1lbnRzPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJtZXRhLWNoZWNrLWdyb3VwIj4KICAgICAgPGRpdiBAY2xpY2s9ImNoZWNrUmVxdWlyZW1lbnRzKHN1cHBsZW1lbnRhcnlfZG9jdW1lbnRzLCB0cnVlKSI+CiAgICAgICAgPGZvbnQtYXdlc29tZS1pY29uIGljb249ImNoZWNrIiBjbGFzcz0ibXI1IGNoZWNrLWljb24iIC8+Q2hlY2sgQWxsCiAgICAgIDwvZGl2PgogICAgICA8ZGl2IEBjbGljaz0iY2hlY2tSZXF1aXJlbWVudHMoc3VwcGxlbWVudGFyeV9kb2N1bWVudHMsIGZhbHNlKSI+CiAgICAgICAgPGZvbnQtYXdlc29tZS1pY29uIGljb249InRpbWVzIiBjbGFzcz0ibXI1IHgtaWNvbiIgLz4gVW5jaGVjayBBbGwKICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDx1bCBjbGFzcz0icGFyZW50LWxpc3QiPgogICAgICA8IS0tIEMuIFNVUFBMRU1FTlRBUlkgRE9DUyAxIC0tPgogICAgICA8bGk+CiAgICAgICAgPGRpdiBjbGFzcz0ibWV0YS1jaGVja2JveCBmbGV4LWNlbnRlciI+CiAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgdHlwZT0iY2hlY2tib3giCiAgICAgICAgICAgIGlkPSJzdXBwX2RvY3NfMSIKICAgICAgICAgICAgdi1tb2RlbD0ic3VwcGxlbWVudGFyeV9kb2N1bWVudHMuc3VwcF9kb2NzXzEiCiAgICAgICAgICAvPgogICAgICAgICAgPGRpdiBjbGFzcz0iY3VzdG9tLWNoZWNrYm94IGZsZXgtY2VudGVyIj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNoZWNrIgogICAgICAgICAgICAgID48Zm9udC1hd2Vzb21lLWljb24gaWNvbj0iY2hlY2siIGNsYXNzPSJtcjUgY2hlY2staWNvbiIKICAgICAgICAgICAgLz48L3NwYW4+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxsYWJlbCBmb3I9InN1cHBfZG9jc18xIj4xLiBTa2V0Y2ggPHNwYW4gY2xhc3M9ImNvcHktaW5kaWNhdG9yIj4xIENvcHk8L3NwYW4+PC9sYWJlbD4KICAgICAgICA8L2Rpdj4KICAgICAgICA8dWwgY2xhc3M9InN1Yi1saXN0Ij4KICAgICAgICAgIDxsaT4KICAgICAgICAgICAgV2l0aCBjbGVhciBsYW5kbWFya3MgbGVhZGluZyB0byB0aGUgbG90IHdpdGggbmFtZSBhbmQgbnVtYmVyIG9mCiAgICAgICAgICAgIGNvbnRhY3QgcGVyc29uCiAgICAgICAgICA8L2xpPgogICAgICAgIDwvdWw+CiAgICAgIDwvbGk+CgogICAgICA8IS0tIEMuIFNVUFBMRU1FTlRBUlkgRE9DUyAyIC0tPgogICAgICA8bGk+CiAgICAgICAgPGRpdiBjbGFzcz0ibWV0YS1jaGVja2JveCBmbGV4LWNlbnRlciI+CiAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgdHlwZT0iY2hlY2tib3giCiAgICAgICAgICAgIGlkPSJzdXBwX2RvY3NfMiIKICAgICAgICAgICAgdi1tb2RlbD0ic3VwcGxlbWVudGFyeV9kb2N1bWVudHMuc3VwcF9kb2NzXzIiCiAgICAgICAgICAvPgogICAgICAgICAgPGRpdiBjbGFzcz0iY3VzdG9tLWNoZWNrYm94IGZsZXgtY2VudGVyIj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNoZWNrIgogICAgICAgICAgICAgID48Zm9udC1hd2Vzb21lLWljb24gaWNvbj0iY2hlY2siIGNsYXNzPSJtcjUgY2hlY2staWNvbiIKICAgICAgICAgICAgLz48L3NwYW4+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxsYWJlbCBmb3I9InN1cHBfZG9jc18yIgogICAgICAgICAgICA+Mi4gUGljdHVyZSBvZiBzaXRlL2xvY2F0aW9uICA8c3BhbiBjbGFzcz0iY29weS1pbmRpY2F0b3IiPjEgQ29sb3JlZCBDb3B5PC9zcGFuPjwvbGFiZWwKICAgICAgICAgID4KICAgICAgICA8L2Rpdj4KICAgICAgPC9saT4KICAgIDwvdWw+CgogICAgPGJhc2UtZmlsZS11cGxvYWRlcgogICAgICBmaWxlTGFiZWw9InNrZXRjaF9waW4iCiAgICAgIDpwcm9wZXJ0aWVzPSJnZXRQcm9wZXJ0eSgnc2tldGNoX3BpbicpIgogICAgICB0eXBlPSJwcm9wZXJ0eSIKICAgICAgOmhhc0Vycm9yPSJ1cGxvYWRFcnJvcnMuc2tldGNoX3BpbiIKICAgIC8+CiAgPC9kaXY+CiAgPGRpdiBjbGFzcz0ibWV0YS1mb3JtLWdyb3VwIGJ1dHRvbi1sZWZ0LXJpZ2h0Ij4KICAgIDxidXR0b24tYmxvY2sKICAgICAgdHlwZT0iYmFjayIKICAgICAgY2xhc3M9ImJhY2stYnV0dG9uIgogICAgICBAY2xpY2submF0aXZlPSJwcmV2aW91c1N0ZXAoKSIKICAgICAgPkJBQ0s8L2J1dHRvbi1ibG9jawogICAgPgogICAgPGJ1dHRvbi1ibG9jayBjbGFzcz0ibmV4dC1idXR0b24iIEBjbGljay5uYXRpdmU9Im5leHRTdGVwKCkiCiAgICAgID5ORVhUPC9idXR0b24tYmxvY2sKICAgID4KICA8L2Rpdj4KPC9kaXY+Cg=="},null]}