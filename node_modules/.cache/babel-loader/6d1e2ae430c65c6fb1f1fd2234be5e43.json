{"remainingRequest":"/var/www/html/boss-web/node_modules/babel-loader/lib/index.js!/var/www/html/boss-web/src/store/modules/appointment.js","dependencies":[{"path":"/var/www/html/boss-web/src/store/modules/appointment.js","mtime":1607965003972},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/var/www/html/boss-web/src/store/modules/appointment.js"],"names":["axios","moment","baseUrl","process","env","VUE_APP_API_URL","getDefaultAppointmentState","appointmentStatus","currentDate","isAppointmentSuccess","appointments","appointmentError","appointmentLimits","adminAppointments","appointmentCount","appointmentSearch","batchTab","format","state","getters","appointmentAction","currentAppointment","mutations","setAppointmentStatus","setCurrentDate","setIsAppointmentSuccess","setAppointments","setAppointmentError","setAppointmentLimits","setAdminAppointments","setAppointmentCount","setAppointmentSearch","setBatchTab","Object","assign","actions","addAppointment","payload","commit","dispatch","post","headers","Authorization","authToken","response","data","console","log","updateAppointment","put","addAppointmentLimit","detail","getUserAppointments","page","get","results","total_pages","getAppointmentLimits","getUserAppointmentLimits","getAdminAppointments","params","date","count"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport moment from \"moment-timezone\";\nconst baseUrl = process.env.VUE_APP_API_URL;\nconst getDefaultAppointmentState =  () => {\n    return {\n        appointmentStatus: \"slot\",\n        currentDate: \"\",\n        isAppointmentSuccess: false,\n        appointments: [],\n        appointmentError: \"\",\n        appointmentLimits: [],\n        adminAppointments: [],\n        appointmentCount: 0,\n        appointmentSearch: \"\",\n        batchTab: \"batch_1\",\n        currentDate: moment().format(),\n        appointmentAction: \"add\",\n        currentAppointment: {}\n    }\n}\n\nconst state = getDefaultAppointmentState();\n\nconst getters = {\n    appointmentStatus: (state) => state.appointmentStatus,\n    currentDate: (state) => state.currentDate,\n    isAppointmentSuccess: (state) => state.isAppointmentSuccess,\n    appointments: (state) => state.appointments,\n    appointmentError: (state) => state.appointmentError,\n    appointmentLimits: (state) => state.appointmentLimits,\n    adminAppointments: (state) => state.adminAppointments,\n    appointmentCount: (state) => state.appointmentCount,\n    appointmentSearch: (state) => state.appointmentSearch,\n    batchTab: (state) => state.batchTab,\n    currentDate: (state) => state.currentDate,\n    appointmentAction: (state) => state.appointmentAction,\n    currentAppointment: (state) => state.currentAppointment\n}\n\nconst mutations = {\n  setAppointmentStatus: (state, appointmentStatus) => ( state.appointmentStatus = appointmentStatus ),\n  setCurrentDate: (state, currentDate) => (state.currentDate = currentDate),\n  setIsAppointmentSuccess: (state, isAppointmentSuccess) => (state.isAppointmentSuccess = isAppointmentSuccess),\n  setAppointments: (state, appointments) => (state.appointments = appointments ),\n  setAppointmentError: (state, appointmentError) => (state.appointmentError = appointmentError),\n  setAppointmentLimits: (state, appointmentLimits) => (state.appointmentLimits = appointmentLimits),\n  setAdminAppointments: (state, adminAppointments) => (state.adminAppointments = adminAppointments),\n  setAppointmentCount: (state, appointmentCount) => (state.appointmentCount = appointmentCount),\n  setAppointmentSearch: (state, appointmentSearch) => (state.appointmentSearch = appointmentSearch),\n  setBatchTab: (state, batchTab) => (state.batchTab = batchTab),\n  setCurrentDate: (state, currentDate) => (state.currentDate = currentDate),\n  resetAppointmentState: (state) =>\n    Object.assign(state, getDefaultAppointmentState()),\n  setAppointmentAction: (state, appointmentAction) => (state.appointmentAction = appointmentAction),\n  setCurrentAppointment: (state, currentAppointment) => (state.currentAppointment = currentAppointment)\n}\n\nconst actions = {\n    async addAppointment({ commit, getters, dispatch }, payload){\n        try {\n            const response = await axios.post(`${baseUrl}/api/appointment/`, payload,{\n                headers: { Authorization: `jwt ${getters.authToken}` },\n            });\n            await commit('setCurrentAppointment', response.data)\n            await commit('setIsAppointmentSuccess', true)\n            await dispatch('getUserAppointments')\n        } catch (err) {\n            console.log(err)\n            commit('setIsAppointmentSuccess', false)\n            commit('setAppointmentError',err.response.data)\n        }\n    },\n    async updateAppointment({ commit, getters, dispatch }, payload){\n        try {\n            const response = await axios.put(`${baseUrl}/api/appointment/`, payload,{\n                headers: { Authorization: `jwt ${getters.authToken}` },\n            });\n            await commit('setIsAppointmentSuccess', true)\n            await dispatch('getUserAppointments')\n        } catch (err) {\n            console.log(err)\n            commit('setIsAppointmentSuccess', false)\n            commit('setAppointmentError',err.response.data)\n        }\n    },\n    async addAppointmentLimit({ commit, getters, dispatch }, payload){\n        try {\n            const response = await axios.post(`${baseUrl}/staff/appointment-limit/`, payload,{\n                headers: { Authorization: `jwt ${getters.authToken}` },\n            });\n            await commit('setIsAppointmentSuccess', true)\n        } catch (err) {\n            console.log(err)\n            commit('setIsAppointmentSuccess', false)\n            commit('setAppointmentError',err.response.data.detail)\n        }\n    },\n    async getUserAppointments({ commit, getters  }, page = 1){\n        try {\n            const response = await axios.get(`${baseUrl}/api/user-appointment-list/?page=${page}`,{\n                headers: { Authorization: `jwt ${getters.authToken}` },\n            });\n            console.log(response.data)\n            commit('setAppointments', response.data.results)\n            commit('setPageCount', response.data.total_pages)\n        } catch (err) {\n            console.log(err);\n            commit('setIsAppointmentSuccess', false)\n        }\n    },\n    async appointmentLimits({commit, getters}, page = 1){\n        try {\n            const response = await axios.get(`${baseUrl}/staff/appointment-limit-list/?page=${page}`, {\n                headers: { Authorization: `jwt ${getters.authToken}` },\n            })\n            commit(\"setPageCount\", response.data.total_pages);\n            commit('setAppointmentLimits', response.data.results)\n        } catch (err) {\n            console.log(err)\n        }\n    },\n    async getAppointmentLimits({commit, getters}, payload){\n        try {\n            commit('setAppointmentLimits', [])\n            const response = await axios.get(`${baseUrl}/staff/appointment-limit/?month=${payload}`,{\n                headers: { Authorization: `jwt ${getters.authToken}` },\n            })\n            commit('setAppointmentLimits', response.data)\n        } catch (err) {\n            console.log(err)\n        }\n    },\n    async getUserAppointmentLimits({commit, getters}, payload){\n        try {\n            commit('setAppointmentLimits', [])\n            const response = await axios.get(`${baseUrl}/api/appointment-limit/?month=${payload}`,{\n                headers: { Authorization: `jwt ${getters.authToken}` },\n            })\n            commit('setAppointmentLimits', response.data)\n        } catch (err) {\n            console.log(err)\n        }\n    },\n    async getAdminAppointments({ commit, dispatch, getters }, page = 1) {\n        try {\n            const response = await axios.get(`${baseUrl}/staff/appointment-list/?search=${getters.appointmentSearch}&batch=${getters.batchTab}&page=${page}`,{ headers: { Authorization: `jwt ${getters.authToken}` }, params: {date: getters.currentDate} })\n            commit('setAppointmentCount', response.data.count)\n            commit('setAdminAppointments', response.data.results)\n            commit(\"setPageCount\", response.data.total_pages);\n        } catch (err) {\n            console.log(err)\n        }\n    }\n}\n\nexport default {\n    state,\n    getters,\n    actions,\n    mutations,\n  };\n  "]}]}