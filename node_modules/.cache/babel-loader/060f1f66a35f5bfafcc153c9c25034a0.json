{"remainingRequest":"/var/www/html/boss-web/node_modules/babel-loader/lib/index.js!/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/var/www/html/boss-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/boss-web/src/components/forms/BaseFileUploader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/boss-web/src/components/forms/BaseFileUploader.vue","mtime":1634053588276},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BaseFileUploader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,IAAA,cAAA,GAAA,CAAA;AAAA,IACA,aAAA,GAAA,CADA;AAAA,IAEA,cAAA,GAAA,CAFA;AAAA,IAGA,aAAA,GAAA,CAHA;AAIA,SAAA,UAAA,QAAA,MAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,kBADA;AAEA,EAAA,KAAA,EAAA;AACA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KADA;AAKA,IAAA,QAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA,KAFA;AAGA,MAAA,QAAA,EAAA;AAHA,KALA;AAUA,IAAA,KAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAVA;AAcA,IAAA,WAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAdA;AAkBA,IAAA,UAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAFA,sBAEA;AACA,eAAA,EAAA;AACA;AAJA,KAlBA;AAwBA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAxBA;AA4BA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA,KA5BA;AAgCA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KAhCA;AAoCA,IAAA,gBAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,OAAA,EAAA;AAFA,KApCA;AAwCA,IAAA,IAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,OAAA,EAAA;AAFA;AAxCA,GAFA;AA+CA,EAAA,IA/CA,kBA+CA;AACA,WAAA;AACA,MAAA,aAAA,EAAA,IADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,UAAA,EAAA,IAHA;AAIA,MAAA,eAAA,EAAA,CAAA,WAAA,EAAA,YAAA,EAAA,WAAA;AAJA,KAAA;AAMA,GAtDA;AAuDA,EAAA,OAvDA,qBAuDA;AACA,SAAA,MAAA,CAAA,MAAA,CAAA,YAAA,EAAA,KAAA;AACA,SAAA,MAAA,CAAA,MAAA,CAAA,mBAAA,EAAA,KAAA;AACA,SAAA,MAAA,CAAA,MAAA,CAAA,gBAAA,EAAA,KAAA;AACA,SAAA,MAAA,CAAA,MAAA,CAAA,0BAAA,EAAA,IAAA,QAAA,EAAA;AACA,SAAA,MAAA,CAAA,MAAA,CAAA,uBAAA,EAAA,KAAA;AACA,GA7DA;AA8DA,EAAA,QAAA,kCACA,UAAA,CAAA,CACA,yBADA,EAEA,aAFA,EAGA,iCAHA,EAIA,uBAJA,EAKA,iBALA,EAMA,oBANA,EAOA,gBAPA,EAQA,gBARA,EASA,qBATA,CAAA,CADA;AAYA,IAAA,SAZA,uBAYA;AACA,aAAA,KAAA,aAAA,KAAA,cAAA;AACA,KAdA;AAeA,IAAA,QAfA,sBAeA;AACA,aAAA,KAAA,aAAA,KAAA,aAAA;AACA,KAjBA;AAkBA,IAAA,SAlBA,uBAkBA;AACA,aAAA,KAAA,aAAA,KAAA,cAAA;AACA,KApBA;AAqBA,IAAA,QArBA,sBAqBA;AACA,aAAA,KAAA,aAAA,KAAA,aAAA;AACA;AAvBA,IA9DA;AAuFA,EAAA,KAAA,EAAA;AACA,IAAA,cAAA,EAAA;AACA,MAAA,OADA,mBACA,MADA,EACA;AACA,YAAA,MAAA,EAAA;AACA,eAAA,UAAA;AACA,eAAA,MAAA,CAAA,MAAA,CAAA,mBAAA,EAAA,KAAA;AACA;AACA;AANA;AADA,GAvFA;AAiGA,EAAA,OAAA,EAAA;AACA,IAAA,IADA,gBACA,QADA,EACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,gBAAA,EAAA,IAAA;;AADA,oBAEA,KAAA,CAAA,YAFA;AAAA;AAAA;AAAA;;AAAA,sBAGA,KAAA,CAAA,IAAA,KAAA,UAHA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAIA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,oBAAA,EAAA,QAAA,CAJA;;AAAA;AAAA;AAAA;;AAAA;AAAA,sBAKA,KAAA,CAAA,IAAA,KAAA,UALA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAMA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,4BAAA,EAAA,QAAA,CANA;;AAAA;AAAA;AAAA;;AAAA;AAAA,sBAOA,KAAA,CAAA,IAAA,KAAA,iBAPA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAQA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,sBAAA,EAAA,QAAA,CARA;;AAAA;AAUA,oBAAA,KAAA,CAAA,kBAAA,EAAA;AACA,kBAAA,KAAA,CAAA,QAAA,GAAA,qCAAA;AACA;;AAZA;AAAA;;AAAA;AAcA,gBAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,0BAAA,EAAA,QAAA;;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBA,KAjBA;AAkBA,IAAA,iBAlBA,+BAkBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,OAAA,CAAA,GAAA,CAAA,yCAAA;AACA,gBAAA,MAAA,CAAA,UAAA,GAAA,IAAA,SAAA,CACA,8CADA,CAAA;;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA,KAvBA;AAwBA,IAAA,eAxBA,6BAwBA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MAAA,CAAA,UAAA,CAAA,KAAA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,KA1BA;AA2BA,IAAA,QA3BA,oBA2BA,IA3BA,EA2BA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,gBAAA,MAAA,CAAA,UAAA,CAAA,IAAA,CAAA,IAAA;;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA,KA7BA;AA8BA,IAAA,KA9BA,iBA8BA,QA9BA,EA8BA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,oBAAA;AACA,kBAAA,MAAA,CAAA,iBAAA;;AACA,kBAAA,MAAA,CAAA,UAAA,CAAA,SAAA,GAAA,UAAA,KAAA,EAAA;AACA,oBAAA,MAAA,CAAA,QAAA,CAAA,QAAA;;AACA,oBAAA,MAAA,CAAA,eAAA;AACA,mBAHA;;AAKA,kBAAA,MAAA,CAAA,UAAA,CAAA,MAAA,GAAA,UAAA,KAAA,EAAA;AACA,oBAAA,OAAA,CAAA,GAAA,CAAA,uDAAA;AACA,mBAFA;;AAIA,kBAAA,MAAA,CAAA,UAAA,CAAA,OAAA,GAAA,UAAA,KAAA,EAAA;AACA,oBAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,oBAAA,OAAA,CAAA,GAAA,CAAA,qBAAA;AACA,mBAHA;AAIA,iBAfA,CAeA,OAAA,GAAA,EAAA;AACA,kBAAA,OAAA,CAAA,GAAA,CAAA,GAAA;AACA;;AAlBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBA,KAjDA;AAkDA,IAAA,WAlDA,uBAkDA,SAlDA,EAkDA,QAlDA,EAkDA;AAAA;;AACA;AACA,UAAA,QAAA,GAAA,IAAA,QAAA,EAAA;AACA,UAAA,CAAA,QAAA,CAAA,MAAA,EAAA;AACA,UAAA,OAAA,GAAA,EAAA,CAJA,CAKA;;AAEA,UAAA,CAAA,KAAA,YAAA,EAAA;AACA,YAAA,IAAA,GAAA,KAAA,KAAA,WAAA,KAAA,SAAA,EAAA;AACA,QAAA,KAAA,CAAA,IAAA,CAAA,KAAA,CAAA,QAAA,CAAA,MAAA,CAAA,CAAA,IAAA,EAAA,EAAA,GAAA,CAAA,UAAA,CAAA,EAAA;AACA,cACA,MAAA,CAAA,UAAA,KAAA,iBAAA,IACA,QAAA,CAAA,CAAA,CAAA,CAAA,MAAA,MAAA,iBADA,IAEA,MAAA,CAAA,UAAA,KAAA,0BAAA,KACA,MAAA,CAAA,eAAA,CAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,KACA,QAAA,CAAA,CAAA,CAAA,CAAA,MAAA,MAAA,iBAFA,CAHA,EAMA;AACA,gBAAA,QAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,QAAA,EAAA;AACA,cAAA,MAAA,CAAA,QAAA,GAAA,QAAA,CAAA,CAAA,CAAA,CAAA,IAAA;;AAEA,kBAAA,CAAA,MAAA,CAAA,gBAAA,EAAA;AACA,gBAAA,QAAA,CAAA,MAAA,CAAA,SAAA,EAAA,QAAA,CAAA,CAAA,CAAA;;AAEA,oBAAA,MAAA,CAAA,IAAA,KAAA,iBAAA,EAAA;AACA,sBAAA,cAAA,GACA,MAAA,CAAA,IAAA,KAAA,UAAA,GACA,MAAA,CAAA,uBAAA,CAAA,EADA,GAEA,MAAA,CAAA,+BAAA,CAAA,EAHA;AAIA,kBAAA,QAAA,CAAA,MAAA,CAAA,gBAAA,EAAA,cAAA;AACA,kBAAA,QAAA,CAAA,MAAA,CAAA,oBAAA,EAAA,MAAA,CAAA,SAAA;AACA,iBAPA,MAOA;AACA,kBAAA,QAAA,CAAA,MAAA,CACA,gBADA,EAEA,MAAA,CAAA,mBAAA,CAAA,EAFA;AAIA;;AACA,gBAAA,QAAA,CAAA,MAAA,CAAA,UAAA,EAAA,QAAA,CAAA,CAAA,CAAA,CAAA,IAAA,EAhBA,CAiBA;AACA;AACA;AACA;;AACA,gBAAA,MAAA,CAAA,IAAA,CAAA,QAAA;AACA,eAtBA,MAsBA;AACA,oBAAA,eAAA,GAAA,MAAA,CAAA,cAAA;AACA,gBAAA,eAAA,CAAA,MAAA,CAAA,UAAA,EAAA,QAAA,CAAA,CAAA,CAAA,CAAA,IAAA;AACA,gBAAA,eAAA,CAAA,MAAA,CAAA,SAAA,EAAA,QAAA,CAAA,CAAA,CAAA;;AACA,gBAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,mBAAA,EAAA,eAAA;;AACA,gBAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,mBAAA,EAAA,IAAA;AACA;AACA,aAhCA,MAgCA;AACA,cAAA,MAAA,CAAA,UAAA;;AACA,cAAA,MAAA,CAAA,KAAA,CAAA;AACA,gBAAA,KAAA,EAAA,oBADA;AAEA,gBAAA,IAAA,EAAA,iCAFA;AAGA,gBAAA,IAAA,EAAA;AAHA,eAAA;AAKA;AACA,WA/CA,MA+CA;AACA,YAAA,MAAA,CAAA,KAAA,CAAA;AACA,cAAA,KAAA,EAAA,oBADA;AAEA,cAAA,IAAA,EAAA,mCAFA;AAGA,cAAA,IAAA,EAAA;AAHA,aAAA;AAKA;AACA,SAvDA;AAwDA,OA1DA,MA0DA;AACA,QAAA,KAAA,CAAA,IAAA,CAAA,KAAA,CAAA,QAAA,CAAA,MAAA,CAAA,CAAA,IAAA,EAAA,EAAA,GAAA,CAAA,UAAA,CAAA,EAAA;AACA,cACA,MAAA,CAAA,UAAA,KAAA,iBAAA,IACA,QAAA,CAAA,CAAA,CAAA,CAAA,MAAA,MAAA,iBADA,IAEA,MAAA,CAAA,UAAA,KAAA,0BAAA,KACA,MAAA,CAAA,eAAA,CAAA,QAAA,CAAA,QAAA,CAAA,CAAA,CAAA,CAAA,MAAA,CAAA,KACA,QAAA,CAAA,CAAA,CAAA,CAAA,MAAA,MAAA,iBAFA,CAHA,EAMA;AACA,gBAAA,QAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,QAAA,EAAA;AACA,cAAA,MAAA,CAAA,QAAA,GAAA,QAAA,CAAA,CAAA,CAAA,CAAA,IAAA;AACA,cAAA,QAAA,CAAA,MAAA,CAAA,SAAA,EAAA,QAAA,CAAA,CAAA,CAAA;AACA,kBAAA,cAAA,GACA,MAAA,CAAA,IAAA,KAAA,UAAA,GACA,MAAA,CAAA,uBAAA,CAAA,EADA,GAEA,MAAA,CAAA,+BAAA,CAAA,EAHA;AAIA,cAAA,QAAA,CAAA,MAAA,CAAA,UAAA,EAAA,QAAA,CAAA,CAAA,CAAA,CAAA,IAAA;;AACA,cAAA,MAAA,CAAA,IAAA,CAAA,QAAA;AACA,aATA,MASA;AACA,cAAA,MAAA,CAAA,UAAA;;AACA,cAAA,MAAA,CAAA,KAAA,CAAA;AACA,gBAAA,KAAA,EAAA,oBADA;AAEA,gBAAA,IAAA,EAAA,iCAFA;AAGA,gBAAA,IAAA,EAAA;AAHA,eAAA;AAKA;AACA,WAxBA,MAwBA;AACA,YAAA,MAAA,CAAA,KAAA,CAAA;AACA,cAAA,KAAA,EAAA,oBADA;AAEA,cAAA,IAAA,EAAA,mCAFA;AAGA,cAAA,IAAA,EAAA;AAHA,aAAA;AAKA;AACA,SAhCA;AAiCA,OAnGA,CAoGA;;AACA,KAvJA;AAwJA,IAAA,UAxJA,wBAwJA;AACA,WAAA,KAAA,WAAA,KAAA,SAAA,GAAA,KAAA,GAAA,IAAA;AACA,WAAA,QAAA,GAAA,qCAAA;AACA;AA3JA;AAjGA,CAAA","sourcesContent":["<template>\n  <div class=\"meta-upload-box flex-wrap\">\n    <div class=\"meta-label\">{{ label }}</div>\n    <div class=\"meta-desc\" v-html=\"description\">{{ description }}</div>\n    <div class=\"meta-custom-upload\" :class=\"{ 'has-error': hasError }\">\n      <form enctype=\"multipart/form-data\" novalidate>\n        <input\n          :ref=\"fileLabel\"\n          type=\"file\"\n          :name=\"name\"\n          :accept=\"uploadType\"\n          @input=\"filesChange($event.target.name, $event.target.files)\"\n          :disabled=\"isUploading\"\n        />\n        <!-- <div class=\"meta-text big\">DRAG/CLICK TO UPLOAD YOUR FILE HERE</div> -->\n        <div class=\"meta-text small\">\n          {{\n            filename\n              ? filename\n              : properties.filename\n              ? properties.filename\n              : \"DRAG/CLICK TO UPLOAD YOUR FILE HERE\"\n          }}\n        </div>\n      </form>\n\n      <div class=\"upload-limit\">Note: File size should not exceed 20mb.</div>\n    </div>\n  </div>\n</template>\n\n<script>\nconst STATUS_INITIAL = 0,\n  STATUS_SAVING = 1,\n  STATUS_SUCCESS = 2,\n  STATUS_FAILED = 3;\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"BaseFileUploader\",\n  props: {\n    uploadType: {\n      type: String,\n      default: \"image/*, application/pdf\",\n    },\n    hasError: {\n      type: Boolean,\n      default: false,\n      required: false,\n    },\n    label: {\n      type: String,\n      default: \"\",\n    },\n    description: {\n      type: String,\n      default: \"\",\n    },\n    properties: {\n      type: Object,\n      default() {\n        return {};\n      },\n    },\n    type: {\n      type: String,\n      default: \"\",\n    },\n    fileLabel: {\n      type: String,\n      default: \"\",\n    },\n    isEvaluation: {\n      type: Boolean,\n      default: false,\n    },\n    isPaymentDetails: {\n      type: Boolean,\n      default: false,\n    },\n    name: {\n      type: String,\n      default: \"file\",\n    },\n  },\n  data() {\n    return {\n      currentStatus: null,\n      filename: \"\",\n      connection: null,\n      validImageTypes: [\"image/gif\", \"image/jpeg\", \"image/png\"],\n    };\n  },\n  mounted() {\n    this.$store.commit(\"setLoading\", false);\n    this.$store.commit(\"setClearFileInput\", false);\n    this.$store.commit(\"setIsFileReady\", false);\n    this.$store.commit(\"setCurrentEvaluationFile\", new FormData());\n    this.$store.commit(\"setIsFileUploadFailed\", false);\n  },\n  computed: {\n    ...mapGetters([\n      \"applicationRequirements\",\n      \"isUploading\",\n      \"buildingApplicationRequirements\",\n      \"currentEvaluationFile\",\n      \"isUploadSuccess\",\n      \"isFileUploadFailed\",\n      \"paymentDetails\",\n      \"clearFileInput\",\n      \"businessApplication\",\n    ]),\n    isInitial() {\n      return this.currentStatus === STATUS_INITIAL;\n    },\n    isSaving() {\n      return this.currentStatus === STATUS_SAVING;\n    },\n    isSuccess() {\n      return this.currentStatus === STATUS_SUCCESS;\n    },\n    isFailed() {\n      return this.currentStatus === STATUS_FAILED;\n    },\n  },\n  watch: {\n    clearFileInput: {\n      handler(newVal) {\n        if (newVal) {\n          this.clearInput();\n          this.$store.commit(\"setClearFileInput\", false);\n        }\n      },\n    },\n  },\n  methods: {\n    async save(formData) {\n      this.$store.commit(\"setIsFileReady\", true);\n      if (!this.isEvaluation) {\n        if (this.type === \"business\") {\n          await this.$store.dispatch(\"uploadRequirements\", formData);\n        } else if (this.type === \"property\") {\n          await this.$store.dispatch(\"uploadBuildingRequirements\", formData);\n        } else if (this.type === \"business_permit\") {\n          await this.$store.dispatch(\"uploadBusinessPermit\", formData);\n        }\n        if (this.isFileUploadFailed) {\n          this.filename = \"DRAG/CLICK TO UPLOAD YOUR FILE HERE\";\n        }\n      } else {\n        this.$store.commit(\"setCurrentEvaluationFile\", formData);\n      }\n    },\n    async initiateWebSocket() {\n      console.log(\"Starting connection to WebSocket Server\");\n      this.connection = new WebSocket(\n        \"ws://localhost:8000/ws/building-file-upload/\"\n      );\n    },\n    async closeConnection() {\n      this.connection.close();\n    },\n    async sendData(data) {\n      this.connection.send(data);\n    },\n    async save2(formData) {\n      try {\n        this.initiateWebSocket();\n        this.connection.onmessage = (event) => {\n          this.sendData(formData);\n          this.closeConnection();\n        };\n\n        this.connection.onopen = function (event) {\n          console.log(\"Successfully connected to the api websocket server...\");\n        };\n\n        this.connection.onclose = (event) => {\n          console.log(event);\n          console.log(\"successfull closed.\");\n        };\n      } catch (err) {\n        console.log(err);\n      }\n    },\n    filesChange(fieldName, fileList) {\n      // handle file changes\n      var formData = new FormData();\n      if (!fileList.length) return;\n      let payload = {};\n      // append the files to FormData\n\n      if (!this.isEvaluation) {\n        let file = this.$refs[`${this.fileLabel}`];\n        Array.from(Array(fileList.length).keys()).map((x) => {\n          if (\n            (this.uploadType === \"application/pdf\" &&\n              fileList[x][\"type\"] === \"application/pdf\") ||\n            (this.uploadType === \"image/*, application/pdf\" &&\n              (this.validImageTypes.includes(fileList[x][\"type\"]) ||\n                fileList[x][\"type\"] === \"application/pdf\"))\n          ) {\n            if (fileList[x].size <= 26214400) {\n              this.filename = fileList[x].name;\n\n              if (!this.isPaymentDetails) {\n                formData.append(fieldName, fileList[x]);\n\n                if (this.type !== \"business_permit\") {\n                  let requirement_id =\n                    this.type === \"business\"\n                      ? this.applicationRequirements.id\n                      : this.buildingApplicationRequirements.id;\n                  formData.append(\"requirement_id\", requirement_id);\n                  formData.append(\"requirements_label\", this.fileLabel);\n                } else {\n                  formData.append(\n                    \"application_id\",\n                    this.businessApplication.id\n                  );\n                }\n                formData.append(\"filename\", fileList[x].name);\n                // payload.requirement_id = requirement_id;\n                // payload.requirements_label = this.fileLabel;\n                // payload.filename = fileList[x].name;\n                // payload.file = fileList[x].file;\n                this.save(formData);\n              } else {\n                let paymentFormData = this.paymentDetails;\n                paymentFormData.append(\"filename\", fileList[x].name);\n                paymentFormData.append(fieldName, fileList[x]);\n                this.$store.commit(\"setPaymentDetails\", paymentFormData);\n                this.$store.commit(\"setIsFileUploaded\", true);\n              }\n            } else {\n              this.clearInput();\n              this.$swal({\n                title: \"File is too large!\",\n                text: \"File size must not exceed 25mb.\",\n                icon: \"error\",\n              });\n            }\n          } else {\n            this.$swal({\n              title: \"Invalid file type!\",\n              text: \"Please enter a valid file format.\",\n              icon: \"error\",\n            });\n          }\n        });\n      } else {\n        Array.from(Array(fileList.length).keys()).map((x) => {\n          if (\n            (this.uploadType === \"application/pdf\" &&\n              fileList[x][\"type\"] === \"application/pdf\") ||\n            (this.uploadType === \"image/*, application/pdf\" &&\n              (this.validImageTypes.includes(fileList[x][\"type\"]) ||\n                fileList[x][\"type\"] === \"application/pdf\"))\n          ) {\n            if (fileList[x].size <= 26214400) {\n              this.filename = fileList[x].name;\n              formData.append(fieldName, fileList[x]);\n              let requirement_id =\n                this.type === \"business\"\n                  ? this.applicationRequirements.id\n                  : this.buildingApplicationRequirements.id;\n              formData.append(\"filename\", fileList[x].name);\n              this.save(formData);\n            } else {\n              this.clearInput();\n              this.$swal({\n                title: \"File is too large!\",\n                text: \"File size must not exceed 25mb.\",\n                icon: \"error\",\n              });\n            }\n          } else {\n            this.$swal({\n              title: \"Invalid file type!\",\n              text: \"Please enter a valid file format.\",\n              icon: \"error\",\n            });\n          }\n        });\n      }\n      // save it\n    },\n    clearInput() {\n      this.$refs[`${this.fileLabel}`].value = null;\n      this.filename = \"DRAG/CLICK TO UPLOAD YOUR FILE HERE\";\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.meta-upload-box {\n  width: 100%;\n  .meta-label {\n    font-size: 16px;\n    font-weight: bold;\n    margin-bottom: 10px;\n  }\n  .meta-desc {\n    font-size: 14px;\n    padding-left: 17px;\n    margin-bottom: 18px;\n    width: 100%;\n  }\n  .meta-custom-upload {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    width: 100%;\n    padding: 15px 30px;\n    margin: 0 0 30px 17px;\n    border: 3px dashed #bce0fd;\n    transition: 0.4s;\n    input[type=\"file\"] {\n      position: absolute;\n      left: 0;\n      top: 0;\n      z-index: 2;\n      height: 100%;\n      width: 100%;\n      opacity: 0;\n      cursor: pointer;\n    }\n    .meta-text.big {\n      color: #64b4f9;\n      font-size: 30px;\n      font-weight: 700;\n      line-height: 1.6;\n      text-transform: uppercase;\n      width: 100%;\n      text-align: center;\n      transition: 0.4s;\n    }\n    .meta-text.small {\n      color: #64b4f9;\n      font-size: 15px;\n      font-weight: 700;\n      line-height: 1.6;\n      transition: 0.4s;\n    }\n  }\n}\n\n.upload-limit {\n  font-size: 14px;\n  width: 100%;\n  text-align: center;\n  margin-top: 5px;\n  color: #4886ba;\n}\n\ndiv.meta-container .meta-custom-upload:hover {\n  border-color: #039be5;\n}\n\ndiv.meta-container .meta-custom-upload:hover div.meta-text {\n  color: #039be5;\n}\n\n.meta-custom-upload.has-error,\n.meta-custom-upload.has-error .meta-text {\n  border-color: #e23a36;\n  color: #e23a36 !important;\n}\n\n/*\nMOBILE RESPONSIVENESS \n--------------------------------------------------------------*/\n\n@media only screen and (max-width: 768px) {\n  .meta-upload-box .meta-label {\n    font-size: 15px;\n  }\n\n  .meta-upload-box .meta-custom-upload .meta-text.small {\n    font-size: 13px;\n  }\n}\n\n@media only screen and (max-width: 480px) {\n  .meta-upload-box .meta-label {\n    font-size: 13px;\n  }\n\n  .meta-upload-box .meta-desc {\n    font-size: 12px;\n    margin-bottom: 15px;\n  }\n  .meta-upload-box .meta-custom-upload .meta-text.small {\n    font-size: 12px;\n    text-align: center;\n  }\n}\n</style>\n"],"sourceRoot":"src/components/forms"}]}