{"remainingRequest":"/var/www/html/boss-web/node_modules/babel-loader/lib/index.js!/var/www/html/boss-web/src/store/modules/service.js","dependencies":[{"path":"/var/www/html/boss-web/src/store/modules/service.js","mtime":1620783803980},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/var/www/html/boss-web/src/store/modules/service.js"],"names":["axios","router","baseUrl","process","env","VUE_APP_API_URL","config","serviceObj","localStorage","getItem","parseObj","JSON","parse","headers","Authorization","authToken","getDefaultAuthState","codeToken","loginSuccess","registerSuccess","forgotPasswordSuccess","resetPasswordSuccess","validationMessages","userDetails","credentials","isAuthenticated","isAdminAuthenticated","state","getters","mutations","setCodeToken","setAuthToken","setLoginSuccess","setRegisterSuccess","setForgotPasswordSuccess","setResetPasswordSuccess","setValidationMessages","setUserDetails","setIsAuthenticated","setAdminIsAuthenticated","resetAuthState","Object","assign","setCredentials","actions","getCodeToken","payload","commit","dispatch","post","response","data","token","console","log","type","title","statusText","message","detail","getAuthToken","code","code_token","registerUser","forgotPasswordUser","resetPasswordUser","non_field_errors","getUserDetails","get","adminLogin","checkIfAdmin","is_admin","push","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,IAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,eAA5B,C,CACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,MAAM,GAAG,SAATA,MAAS,GAAM;AACjB,MAAIC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAjB;AACA,MAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWL,UAAX,CAAf;AACA,SAAO;AACLM,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,gBAASJ,QAAQ,CAACK,SAAlB;AADN;AADJ,GAAP;AAKD,CARD,C,CAUA;;;AACA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChC,SAAO;AACLC,IAAAA,SAAS,EAAE,EADN;AAELF,IAAAA,SAAS,EAAE,EAFN;AAGLG,IAAAA,YAAY,EAAE,KAHT;AAILC,IAAAA,eAAe,EAAE,KAJZ;AAKLC,IAAAA,qBAAqB,EAAE,KALlB;AAMLC,IAAAA,oBAAoB,EAAE,KANjB;AAOLC,IAAAA,kBAAkB,EAAE,EAPf;AAQLC,IAAAA,WAAW,EAAE,EARR;AASLC,IAAAA,WAAW,EAAE,EATR;AAULC,IAAAA,eAAe,EAAE,KAVZ;AAWLC,IAAAA,oBAAoB,EAAE;AAXjB,GAAP;AAaD,CAdD;;AAeA,IAAMC,KAAK,GAAGX,mBAAmB,EAAjC;AAEA,IAAMY,OAAO,GAAG;AACdX,EAAAA,SAAS,EAAE,mBAACU,KAAD;AAAA,WAAWA,KAAK,CAACV,SAAjB;AAAA,GADG;AAEdF,EAAAA,SAAS,EAAE,mBAACY,KAAD;AAAA,WAAWA,KAAK,CAACZ,SAAjB;AAAA,GAFG;AAGdG,EAAAA,YAAY,EAAE,sBAACS,KAAD;AAAA,WAAWA,KAAK,CAACT,YAAjB;AAAA,GAHA;AAIdC,EAAAA,eAAe,EAAE,yBAACQ,KAAD;AAAA,WAAWA,KAAK,CAACR,eAAjB;AAAA,GAJH;AAKdC,EAAAA,qBAAqB,EAAE,+BAACO,KAAD;AAAA,WAAWA,KAAK,CAACP,qBAAjB;AAAA,GALT;AAMdC,EAAAA,oBAAoB,EAAE,8BAACM,KAAD;AAAA,WAAWA,KAAK,CAACN,oBAAjB;AAAA,GANR;AAOdC,EAAAA,kBAAkB,EAAE,4BAACK,KAAD;AAAA,WAAWA,KAAK,CAACL,kBAAjB;AAAA,GAPN;AAQdC,EAAAA,WAAW,EAAE,qBAACI,KAAD;AAAA,WAAWA,KAAK,CAACJ,WAAjB;AAAA,GARC;AASdE,EAAAA,eAAe,EAAE,yBAACE,KAAD;AAAA,WAAWA,KAAK,CAACF,eAAjB;AAAA,GATH;AAUdC,EAAAA,oBAAoB,EAAE,8BAACC,KAAD;AAAA,WAAWA,KAAK,CAACD,oBAAjB;AAAA,GAVR;AAWdF,EAAAA,WAAW,EAAE,qBAACG,KAAD;AAAA,WAAWA,KAAK,CAACH,WAAjB;AAAA;AAXC,CAAhB;AAcA,IAAMK,SAAS,GAAG;AAChBC,EAAAA,YAAY,EAAE,sBAACH,KAAD,EAAQV,SAAR;AAAA,WAAuBU,KAAK,CAACV,SAAN,GAAkBA,SAAzC;AAAA,GADE;AAEhBc,EAAAA,YAAY,EAAE,sBAACJ,KAAD,EAAQZ,SAAR;AAAA,WAAuBY,KAAK,CAACZ,SAAN,GAAkBA,SAAzC;AAAA,GAFE;AAGhBiB,EAAAA,eAAe,EAAE,yBAACL,KAAD,EAAQT,YAAR;AAAA,WAA0BS,KAAK,CAACT,YAAN,GAAqBA,YAA/C;AAAA,GAHD;AAIhBe,EAAAA,kBAAkB,EAAE,4BAACN,KAAD,EAAQR,eAAR;AAAA,WACjBQ,KAAK,CAACR,eAAN,GAAwBA,eADP;AAAA,GAJJ;AAMhBe,EAAAA,wBAAwB,EAAE,kCAACP,KAAD,EAAQP,qBAAR;AAAA,WACvBO,KAAK,CAACP,qBAAN,GAA8BA,qBADP;AAAA,GANV;AAQhBe,EAAAA,uBAAuB,EAAE,iCAACR,KAAD,EAAQN,oBAAR;AAAA,WACtBM,KAAK,CAACN,oBAAN,GAA6BA,oBADP;AAAA,GART;AAUhBe,EAAAA,qBAAqB,EAAE,+BAACT,KAAD,EAAQL,kBAAR;AAAA,WACpBK,KAAK,CAACL,kBAAN,GAA2BA,kBADP;AAAA,GAVP;AAYhBe,EAAAA,cAAc,EAAE,wBAACV,KAAD,EAAQJ,WAAR;AAAA,WAAyBI,KAAK,CAACJ,WAAN,GAAoBA,WAA7C;AAAA,GAZA;AAahBe,EAAAA,kBAAkB,EAAE,4BAACX,KAAD,EAAQF,eAAR;AAAA,WACjBE,KAAK,CAACF,eAAN,GAAwBA,eADP;AAAA,GAbJ;AAehBc,EAAAA,uBAAuB,EAAE,iCAACZ,KAAD,EAAQD,oBAAR;AAAA,WACtBC,KAAK,CAACD,oBAAN,GAA6BA,oBADP;AAAA,GAfT;AAiBhBc,EAAAA,cAAc,EAAE,wBAACb,KAAD;AAAA,WAAWc,MAAM,CAACC,MAAP,CAAcf,KAAd,EAAqBX,mBAAmB,EAAxC,CAAX;AAAA,GAjBA;AAkBhB2B,EAAAA,cAAc,EAAE,wBAAChB,KAAD,EAAQH,WAAR;AAAA,WAAyBG,KAAK,CAACH,WAAN,GAAoBA,WAA7C;AAAA;AAlBA,CAAlB;AAqBA,IAAMoB,OAAO,GAAG;AACRC,EAAAA,YADQ,8BACoCC,OADpC,EAC6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtCC,cAAAA,MAAsC,QAAtCA,MAAsC,EAA9BC,QAA8B,QAA9BA,QAA8B,EAApBpB,OAAoB,QAApBA,OAAoB;AAAA;AAEvDmB,cAAAA,MAAM,CAAC,YAAD,EAAe,IAAf,CAAN;AAFuD;AAAA,qBAGhC/C,KAAK,CAACiD,IAAN,WAClB/C,OADkB,qCAErB4C,OAFqB,CAHgC;;AAAA;AAGjDI,cAAAA,QAHiD;AAOvDH,cAAAA,MAAM,CAAC,cAAD,EAAiBG,QAAQ,CAACC,IAAT,CAAcC,KAA/B,CAAN;AACAL,cAAAA,MAAM,CAAC,aAAD,EAAgB,KAAhB,CAAN;AACAA,cAAAA,MAAM,CAAC,gBAAD,EAAmBD,OAAnB,CAAN;AACAC,cAAAA,MAAM,CAAC,YAAD,EAAe,KAAf,CAAN;AAVuD;AAAA;;AAAA;AAAA;AAAA;AAYvDM,cAAAA,OAAO,CAACC,GAAR;AACAP,cAAAA,MAAM,CAAC,YAAD,EAAe,KAAf,CAAN;AACAC,cAAAA,QAAQ,CAAC,cAAD,EAAiB;AACvBO,gBAAAA,IAAI,EAAE,OADiB;AAEvBC,gBAAAA,KAAK,EAAE,YAAIN,QAAJ,CAAaO,UAFG;AAGvBC,gBAAAA,OAAO,EAAE,YAAIR,QAAJ,CAAaC,IAAb,CAAkBQ;AAHJ,eAAjB,CAAR;;AAduD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAoB1D,GArBa;AAsBRC,EAAAA,YAtBQ,+BAsBoCC,IAtBpC,EAsB0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAnCd,cAAAA,MAAmC,SAAnCA,MAAmC,EAA3BnB,OAA2B,SAA3BA,OAA2B,EAAlBoB,QAAkB,SAAlBA,QAAkB;AAAA;AAEhDF,cAAAA,OAFgD,GAEtC;AACZgB,gBAAAA,UAAU,EAAElC,OAAO,CAACX,SADR;AAEZ4C,gBAAAA,IAAI,EAAEA;AAFM,eAFsC;AAMpDd,cAAAA,MAAM,CAAC,YAAD,EAAe,IAAf,CAAN;AANoD;AAAA,qBAO7B/C,KAAK,CAACiD,IAAN,WAClB/C,OADkB,qCAErB4C,OAFqB,CAP6B;;AAAA;AAO9CI,cAAAA,QAP8C;AAWpDH,cAAAA,MAAM,CAAC,gBAAD,EAAmB,EAAnB,CAAN;AACAA,cAAAA,MAAM,CAAC,YAAD,EAAe,KAAf,CAAN;AACAA,cAAAA,MAAM,CAAC,cAAD,EAAiBG,QAAQ,CAACC,IAAT,CAAcC,KAA/B,CAAN;AACAL,cAAAA,MAAM,CAAC,iBAAD,EAAoB,IAApB,CAAN;AACAA,cAAAA,MAAM,CAAC,oBAAD,EAAuB,IAAvB,CAAN;AACAA,cAAAA,MAAM,CAAC,aAAD,EAAgB,OAAhB,CAAN;AAhBoD;AAAA;;AAAA;AAAA;AAAA;AAkBpDA,cAAAA,MAAM,CAAC,YAAD,EAAe,KAAf,CAAN;AACAC,cAAAA,QAAQ,CAAC,cAAD,EAAiB;AACvBO,gBAAAA,IAAI,EAAE,OADiB;AAEvBC,gBAAAA,KAAK,EAAE,aAAIN,QAAJ,CAAaO,UAFG;AAGvBC,gBAAAA,OAAO,EAAE,aAAIR,QAAJ,CAAaC,IAAb,CAAkBQ;AAHJ,eAAjB,CAAR;;AAnBoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBvD,GA/Ca;AAgDRI,EAAAA,YAhDQ,+BAgD0BjB,OAhD1B,EAgDmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA5BC,cAAAA,MAA4B,SAA5BA,MAA4B,EAApBnB,OAAoB,SAApBA,OAAoB;AAAA;AAE7CmB,cAAAA,MAAM,CAAC,YAAD,EAAe,IAAf,CAAN;AAF6C;AAAA,qBAGtB/C,KAAK,CAACiD,IAAN,WAAc/C,OAAd,mBAAqC4C,OAArC,CAHsB;;AAAA;AAGvCI,cAAAA,QAHuC;AAI7CH,cAAAA,MAAM,CAAC,YAAD,EAAe,KAAf,CAAN;AACAA,cAAAA,MAAM,CAAC,oBAAD,EAAuB,IAAvB,CAAN;AAL6C;AAAA;;AAAA;AAAA;AAAA;AAO7CA,cAAAA,MAAM,CAAC,YAAD,EAAe,KAAf,CAAN;AACAA,cAAAA,MAAM,CAAC,uBAAD,EAA0B,aAAIG,QAAJ,CAAaC,IAAvC,CAAN;;AAR6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUhD,GA1Da;AA2DRa,EAAAA,kBA3DQ,qCA2D0ClB,OA3D1C,EA2DmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtCC,cAAAA,MAAsC,SAAtCA,MAAsC,EAA9BnB,OAA8B,SAA9BA,OAA8B,EAArBoB,QAAqB,SAArBA,QAAqB;AAAA;AAE7DD,cAAAA,MAAM,CAAC,YAAD,EAAe,IAAf,CAAN;AAF6D;AAAA,qBAGtC/C,KAAK,CAACiD,IAAN,WAClB/C,OADkB,kCAErB4C,OAFqB,CAHsC;;AAAA;AAGvDI,cAAAA,QAHuD;AAO7DH,cAAAA,MAAM,CAAC,gBAAD,EAAmBD,OAAnB,CAAN;AACAC,cAAAA,MAAM,CAAC,YAAD,EAAe,KAAf,CAAN;AACAA,cAAAA,MAAM,CAAC,0BAAD,EAA6B,IAA7B,CAAN;AAT6D;AAAA;;AAAA;AAAA;AAAA;AAW7DA,cAAAA,MAAM,CAAC,YAAD,EAAe,KAAf,CAAN;AACAA,cAAAA,MAAM,CAAC,uBAAD,EAA0B,aAAIG,QAAJ,CAAaC,IAAvC,CAAN;AACAH,cAAAA,QAAQ,CAAC,cAAD,EAAiB;AACvBO,gBAAAA,IAAI,EAAE,OADiB;AAEvBC,gBAAAA,KAAK,EAAE,aAAIN,QAAJ,CAAaO,UAFG;AAGvBC,gBAAAA,OAAO,EAAE,aAAIR,QAAJ,CAAaC,IAAb,CAAkBQ;AAHJ,eAAjB,CAAR;;AAb6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmBhE,GA9Ea;AA+ERM,EAAAA,iBA/EQ,oCA+EyCnB,OA/EzC,EA+EkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtCC,cAAAA,MAAsC,SAAtCA,MAAsC,EAA9BC,QAA8B,SAA9BA,QAA8B,EAApBpB,OAAoB,SAApBA,OAAoB;AAAA;AAE5DmB,cAAAA,MAAM,CAAC,YAAD,EAAe,IAAf,CAAN;AAF4D;AAAA,qBAGrC/C,KAAK,CAACiD,IAAN,WAClB/C,OADkB,0CAErB4C,OAFqB,CAHqC;;AAAA;AAGtDI,cAAAA,QAHsD;AAO5DH,cAAAA,MAAM,CAAC,YAAD,EAAe,KAAf,CAAN;AACAA,cAAAA,MAAM,CAAC,yBAAD,EAA4B,IAA5B,CAAN;AACAC,cAAAA,QAAQ,CAAC,cAAD,EAAiB;AACvBO,gBAAAA,IAAI,EAAE,SADiB;AAEvBC,gBAAAA,KAAK,EAAE,yBAFgB;AAGvBE,gBAAAA,OAAO,EAAE;AAHc,eAAjB,CAAR;AAT4D;AAAA;;AAAA;AAAA;AAAA;AAe5DX,cAAAA,MAAM,CAAC,YAAD,EAAe,KAAf,CAAN;AACAA,cAAAA,MAAM,CAAC,uBAAD,EAA0B,aAAIG,QAAJ,CAAaC,IAAvC,CAAN;;AACA,kBAAI,aAAID,QAAJ,CAAaC,IAAb,CAAkBe,gBAAtB,EAAwC;AACtClB,gBAAAA,QAAQ,CAAC,cAAD,EAAiB;AACvBO,kBAAAA,IAAI,EAAE,OADiB;AAEvBC,kBAAAA,KAAK,EAAE,QAFgB;AAGvBE,kBAAAA,OAAO,EAAE,aAAIR,QAAJ,CAAaC,IAAb,CAAkBe;AAHJ,iBAAjB,CAAR;AAKD;;AAvB2D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyB/D,GAxGa;AAyGRC,EAAAA,cAzGQ,iCAyG4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAnBpB,cAAAA,MAAmB,SAAnBA,MAAmB,EAAXnB,OAAW,SAAXA,OAAW;AAAA;AAAA;AAAA,qBAEhCmB,MAAM,CAAC,YAAD,EAAe,KAAf,CAF0B;;AAAA;AAAA;AAAA,qBAGf/C,KAAK,CAACoE,GAAN,WAAalE,OAAb,sBAAuC;AAC5DW,gBAAAA,OAAO,EAAE;AAAEC,kBAAAA,aAAa,gBAASc,OAAO,CAACb,SAAjB;AAAf;AADmD,eAAvC,CAHe;;AAAA;AAGhCmC,cAAAA,QAHgC;AAAA;AAAA,qBAMhCH,MAAM,CAAC,gBAAD,EAAmBG,QAAQ,CAACC,IAA5B,CAN0B;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQtCE,cAAAA,OAAO,CAACC,GAAR;;AARsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUzC,GAnHa;AAoHRe,EAAAA,UApHQ,6BAoHkCvB,OApHlC,EAoH2C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtCC,cAAAA,MAAsC,SAAtCA,MAAsC,EAA9BC,QAA8B,SAA9BA,QAA8B,EAApBpB,OAAoB,SAApBA,OAAoB;AAAA;AAErDmB,cAAAA,MAAM,CAAC,YAAD,EAAe,IAAf,CAAN;AAFqD;AAAA,qBAG9B/C,KAAK,CAACiD,IAAN,WAAc/C,OAAd,mBAAqC4C,OAArC,CAH8B;;AAAA;AAG/CI,cAAAA,QAH+C;AAIrDH,cAAAA,MAAM,CAAC,cAAD,EAAiBG,QAAQ,CAACC,IAAT,CAAcC,KAA/B,CAAN;AACAJ,cAAAA,QAAQ,CAAC,cAAD,CAAR;AACAA,cAAAA,QAAQ,CAAC,aAAD,CAAR;AANqD;AAAA;;AAAA;AAAA;AAAA;AAQrD,2BAAIE,QAAJ,GAAeG,OAAO,CAACC,GAAR,CAAY,aAAIJ,QAAhB,CAAf,GAA2CG,OAAO,CAACC,GAAR,CAAY,aAAIO,IAAhB,CAA3C;AACAd,cAAAA,MAAM,CAAC,YAAD,EAAe,KAAf,CAAN;;AACA,kBAAI,aAAIc,IAAJ,IAAY,cAAhB,EAAgC;AAC9Bb,gBAAAA,QAAQ,CAAC,cAAD,EAAiB;AACvBO,kBAAAA,IAAI,EAAE,OADiB;AAEvBC,kBAAAA,KAAK,EAAE,QAFgB;AAGvBE,kBAAAA,OAAO,EAAE;AAHc,iBAAjB,CAAR;AAKD,eAND,MAMO;AACLV,gBAAAA,QAAQ,CAAC,cAAD,EAAiB;AACvBO,kBAAAA,IAAI,EAAE,OADiB;AAEvBC,kBAAAA,KAAK,EAAE,WAFgB;AAGvBE,kBAAAA,OAAO,EAAE;AAHc,iBAAjB,CAAR;AAKD;;AAtBoD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBxD,GA5Ia;AA6IRY,EAAAA,YA7IQ,+BA6IoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA7BvB,cAAAA,MAA6B,SAA7BA,MAA6B,EAArBC,QAAqB,SAArBA,QAAqB,EAAXpB,OAAW,SAAXA,OAAW;AAAA;AAAA;AAAA,qBAEvB5B,KAAK,CAACiD,IAAN,WAClB/C,OADkB,sBAErB,EAFqB,EAGrB;AAAEW,gBAAAA,OAAO,EAAE;AAAEC,kBAAAA,aAAa,gBAASc,OAAO,CAACb,SAAjB;AAAf;AAAX,eAHqB,CAFuB;;AAAA;AAExCmC,cAAAA,QAFwC;AAO9CH,cAAAA,MAAM,CAAC,YAAD,EAAe,KAAf,CAAN;;AACA,kBAAIG,QAAQ,CAACC,IAAT,CAAcoB,QAAlB,EAA4B;AAC1BxB,gBAAAA,MAAM,CAAC,yBAAD,EAA4B,IAA5B,CAAN;AACA9C,gBAAAA,MAAM,CAACuE,IAAP,CAAY;AAAEC,kBAAAA,IAAI,EAAE;AAAR,iBAAZ;AACD,eAHD,MAGO;AACLzB,gBAAAA,QAAQ,CAAC,cAAD,EAAiB;AACvBO,kBAAAA,IAAI,EAAE,OADiB;AAEvBC,kBAAAA,KAAK,EAAE,WAFgB;AAGvBE,kBAAAA,OAAO,EACL;AAJqB,iBAAjB,CAAR;AAMD;;AAlB6C;AAAA;;AAAA;AAAA;AAAA;AAoB9CX,cAAAA,MAAM,CAAC,YAAD,EAAe,KAAf,CAAN;AACAM,cAAAA,OAAO,CAACC,GAAR;AACAN,cAAAA,QAAQ,CAAC,cAAD,EAAiB;AACvBO,gBAAAA,IAAI,EAAE,OADiB;AAEvBC,gBAAAA,KAAK,EAAE,QAFgB;AAGvBE,gBAAAA,OAAO,EAAE;AAHc,eAAjB,CAAR;;AAtB8C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BjD;AAzKa,CAAhB;AA2KA,eAAe;AACb/B,EAAAA,KAAK,EAALA,KADa;AAEbC,EAAAA,OAAO,EAAPA,OAFa;AAGbgB,EAAAA,OAAO,EAAPA,OAHa;AAIbf,EAAAA,SAAS,EAATA;AAJa,CAAf","sourcesContent":["import axios from \"axios\";\nimport router from \"../../router/index.js\";\nconst baseUrl = process.env.VUE_APP_API_URL;\n// let config = {\n//   headers: {\n//     Authorization: `jwt ${localStorage.getItem('')}`\n//   }\n// }\n\nlet config = () => {\n  let serviceObj = localStorage.getItem(\"service\");\n  let parseObj = JSON.parse(serviceObj);\n  return {\n    headers: {\n      Authorization: `jwt ${parseObj.authToken}`,\n    },\n  };\n};\n\n// const baseUrl = \"https://boss-web-api.herokuapp.com\";\nconst getDefaultAuthState = () => {\n  return {\n    codeToken: \"\",\n    authToken: \"\",\n    loginSuccess: false,\n    registerSuccess: false,\n    forgotPasswordSuccess: false,\n    resetPasswordSuccess: false,\n    validationMessages: {},\n    userDetails: {},\n    credentials: {},\n    isAuthenticated: false,\n    isAdminAuthenticated: false,\n  };\n};\nconst state = getDefaultAuthState();\n\nconst getters = {\n  codeToken: (state) => state.codeToken,\n  authToken: (state) => state.authToken,\n  loginSuccess: (state) => state.loginSuccess,\n  registerSuccess: (state) => state.registerSuccess,\n  forgotPasswordSuccess: (state) => state.forgotPasswordSuccess,\n  resetPasswordSuccess: (state) => state.resetPasswordSuccess,\n  validationMessages: (state) => state.validationMessages,\n  userDetails: (state) => state.userDetails,\n  isAuthenticated: (state) => state.isAuthenticated,\n  isAdminAuthenticated: (state) => state.isAdminAuthenticated,\n  credentials: (state) => state.credentials,\n};\n\nconst mutations = {\n  setCodeToken: (state, codeToken) => (state.codeToken = codeToken),\n  setAuthToken: (state, authToken) => (state.authToken = authToken),\n  setLoginSuccess: (state, loginSuccess) => (state.loginSuccess = loginSuccess),\n  setRegisterSuccess: (state, registerSuccess) =>\n    (state.registerSuccess = registerSuccess),\n  setForgotPasswordSuccess: (state, forgotPasswordSuccess) =>\n    (state.forgotPasswordSuccess = forgotPasswordSuccess),\n  setResetPasswordSuccess: (state, resetPasswordSuccess) =>\n    (state.resetPasswordSuccess = resetPasswordSuccess),\n  setValidationMessages: (state, validationMessages) =>\n    (state.validationMessages = validationMessages),\n  setUserDetails: (state, userDetails) => (state.userDetails = userDetails),\n  setIsAuthenticated: (state, isAuthenticated) =>\n    (state.isAuthenticated = isAuthenticated),\n  setAdminIsAuthenticated: (state, isAdminAuthenticated) =>\n    (state.isAdminAuthenticated = isAdminAuthenticated),\n  resetAuthState: (state) => Object.assign(state, getDefaultAuthState()),\n  setCredentials: (state, credentials) => (state.credentials = credentials),\n};\n\nconst actions = {\n  async getCodeToken({ commit, dispatch, getters }, payload) {\n    try {\n      commit(\"setLoading\", true);\n      const response = await axios.post(\n        `${baseUrl}/auth/2fa-auth/get-code-token/`,\n        payload\n      );\n      commit(\"setCodeToken\", response.data.token);\n      commit(\"setAuthType\", \"otp\");\n      commit(\"setCredentials\", payload);\n      commit(\"setLoading\", false);\n    } catch (err) {\n      console.log(err);\n      commit(\"setLoading\", false);\n      dispatch(\"createPrompt\", {\n        type: \"error\",\n        title: err.response.statusText,\n        message: err.response.data.detail,\n      });\n    }\n  },\n  async getAuthToken({ commit, getters, dispatch }, code) {\n    try {\n      let payload = {\n        code_token: getters.codeToken,\n        code: code,\n      };\n      commit(\"setLoading\", true);\n      const response = await axios.post(\n        `${baseUrl}/auth/2fa-auth/get-auth-token/`,\n        payload\n      );\n      commit(\"setCredentials\", {});\n      commit(\"setLoading\", false);\n      commit(\"setAuthToken\", response.data.token);\n      commit(\"setLoginSuccess\", true);\n      commit(\"setIsAuthenticated\", true);\n      commit(\"setAuthType\", \"login\");\n    } catch (err) {\n      commit(\"setLoading\", false);\n      dispatch(\"createPrompt\", {\n        type: \"error\",\n        title: err.response.statusText,\n        message: err.response.data.detail,\n      });\n    }\n  },\n  async registerUser({ commit, getters }, payload) {\n    try {\n      commit(\"setLoading\", true);\n      const response = await axios.post(`${baseUrl}/auth/users/`, payload);\n      commit(\"setLoading\", false);\n      commit(\"setRegisterSuccess\", true);\n    } catch (err) {\n      commit(\"setLoading\", false);\n      commit(\"setValidationMessages\", err.response.data);\n    }\n  },\n  async forgotPasswordUser({ commit, getters, dispatch }, payload) {\n    try {\n      commit(\"setLoading\", true);\n      const response = await axios.post(\n        `${baseUrl}/auth/users/reset_password/`,\n        payload\n      );\n      commit(\"setCredentials\", payload);\n      commit(\"setLoading\", false);\n      commit(\"setForgotPasswordSuccess\", true);\n    } catch (err) {\n      commit(\"setLoading\", false);\n      commit(\"setValidationMessages\", err.response.data);\n      dispatch(\"createPrompt\", {\n        type: \"error\",\n        title: err.response.statusText,\n        message: err.response.data.detail,\n      });\n    }\n  },\n  async resetPasswordUser({ commit, dispatch, getters }, payload) {\n    try {\n      commit(\"setLoading\", true);\n      const response = await axios.post(\n        `${baseUrl}/auth/users/reset_password_confirm/`,\n        payload\n      );\n      commit(\"setLoading\", false);\n      commit(\"setResetPasswordSuccess\", true);\n      dispatch(\"createPrompt\", {\n        type: \"success\",\n        title: \"Reset Password Success!\",\n        message: \"Your password was reset successfully.\",\n      });\n    } catch (err) {\n      commit(\"setLoading\", false);\n      commit(\"setValidationMessages\", err.response.data);\n      if (err.response.data.non_field_errors) {\n        dispatch(\"createPrompt\", {\n          type: \"error\",\n          title: \"Error!\",\n          message: err.response.data.non_field_errors,\n        });\n      }\n    }\n  },\n  async getUserDetails({ commit, getters }) {\n    try {\n      await commit(\"setLoading\", false);\n      const response = await axios.get(`${baseUrl}/auth/users/me/`, {\n        headers: { Authorization: `jwt ${getters.authToken}` },\n      });\n      await commit(\"setUserDetails\", response.data);\n    } catch (err) {\n      console.log(err);\n    }\n  },\n  async adminLogin({ commit, dispatch, getters }, payload) {\n    try {\n      commit(\"setLoading\", true);\n      const response = await axios.post(`${baseUrl}/auth/admin/`, payload);\n      commit(\"setAuthToken\", response.data.token);\n      dispatch(\"checkIfAdmin\");\n      dispatch(\"checkGroups\");\n    } catch (err) {\n      err.response ? console.log(err.response) : console.log(err.code);\n      commit(\"setLoading\", false);\n      if (err.code == \"ECONNABORTED\") {\n        dispatch(\"createPrompt\", {\n          type: \"error\",\n          title: \"Failed\",\n          message: \"Something went wrong! Please try again later.\",\n        });\n      } else {\n        dispatch(\"createPrompt\", {\n          type: \"error\",\n          title: \"Forbidden\",\n          message: \"Incorrect authentication credentials.\",\n        });\n      }\n    }\n  },\n  async checkIfAdmin({ commit, dispatch, getters }) {\n    try {\n      const response = await axios.post(\n        `${baseUrl}/api/get-level/`,\n        {},\n        { headers: { Authorization: `jwt ${getters.authToken}` } }\n      );\n      commit(\"setLoading\", false);\n      if (response.data.is_admin) {\n        commit(\"setAdminIsAuthenticated\", true);\n        router.push({ name: \"Dashboard\" });\n      } else {\n        dispatch(\"createPrompt\", {\n          type: \"error\",\n          title: \"Forbidden\",\n          message:\n            \"Please enter the correct username and password for a staff account. \",\n        });\n      }\n    } catch (err) {\n      commit(\"setLoading\", false);\n      console.log(err);\n      dispatch(\"createPrompt\", {\n        type: \"error\",\n        title: \"Ooops!\",\n        message: \"Something went wrong. Please try again.\",\n      });\n    }\n  },\n};\nexport default {\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"]}]}