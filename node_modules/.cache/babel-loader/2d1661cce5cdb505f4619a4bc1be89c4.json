{"remainingRequest":"/var/www/html/boss-web/node_modules/babel-loader/lib/index.js!/var/www/html/boss-web/src/store/modules/admin.js","dependencies":[{"path":"/var/www/html/boss-web/src/store/modules/admin.js","mtime":1620076411836},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/var/www/html/boss-web/src/store/modules/admin.js"],"names":["axios","baseUrl","process","env","VUE_APP_API_URL","getDefaultAdminState","dashboard","groups","userDepartment","faq","state","getters","mutations","setDashboard","setGroups","setUserDepartment","setFaq","actions","getDashboardData","commit","get","headers","Authorization","authToken","response","data","console","log","checkGroups","getUserDepartment","name","getFaq"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nconst baseUrl = process.env.VUE_APP_API_URL;\nconst getDefaultAdminState = () => {\n  return {\n    dashboard: {},\n    groups: [],\n    userDepartment: \"\",\n    faq: [],\n  };\n};\n\nconst state = getDefaultAdminState();\n\nconst getters = {\n  dashboard: (state) => state.dashboard,\n  groups: (state) => state.groups,\n  userDepartment: (state) => state.userDepartment,\n  faq: (state) => state.faq,\n};\n\nconst mutations = {\n  setDashboard: (state, dashboard) => (state.dashboard = dashboard),\n  setGroups: (state, groups) => (state.groups = groups),\n  setUserDepartment: (state, userDepartment) =>\n    (state.userDepartment = userDepartment),\n  setFaq: (state, faq) => (state.faq = faq),\n};\n\nconst actions = {\n  async getDashboardData({ commit, getters }) {\n    try {\n      const response = await axios.get(`${baseUrl}/staff/dashboard/`, {\n        headers: { Authorization: `jwt ${getters.authToken}` },\n      });\n      commit(\"setDashboard\", response.data);\n    } catch (err) {\n      console.log(err);\n    }\n  },\n  async checkGroups({ commit, getters }) {\n    try {\n      const response = await axios.get(`${baseUrl}/staff/group/`, {\n        headers: { Authorization: `jwt ${getters.authToken}` },\n      });\n      commit(\"setGroups\", response.data);\n    } catch (err) {\n      err.response ? console.log(err.response) : console.log(err);\n    }\n  },\n  async getUserDepartment({ commit, getters }) {\n    try {\n      const response = await axios.get(`${baseUrl}/staff/user-department`, {\n        headers: { Authorization: `jwt ${getters.authToken}` },\n      });\n      commit(\"setUserDepartment\", response.data.name);\n    } catch (err) {\n      err.response ? console.log(err.response) : console.log(err);\n    }\n  },\n  async getFaq({ commit, getters }) {\n    try {\n      const response = await axios.get(`${baseUrl}/api/faq/`, {\n        headers: { Authorization: `jwt ${getters.authToken}` },\n      });\n      await commit(\"setFaq\", response.data);\n    } catch (err) {\n      err.response ? console.log(err.response) : console.log(err);\n    }\n  },\n};\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"]}]}