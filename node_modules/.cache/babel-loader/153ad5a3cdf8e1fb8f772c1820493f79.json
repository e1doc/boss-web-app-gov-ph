{"remainingRequest":"/var/www/html/boss-web/node_modules/babel-loader/lib/index.js!/var/www/html/boss-web/src/store/modules/appointment.js","dependencies":[{"path":"/var/www/html/boss-web/src/store/modules/appointment.js","mtime":1651664677521},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/var/www/html/boss-web/src/store/modules/appointment.js"],"names":["axios","moment","baseUrl","process","env","VUE_APP_API_URL","getDefaultAppointmentState","appointmentStatus","currentDate","isAppointmentSuccess","appointments","appointmentError","appointmentLimits","adminAppointments","appointmentCount","appointmentSearch","batchTab","format","state","getters","appointmentAction","currentAppointment","mutations","setAppointmentStatus","setCurrentDate","setIsAppointmentSuccess","setAppointments","setAppointmentError","setAppointmentLimits","setAdminAppointments","setAppointmentCount","setAppointmentSearch","setBatchTab","Object","assign","actions","addAppointment","payload","commit","dispatch","post","headers","Authorization","authToken","response","data","console","log","updateAppointment","put","addAppointmentLimit","detail","getUserAppointments","page","get","results","total_pages","getAppointmentLimits","getUserAppointmentLimits","getAdminAppointments","params","date","count","printAppointment","appointment","soa","application_type","business_application"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport moment from \"moment-timezone\";\nconst baseUrl = process.env.VUE_APP_API_URL;\n\nconst getDefaultAppointmentState = () => {\n  return {\n    appointmentStatus: \"slot\",\n    currentDate: \"\",\n    isAppointmentSuccess: false,\n    appointments: [],\n    appointmentError: \"\",\n    appointmentLimits: [],\n    adminAppointments: [],\n    appointmentCount: 0,\n    appointmentSearch: \"\",\n    batchTab: \"batch_1\",\n    currentDate: moment().format(),\n    appointmentAction: \"add\",\n    currentAppointment: {},\n  };\n};\n\nconst state = getDefaultAppointmentState();\n\nconst getters = {\n  appointmentStatus: (state) => state.appointmentStatus,\n  currentDate: (state) => state.currentDate,\n  isAppointmentSuccess: (state) => state.isAppointmentSuccess,\n  appointments: (state) => state.appointments,\n  appointmentError: (state) => state.appointmentError,\n  appointmentLimits: (state) => state.appointmentLimits,\n  adminAppointments: (state) => state.adminAppointments,\n  appointmentCount: (state) => state.appointmentCount,\n  appointmentSearch: (state) => state.appointmentSearch,\n  batchTab: (state) => state.batchTab,\n  currentDate: (state) => state.currentDate,\n  appointmentAction: (state) => state.appointmentAction,\n  currentAppointment: (state) => state.currentAppointment,\n};\n\nconst mutations = {\n  setAppointmentStatus: (state, appointmentStatus) =>\n    (state.appointmentStatus = appointmentStatus),\n  setCurrentDate: (state, currentDate) => (state.currentDate = currentDate),\n  setIsAppointmentSuccess: (state, isAppointmentSuccess) =>\n    (state.isAppointmentSuccess = isAppointmentSuccess),\n  setAppointments: (state, appointments) => (state.appointments = appointments),\n  setAppointmentError: (state, appointmentError) =>\n    (state.appointmentError = appointmentError),\n  setAppointmentLimits: (state, appointmentLimits) =>\n    (state.appointmentLimits = appointmentLimits),\n  setAdminAppointments: (state, adminAppointments) =>\n    (state.adminAppointments = adminAppointments),\n  setAppointmentCount: (state, appointmentCount) =>\n    (state.appointmentCount = appointmentCount),\n  setAppointmentSearch: (state, appointmentSearch) =>\n    (state.appointmentSearch = appointmentSearch),\n  setBatchTab: (state, batchTab) => (state.batchTab = batchTab),\n  setCurrentDate: (state, currentDate) => (state.currentDate = currentDate),\n  resetAppointmentState: (state) =>\n    Object.assign(state, getDefaultAppointmentState()),\n  setAppointmentAction: (state, appointmentAction) =>\n    (state.appointmentAction = appointmentAction),\n  setCurrentAppointment: (state, currentAppointment) =>\n    (state.currentAppointment = currentAppointment),\n};\n\nconst actions = {\n  async addAppointment({ commit, getters, dispatch }, payload) {\n    try {\n      const response = await axios.post(\n        `${baseUrl}/api/appointment/`,\n        payload,\n        {\n          headers: { Authorization: `jwt ${getters.authToken}` },\n        }\n      );\n      await commit(\"setCurrentAppointment\", response.data);\n      await commit(\"setIsAppointmentSuccess\", true);\n      await dispatch(\"getUserAppointments\");\n    } catch (err) {\n      console.log(err);\n      commit(\"setIsAppointmentSuccess\", false);\n      commit(\"setAppointmentError\", err.response.data);\n    }\n  },\n  async updateAppointment({ commit, getters, dispatch }, payload) {\n    try {\n      const response = await axios.put(`${baseUrl}/api/appointment/`, payload, {\n        headers: { Authorization: `jwt ${getters.authToken}` },\n      });\n      await commit(\"setIsAppointmentSuccess\", true);\n      await dispatch(\"getUserAppointments\");\n    } catch (err) {\n      console.log(err);\n      commit(\"setIsAppointmentSuccess\", false);\n      commit(\"setAppointmentError\", err.response.data);\n    }\n  },\n  async addAppointmentLimit({ commit, getters, dispatch }, payload) {\n    try {\n      const response = await axios.post(\n        `${baseUrl}/staff/appointment-limit/`,\n        payload,\n        {\n          headers: { Authorization: `jwt ${getters.authToken}` },\n        }\n      );\n      await commit(\"setIsAppointmentSuccess\", true);\n    } catch (err) {\n      console.log(err);\n      commit(\"setIsAppointmentSuccess\", false);\n      commit(\"setAppointmentError\", err.response.data.detail);\n    }\n  },\n  async getUserAppointments({ commit, getters }, page = 1) {\n    try {\n      const response = await axios.get(\n        `${baseUrl}/api/user-appointment-list/?page=${page}`,\n        {\n          headers: { Authorization: `jwt ${getters.authToken}` },\n        }\n      );\n      console.log(response.data);\n      commit(\"setAppointments\", response.data.results);\n      commit(\"setPageCount\", response.data.total_pages);\n    } catch (err) {\n      console.log(err);\n      commit(\"setIsAppointmentSuccess\", false);\n    }\n  },\n  async appointmentLimits({ commit, getters }, page = 1) {\n    try {\n      const response = await axios.get(\n        `${baseUrl}/staff/appointment-limit-list/?page=${page}`,\n        {\n          headers: { Authorization: `jwt ${getters.authToken}` },\n        }\n      );\n      commit(\"setPageCount\", response.data.total_pages);\n      commit(\"setAppointmentLimits\", response.data.results);\n    } catch (err) {\n      console.log(err);\n    }\n  },\n  async getAppointmentLimits({ commit, getters }, payload) {\n    try {\n      commit(\"setAppointmentLimits\", []);\n      const response = await axios.get(\n        `${baseUrl}/staff/appointment-limit/?month=${payload}`,\n        {\n          headers: { Authorization: `jwt ${getters.authToken}` },\n        }\n      );\n      commit(\"setAppointmentLimits\", response.data);\n    } catch (err) {\n      console.log(err);\n    }\n  },\n  async getUserAppointmentLimits({ commit, getters }, payload) {\n    try {\n      commit(\"setAppointmentLimits\", []);\n      const response = await axios.get(\n        `${baseUrl}/api/appointment-limit/?month=${payload}`,\n        {\n          headers: { Authorization: `jwt ${getters.authToken}` },\n        }\n      );\n      commit(\"setAppointmentLimits\", response.data);\n    } catch (err) {\n      console.log(err);\n    }\n  },\n  async getAdminAppointments({ commit, dispatch, getters }, page = 1) {\n    try {\n      const response = await axios.get(\n        `${baseUrl}/staff/appointment-list/?search=${getters.appointmentSearch}&batch=${getters.batchTab}&page=${page}`,\n        {\n          headers: { Authorization: `jwt ${getters.authToken}` },\n          params: { date: getters.currentDate },\n        }\n      );\n      commit(\"setAppointmentCount\", response.data.count);\n      commit(\"setAdminAppointments\", response.data.results);\n      commit(\"setPageCount\", response.data.total_pages);\n    } catch (err) {\n      console.log(err);\n    }\n  },\n  async printAppointment({ commit, dispatch, getters }, { appointment, soa }) {\n    try {\n      await commit(\"setCurrentSoaType\", soa.application_type);\n      await commit(\"setCurrentSoaObj\", soa);\n      await commit(\"setCurrentSelectedBusiness\", soa.business_application);\n      await commit(\"setCurrentAppointment\", appointment);\n      await commit(\"setPrintInvoice\", true);\n    } catch (err) {\n      err.response ? console.log(err.response) : console.log(err);\n    }\n  },\n};\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"]}]}