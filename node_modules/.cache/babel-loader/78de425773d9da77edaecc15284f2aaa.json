{"remainingRequest":"/var/www/html/boss-web/node_modules/babel-loader/lib/index.js!/var/www/html/boss-web/src/store/modules/service.js","dependencies":[{"path":"/var/www/html/boss-web/src/store/modules/service.js","mtime":1605179000991},{"path":"/var/www/html/boss-web/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/boss-web/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/var/www/html/boss-web/src/store/modules/service.js"],"names":["axios","router","baseUrl","process","env","VUE_APP_API_URL","config","serviceObj","localStorage","getItem","parseObj","JSON","parse","headers","Authorization","authToken","getDefaultAuthState","codeToken","loginSuccess","registerSuccess","forgotPasswordSuccess","resetPasswordSuccess","validationMessages","userDetails","credentials","isAuthenticated","isAdminAuthenticated","state","getters","mutations","setCodeToken","setAuthToken","setLoginSuccess","setRegisterSuccess","setForgotPasswordSuccess","setResetPasswordSuccess","setValidationMessages","setUserDetails","setIsAuthenticated","setAdminIsAuthenticated","resetAuthState","Object","assign","setCredentials","actions","getCodeToken","payload","commit","dispatch","console","log","BASE_URL","post","response","data","token","type","title","statusText","message","detail","getAuthToken","code","code_token","registerUser","forgotPasswordUser","resetPasswordUser","non_field_errors","getUserDetails","get","adminLogin","checkIfAdmin","is_admin","push","name"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport router from \"../../router/index.js\"\nconst baseUrl = process.env.VUE_APP_API_URL;\n// let config = {\n//   headers: {\n//     Authorization: `jwt ${localStorage.getItem('')}`\n//   }\n// }\n\nlet config = () =>{\n  let serviceObj = localStorage.getItem('service')\n  let parseObj = JSON.parse(serviceObj)\n  return {\n  headers: {\n    Authorization: `jwt ${parseObj.authToken}`\n   }\n  }\n}\n\n// const baseUrl = \"https://boss-web-api.herokuapp.com\";\nconst getDefaultAuthState = () =>{\n  return {\n    codeToken: \"\",\n    authToken: \"\",\n    loginSuccess: false,\n    registerSuccess: false,\n    forgotPasswordSuccess: false,\n    resetPasswordSuccess: false,\n    validationMessages: {},\n    userDetails: {},\n    credentials: {},\n    isAuthenticated: false,\n    isAdminAuthenticated: false\n  }\n}\nconst state = getDefaultAuthState()\n\nconst getters = {\n  codeToken: (state) => state.codeToken,\n  authToken: (state) => state.authToken,\n  loginSuccess: (state) => state.loginSuccess,\n  registerSuccess: (state) => state.registerSuccess,\n  forgotPasswordSuccess: (state) => state.forgotPasswordSuccess,\n  resetPasswordSuccess: (state) => state.resetPasswordSuccess,\n  validationMessages: (state) => state.validationMessages,\n  userDetails: (state) => state.userDetails,\n  isAuthenticated: (state) => state.isAuthenticated,\n  isAdminAuthenticated: (state) => state.isAdminAuthenticated,\n  credentials: (state) => state.credentials\n};\n\nconst mutations = {\n  setCodeToken: (state, codeToken) => (state.codeToken = codeToken),\n  setAuthToken: (state, authToken) => (state.authToken = authToken),\n  setLoginSuccess: (state, loginSuccess) => (state.loginSuccess = loginSuccess),\n  setRegisterSuccess: (state, registerSuccess) => (state.registerSuccess = registerSuccess),\n  setForgotPasswordSuccess: (state, forgotPasswordSuccess) => (state.forgotPasswordSuccess = forgotPasswordSuccess),\n  setResetPasswordSuccess: (state, resetPasswordSuccess) => (state.resetPasswordSuccess = resetPasswordSuccess),\n  setValidationMessages: (state, validationMessages) => (state.validationMessages = validationMessages),\n  setUserDetails: (state, userDetails) => (state.userDetails = userDetails),\n  setIsAuthenticated: (state, isAuthenticated) => (state.isAuthenticated = isAuthenticated),\n  setAdminIsAuthenticated: (state, isAdminAuthenticated) => (state.isAdminAuthenticated = isAdminAuthenticated),\n  resetAuthState: (state) => Object.assign(state, getDefaultAuthState()),\n  setCredentials : (state, credentials) => (state.credentials = credentials)\n};\n\nconst actions = {\n  async getCodeToken({ commit, dispatch, getters }, payload) {\n    try {\n      console.log(process.env.BASE_URL)\n      commit(\"setLoading\", true);\n      const response = await axios.post(\n        `${baseUrl}/auth/2fa-auth/get-code-token/`,\n        payload\n      );\n      commit(\"setCodeToken\", response.data.token);\n      commit(\"setAuthType\", \"otp\");\n      commit('setCredentials', payload)\n      commit(\"setLoading\", false);\n    } catch (err) {\n      console.log(err)\n      commit(\"setLoading\", false);\n       dispatch(\"createPrompt\", {\n        type: \"error\",\n        title: err.response.statusText,\n        message: err.response.data.detail,\n      });\n    }\n  },\n  async getAuthToken({ commit, getters, dispatch }, code) {\n    try {\n      let payload = {\n        code_token: getters.codeToken,\n        code: code,\n      };\n      commit(\"setLoading\", true);\n      const response = await axios.post(\n        `${baseUrl}/auth/2fa-auth/get-auth-token/`,\n        payload\n      );\n      commit('setCredentials', {})\n      commit(\"setLoading\", false);\n      commit(\"setAuthToken\", response.data.token);\n      commit(\"setLoginSuccess\", true);\n      commit(\"setIsAuthenticated\",true)\n      commit(\"setAuthType\", \"login\");\n    } catch (err) {\n      commit(\"setLoading\", false);\n      dispatch(\"createPrompt\", {\n        type: \"error\",\n        title: err.response.statusText,\n        message: err.response.data.detail,\n      });\n    }\n  },\n  async registerUser({ commit, getters }, payload) {\n    try {\n      commit(\"setLoading\", true);\n      const response = await axios.post(`${baseUrl}/auth/users/`, payload);\n      commit(\"setLoading\", false);\n      commit(\"setRegisterSuccess\", true);\n    } catch (err) {\n      commit(\"setLoading\", false);\n      commit(\"setValidationMessages\", err.response.data);\n    }\n  },\n  async forgotPasswordUser({ commit, getters }, payload) {\n    try {\n      commit(\"setLoading\", true);\n      const response = await axios.post(\n        `${baseUrl}/auth/users/reset_password/`,\n        payload\n      );\n      commit('setCredentials', payload)\n      commit(\"setLoading\", false);\n      commit(\"setForgotPasswordSuccess\", true);\n    } catch (err) {\n      commit(\"setLoading\", false);\n      commit(\"setValidationMessages\", err.response.data);\n    }\n  },\n  async resetPasswordUser({ commit, dispatch, getters }, payload) {\n    try {\n      commit(\"setLoading\", true);\n      const response = await axios.post(\n        `${baseUrl}/auth/users/reset_password_confirm/`,\n        payload\n      );\n      commit(\"setLoading\", false);\n      commit(\"setResetPasswordSuccess\", true);\n      dispatch(\"createPrompt\", {\n        type: \"success\",\n        title: \"Reset Password Success!\",\n        message: \"Your password was reset successfully.\",\n      });\n    } catch (err) {\n      commit(\"setLoading\", false);\n      commit(\"setValidationMessages\", err.response.data);\n      if (err.response.data.non_field_errors) {\n        dispatch(\"createPrompt\", {\n          type: \"error\",\n          title: \"Error!\",\n          message: err.response.data.non_field_errors,\n        });\n      }\n    }\n  },\n  async getUserDetails({ commit, getters }) {\n    try {\n      commit('setLoading', false)\n      console.log(getters.authToken)\n      const response = await axios.get(`${baseUrl}/auth/users/me`,{headers: {Authorization: `jwt ${getters.authToken}`} })\n      console.log(response.data)\n      commit('setUserDetails',response.data)\n    } catch (err) {\n      console.log(err)\n    }\n  },\n  async adminLogin({ commit, dispatch, getters }, payload){\n    try {\n      commit(\"setLoading\", true);\n      const response = await axios.post(`${baseUrl}/auth/admin/`,payload)\n      commit('setAuthToken',response.data.token)\n      dispatch(\"checkIfAdmin\")\n      dispatch('checkGroups')\n    } catch (err) {\n      console.log(err.data)\n      commit(\"setLoading\", false);\n      dispatch(\"createPrompt\", {\n        type: \"error\",\n        title: \"Forbidden\",\n        message: \"Incorrect authentication credentials.\",\n      });\n    }\n  },\n async checkIfAdmin({commit, dispatch, getters }){\n    try {\n      const response = await axios.post(`${baseUrl}/api/get-level/`, {},{headers: {Authorization: `jwt ${getters.authToken}`} })\n      commit(\"setLoading\", false);\n      if(response.data.is_admin){\n        console.log(response.data)\n        commit(\"setAdminIsAuthenticated\",true)\n        router.push({name:'Dashboard'})\n      }else{\n        dispatch(\"createPrompt\", {\n          type: \"error\",\n          title: \"Forbidden\",\n          message: \"Please enter the correct username and password for a staff account. \",\n        });\n      }\n    } catch (err) {\n      commit(\"setLoading\", false);\n      console.log(err)\n      dispatch(\"createPrompt\", {\n        type: \"error\",\n        title: \"Ooops!\",\n        message: \"Something went wrong. Please try again.\",\n      });\n    }\n  }\n};\nexport default {\n  state,\n  getters,\n  actions,\n  mutations,\n};\n"]}]}